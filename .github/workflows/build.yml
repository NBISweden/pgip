name: build

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'test-build'
    tags:
      - "*"

env:
  PARTICIPANT_DATA:

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test-build'
    permissions:
      contents: write
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Cancel Previous Runs
        if: ${{ !env.ACT }}
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: cache-conda
        uses: actions/cache@v3
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda-linux-64.lock') }}

      - name: install miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: pgip
          environment-file: conda-linux-64.lock
          use-only-tar-bz2: true
          auto-activate-base: false

      - name: Install test dependencies
        run: conda install -c conda-forge pytest pip

      - name: Install pgip dependencies
        run: |
          pip install ipykernel
          pip install bash_kernel
          python -m bash_kernel.install
          python -m ipykernel install --user --name pgip --display-name "Population Genomics in Practice (Python)"
          python -m pip install git+https://github.com/NBISweden/pgip-tools

      - name: Install dotenv
        run: |
          R -e "install.packages('dotenv', repos=c(CRAN = 'https://cran.rstudio.com/'))"

      - name: Install TinyTeX
        run: |
          R -e "install.packages(\"tinytex\", repos = \"https://ftp.acc.umu.se/mirror/CRAN/\")"
          R -e "tinytex::tlmgr_update()"
          R -e "tinytex::install_tinytex()"

      - name: Install local pgip R package
        run: |
          R -e "library(devtools); devtools::install_local('src/R/pgip')"

      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Install bcftools
        run: ./scripts/install-bcftools.sh

      - name: Add miniconda path
        run: |
          echo "$(dirname $(which R))" >> $GITHUB_PATH
          quarto check

      # - name: Render project without publishing
      #   uses: quarto-dev/quarto-actions/publish@v2
      #   if: ${{ github.event_name == 'push' }}
      #   with:
      #     to: html
      #     path: docs

      - name: "Set environment variables"
        run: |
          echo "TEXINPUTS=$TEXINPUTS:$GITHUB_WORKSPACE/src/latex" >> $GITHUB_ENV

      - name: Install dvisvgm
        run: |
          sudo apt-get install dvisvgm
          which dvisvgm
          echo $TEXINPUTS

      - name: Publish to GitHub Pages
        uses: quarto-dev/quarto-actions/publish@v2
        if: ${{ github.event_name == 'push' }}
        with:
          target: gh-pages
          path: docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
