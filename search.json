[
  {
    "objectID": "recipes/slides/index.html",
    "href": "recipes/slides/index.html",
    "title": "\n1 Recipes in slides",
    "section": "",
    "text": "Code to generate Hardy-Weinberg equilibrium plot.\n\nBash script to download data from 1000 genomeswget https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/ALL.chr22.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.vcf.gz\nwget https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/ALL.chr22.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.vcf.gz.tbi\nwget https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/integrated_call_samples_v3.20130502.ALL.panel\n\n# Make population-specific sample files\npanel=integrated_call_samples_v3.20130502.ALL.panel\nawk '{if ($2 == \"CEU\") print $1}' $panel &gt; CEU.samples.txt\nawk '{if ($2 == \"CHB\") print $1}' $panel &gt; CHB.samples.txt\nawk '{if ($2 == \"YRI\") print $1}' $panel &gt; YRI.samples.txt\n\n# Subset vcf to these files\nVCF=ALL.chr22.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.vcf.gz\nREGION=22:17000000-20000000\nfor pop in CEU CHB YRI; do\n    echo $pop\n    bcftools view -v snps -m 2 -M 2 -S $pop.samples.txt $VCF $REGION | bgzip -c &gt; $pop.$REGION.vcf.gz\n    tabix -f $pop.$REGION.vcf.gz\n    plink --vcf $pop.$REGION.vcf.gz --hardy --out $pop.$REGION\n    gzip -v $pop.${REGION}.hwe\ndone\n\n\n\nR code to plot HWE proportions# Read genotypes from files generated by hwe.sh\npops &lt;- c(\"CEU\", \"CHB\", \"YRI\")\nfn &lt;- file.path(\"data/Homo_sapiens/1000g/genotypes\", paste0(pops, \".22:17000000-20000000.hwe.gz\"))\nnames(fn) &lt;- pops\n# Make data frame from all populations\nx &lt;- do.call(\"rbind\", lapply(pops, function(p) {\n    y &lt;- cbind(population = p, read.table(fn[[p]], header = TRUE))\n    # GENO column holds genotypes as minor/het/major counts.\n    geno &lt;- do.call(\"rbind\", lapply(strsplit(y$GENO, \"/\"), as.numeric))\n    # Find n that splits geno in two equally sized lists\n    n &lt;- round(nrow(geno)/2)\n    # Because minor is always less than 50, we need to reverse the order of\n    # half of the genotypes to produce nicer plots\n    geno &lt;- rbind(geno[1:n, ], geno[(n + 1):nrow(geno), 3:1])\n    colnames(geno) &lt;- c(\"AA.cnt\", \"Aa.cnt\", \"aa.cnt\")\n    # Normalize counts to frequencies\n    geno_frq &lt;- as.data.frame(geno/apply(geno, 1, sum))\n    colnames(geno_frq) &lt;- c(\"AA\", \"Aa\", \"aa\")\n    # Calculate allele frequencies under HWE assumption\n    allele_frq &lt;- as.data.frame(cbind(geno_frq$AA + 0.5 * geno_frq$Aa, geno_frq$aa +\n        0.5 * geno_frq$Aa))\n    colnames(allele_frq) &lt;- c(\"p\", \"q\")\n    # Make one large table with genotypes, genotype frequencies, and allele\n    # frequencies\n    cbind(y, geno, geno_frq, allele_frq)\n}))\n# Pivot genotypes to value column\nx &lt;- pivot_longer(x, cols = c(\"AA\", \"Aa\", \"aa\"), names_to = \"genotype\")\np &lt;- seq(0, 1, 0.01)\nn &lt;- 10000\n# Sample 10000 snps from each population\nz &lt;- do.call(\"rbind\", by(x, x$population, function(y) {\n    y[sample(nrow(y), 10000), ]\n}))\nz$population &lt;- factor(z$population)\nlevels(z$population) &lt;- c(\"European\", \"Chinese\", \"Yoruban\")\n\n# Plotting colors\nvend &lt;- 0.8\ncols_hwe &lt;- c(viridis_pal(end = vend)(3), \"black\", \"black\")\nlt_hwe &lt;- c(rep(\"blank\", 3), \"dashed\", \"solid\")\nshape_hwe &lt;- c(rep(16, 3), NA, NA)\ncnames &lt;- c(\"aa\", \"Aa\", \"AA\", \"Hardy Weinberg Equilibrium\", \"Mean\")\nnames(cols_hwe) &lt;- cnames\nnames(lt_hwe) &lt;- cnames\nnames(shape_hwe) &lt;- cnames\n\n# Make plot\nggplot(z, aes(x = p, y = value)) + geom_point(size = 2, alpha = 0.6, aes(color = genotype)) +\n    geom_smooth(method = \"loess\", linewidth = 1, show.legend = TRUE, lty = \"dashed\",\n        aes(group = genotype, color = \"Mean\")) + geom_line(inherit.aes = FALSE, aes(x = p,\n    y = p^2, color = \"Hardy Weinberg Equilibrium\")) + geom_line(inherit.aes = FALSE,\n    aes(x = p, y = 2 * p * (1 - p), color = \"Hardy Weinberg Equilibrium\")) + geom_line(inherit.aes = FALSE,\n    aes(x = p, y = (1 - p)^2, color = \"Hardy Weinberg Equilibrium\")) + xlab(\"allele frequency\") +\n    ylab(\"genotype frequency\") + facet_grid(. ~ population) + scale_color_viridis_d(end = vend) +\n    scale_color_manual(name = NULL, values = cols_hwe, guide = guide_legend(override.aes = list(linetype = lt_hwe,\n        shape = shape_hwe)))\n\n\n\n\nR code to generate and plot allele frequency distribution# Recipe to generate genetic drift histogram. The procedure consists of\n# tracking a fixed number of allelic states for a system with two alleles (say,\n# a and A), where the variable x corresponds to the *probability* of being in a\n# particular state.\n\nlibrary(expm)  # Matrix exponential library\n\n# Number of possible allelic states. Setting this too large results in a\n# prohibitively large transition matrix\nn &lt;- 10\n\n# The x vector traces the *probability* of samples/sequences in a given allelic\n# state, where x[1]=probability of fixation for allele a, x[n+1]=probability of\n# fixation for allele A, x[i]=i/n, i=2,..., n, probability of being in state i\n# (i alleles of type a, n-i alleles of type A)\nx &lt;- vector(mode = \"numeric\", length = n + 1)  # Init x to vector of 0's\n\n# Start with state n_a = n_A; find the index corresponding to the state with\n# number of a alleles = number of A alleles and set to 1\nn_a &lt;- ceiling(length(x)/2)\nx[n_a] &lt;- 1\n\n# States 1, n+1 are absorbing states (alleles are fixed)\nclass &lt;- c(\"absorbing\", rep(\"normal\", n - 1), \"absorbing\")\nclass_col &lt;- c(\"black\", rep(\"white\", n - 1), \"black\")\n\n# Make transition matrix, where an entry p_ij states the probability of\n# transitioning from a state (i, n-i) with i alleles of type a, (n-i) alleles\n# of type A, to state (j, n-j)\ntransmat &lt;- do.call(\"rbind\", lapply(0:n, function(i) {\n    dbinom(0:n, n, i/n)\n}))\n\n# Number of generations\nt &lt;- 30\n\n# The distribution at any time point is given as the initial distribution x\n# times the transition matrix to the power of t\ndata &lt;- t(x %*% (transmat %^% t))\n\n# Make labels corresponding to the fraction of a alleles\nxlabels &lt;- unlist(lapply(0:n, function(x) {\n    sprintf(\"frac(%i, %i)\", x, n)\n}))\nxl &lt;- do.call(c, lapply(xlabels, function(l) {\n    parse(text = l)\n}))\n# Plot the results\nbarplot(height = data, beside = TRUE, col = class_col, names.arg = xl)\n\n\n\n\nR code to download dn/ds data for H.sapiens versus R.norvegicus from ensembl and plotfn &lt;- \"assets/data/hsapiens_rat.dnds.tsv\"\nif (!file.exists(fn)) {\n    library(biomaRt)\n    ensembl &lt;- useEnsembl(version = 99, biomart = \"ENSEMBL_MART_ENSEMBL\", dataset = \"hsapiens_gene_ensembl\")\n    genes &lt;- getBM(mart = ensembl, attributes = c(\"ensembl_gene_id\"))\n    hsapiens_rat &lt;- getBM(attributes = c(\"ensembl_gene_id\", \"rnorvegicus_homolog_ensembl_gene\",\n        \"rnorvegicus_homolog_dn\", \"rnorvegicus_homolog_ds\", \"rnorvegicus_homolog_orthology_type\"),\n        filters = \"ensembl_gene_id\", values = genes$ensembl_gene_id, mart = ensembl)\n    hsapiens_rat &lt;- subset(hsapiens_rat, !is.na(rnorvegicus_homolog_ds) & !is.na(rnorvegicus_homolog_dn) &\n        rnorvegicus_homolog_orthology_type == \"ortholog_one2one\")\n    hsapiens_rat$dnds &lt;- hsapiens_rat$rnorvegicus_homolog_dn/hsapiens_rat$rnorvegicus_homolog_ds\n    hsapiens_rat &lt;- subset(hsapiens_rat, !is.nan(dnds))\n    write.table(hsapiens_rat, file = \"assets/data/hsapiens_rat.dnds.tsv\", sep = \"\\t\",\n        quote = FALSE, row.names = FALSE)\n}\nx &lt;- read.table(fn, header = TRUE)\nggplot(x, aes(x = dnds)) + geom_histogram(bins = 100, aes(y = ..count../sum(..count..)),\n    fill = \"white\", color = \"black\") + xlim(0, 2) + xlab(expression(d[n] ~ \"/\" ~\n    d[s])) + ylab(\"Frequency\") + ggtitle(paste0(nrow(x), \" human-rat orthologue pairs\"))"
  },
  {
    "objectID": "recipes/slides/index.html#sec-recipe-slides-hwe",
    "href": "recipes/slides/index.html#sec-recipe-slides-hwe",
    "title": "\n1 Recipes in slides",
    "section": "",
    "text": "Code to generate Hardy-Weinberg equilibrium plot.\n\nBash script to download data from 1000 genomeswget https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/ALL.chr22.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.vcf.gz\nwget https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/ALL.chr22.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.vcf.gz.tbi\nwget https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/integrated_call_samples_v3.20130502.ALL.panel\n\n# Make population-specific sample files\npanel=integrated_call_samples_v3.20130502.ALL.panel\nawk '{if ($2 == \"CEU\") print $1}' $panel &gt; CEU.samples.txt\nawk '{if ($2 == \"CHB\") print $1}' $panel &gt; CHB.samples.txt\nawk '{if ($2 == \"YRI\") print $1}' $panel &gt; YRI.samples.txt\n\n# Subset vcf to these files\nVCF=ALL.chr22.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.vcf.gz\nREGION=22:17000000-20000000\nfor pop in CEU CHB YRI; do\n    echo $pop\n    bcftools view -v snps -m 2 -M 2 -S $pop.samples.txt $VCF $REGION | bgzip -c &gt; $pop.$REGION.vcf.gz\n    tabix -f $pop.$REGION.vcf.gz\n    plink --vcf $pop.$REGION.vcf.gz --hardy --out $pop.$REGION\n    gzip -v $pop.${REGION}.hwe\ndone\n\n\n\nR code to plot HWE proportions# Read genotypes from files generated by hwe.sh\npops &lt;- c(\"CEU\", \"CHB\", \"YRI\")\nfn &lt;- file.path(\"data/Homo_sapiens/1000g/genotypes\", paste0(pops, \".22:17000000-20000000.hwe.gz\"))\nnames(fn) &lt;- pops\n# Make data frame from all populations\nx &lt;- do.call(\"rbind\", lapply(pops, function(p) {\n    y &lt;- cbind(population = p, read.table(fn[[p]], header = TRUE))\n    # GENO column holds genotypes as minor/het/major counts.\n    geno &lt;- do.call(\"rbind\", lapply(strsplit(y$GENO, \"/\"), as.numeric))\n    # Find n that splits geno in two equally sized lists\n    n &lt;- round(nrow(geno)/2)\n    # Because minor is always less than 50, we need to reverse the order of\n    # half of the genotypes to produce nicer plots\n    geno &lt;- rbind(geno[1:n, ], geno[(n + 1):nrow(geno), 3:1])\n    colnames(geno) &lt;- c(\"AA.cnt\", \"Aa.cnt\", \"aa.cnt\")\n    # Normalize counts to frequencies\n    geno_frq &lt;- as.data.frame(geno/apply(geno, 1, sum))\n    colnames(geno_frq) &lt;- c(\"AA\", \"Aa\", \"aa\")\n    # Calculate allele frequencies under HWE assumption\n    allele_frq &lt;- as.data.frame(cbind(geno_frq$AA + 0.5 * geno_frq$Aa, geno_frq$aa +\n        0.5 * geno_frq$Aa))\n    colnames(allele_frq) &lt;- c(\"p\", \"q\")\n    # Make one large table with genotypes, genotype frequencies, and allele\n    # frequencies\n    cbind(y, geno, geno_frq, allele_frq)\n}))\n# Pivot genotypes to value column\nx &lt;- pivot_longer(x, cols = c(\"AA\", \"Aa\", \"aa\"), names_to = \"genotype\")\np &lt;- seq(0, 1, 0.01)\nn &lt;- 10000\n# Sample 10000 snps from each population\nz &lt;- do.call(\"rbind\", by(x, x$population, function(y) {\n    y[sample(nrow(y), 10000), ]\n}))\nz$population &lt;- factor(z$population)\nlevels(z$population) &lt;- c(\"European\", \"Chinese\", \"Yoruban\")\n\n# Plotting colors\nvend &lt;- 0.8\ncols_hwe &lt;- c(viridis_pal(end = vend)(3), \"black\", \"black\")\nlt_hwe &lt;- c(rep(\"blank\", 3), \"dashed\", \"solid\")\nshape_hwe &lt;- c(rep(16, 3), NA, NA)\ncnames &lt;- c(\"aa\", \"Aa\", \"AA\", \"Hardy Weinberg Equilibrium\", \"Mean\")\nnames(cols_hwe) &lt;- cnames\nnames(lt_hwe) &lt;- cnames\nnames(shape_hwe) &lt;- cnames\n\n# Make plot\nggplot(z, aes(x = p, y = value)) + geom_point(size = 2, alpha = 0.6, aes(color = genotype)) +\n    geom_smooth(method = \"loess\", linewidth = 1, show.legend = TRUE, lty = \"dashed\",\n        aes(group = genotype, color = \"Mean\")) + geom_line(inherit.aes = FALSE, aes(x = p,\n    y = p^2, color = \"Hardy Weinberg Equilibrium\")) + geom_line(inherit.aes = FALSE,\n    aes(x = p, y = 2 * p * (1 - p), color = \"Hardy Weinberg Equilibrium\")) + geom_line(inherit.aes = FALSE,\n    aes(x = p, y = (1 - p)^2, color = \"Hardy Weinberg Equilibrium\")) + xlab(\"allele frequency\") +\n    ylab(\"genotype frequency\") + facet_grid(. ~ population) + scale_color_viridis_d(end = vend) +\n    scale_color_manual(name = NULL, values = cols_hwe, guide = guide_legend(override.aes = list(linetype = lt_hwe,\n        shape = shape_hwe)))"
  },
  {
    "objectID": "recipes/slides/index.html#sec-recipe-slides-allele-frequency-distribution",
    "href": "recipes/slides/index.html#sec-recipe-slides-allele-frequency-distribution",
    "title": "\n1 Recipes in slides",
    "section": "",
    "text": "R code to generate and plot allele frequency distribution# Recipe to generate genetic drift histogram. The procedure consists of\n# tracking a fixed number of allelic states for a system with two alleles (say,\n# a and A), where the variable x corresponds to the *probability* of being in a\n# particular state.\n\nlibrary(expm)  # Matrix exponential library\n\n# Number of possible allelic states. Setting this too large results in a\n# prohibitively large transition matrix\nn &lt;- 10\n\n# The x vector traces the *probability* of samples/sequences in a given allelic\n# state, where x[1]=probability of fixation for allele a, x[n+1]=probability of\n# fixation for allele A, x[i]=i/n, i=2,..., n, probability of being in state i\n# (i alleles of type a, n-i alleles of type A)\nx &lt;- vector(mode = \"numeric\", length = n + 1)  # Init x to vector of 0's\n\n# Start with state n_a = n_A; find the index corresponding to the state with\n# number of a alleles = number of A alleles and set to 1\nn_a &lt;- ceiling(length(x)/2)\nx[n_a] &lt;- 1\n\n# States 1, n+1 are absorbing states (alleles are fixed)\nclass &lt;- c(\"absorbing\", rep(\"normal\", n - 1), \"absorbing\")\nclass_col &lt;- c(\"black\", rep(\"white\", n - 1), \"black\")\n\n# Make transition matrix, where an entry p_ij states the probability of\n# transitioning from a state (i, n-i) with i alleles of type a, (n-i) alleles\n# of type A, to state (j, n-j)\ntransmat &lt;- do.call(\"rbind\", lapply(0:n, function(i) {\n    dbinom(0:n, n, i/n)\n}))\n\n# Number of generations\nt &lt;- 30\n\n# The distribution at any time point is given as the initial distribution x\n# times the transition matrix to the power of t\ndata &lt;- t(x %*% (transmat %^% t))\n\n# Make labels corresponding to the fraction of a alleles\nxlabels &lt;- unlist(lapply(0:n, function(x) {\n    sprintf(\"frac(%i, %i)\", x, n)\n}))\nxl &lt;- do.call(c, lapply(xlabels, function(l) {\n    parse(text = l)\n}))\n# Plot the results\nbarplot(height = data, beside = TRUE, col = class_col, names.arg = xl)"
  },
  {
    "objectID": "recipes/slides/index.html#sec-recipe-slides-dn-ds-ratio-human-rat",
    "href": "recipes/slides/index.html#sec-recipe-slides-dn-ds-ratio-human-rat",
    "title": "\n1 Recipes in slides",
    "section": "",
    "text": "R code to download dn/ds data for H.sapiens versus R.norvegicus from ensembl and plotfn &lt;- \"assets/data/hsapiens_rat.dnds.tsv\"\nif (!file.exists(fn)) {\n    library(biomaRt)\n    ensembl &lt;- useEnsembl(version = 99, biomart = \"ENSEMBL_MART_ENSEMBL\", dataset = \"hsapiens_gene_ensembl\")\n    genes &lt;- getBM(mart = ensembl, attributes = c(\"ensembl_gene_id\"))\n    hsapiens_rat &lt;- getBM(attributes = c(\"ensembl_gene_id\", \"rnorvegicus_homolog_ensembl_gene\",\n        \"rnorvegicus_homolog_dn\", \"rnorvegicus_homolog_ds\", \"rnorvegicus_homolog_orthology_type\"),\n        filters = \"ensembl_gene_id\", values = genes$ensembl_gene_id, mart = ensembl)\n    hsapiens_rat &lt;- subset(hsapiens_rat, !is.na(rnorvegicus_homolog_ds) & !is.na(rnorvegicus_homolog_dn) &\n        rnorvegicus_homolog_orthology_type == \"ortholog_one2one\")\n    hsapiens_rat$dnds &lt;- hsapiens_rat$rnorvegicus_homolog_dn/hsapiens_rat$rnorvegicus_homolog_ds\n    hsapiens_rat &lt;- subset(hsapiens_rat, !is.nan(dnds))\n    write.table(hsapiens_rat, file = \"assets/data/hsapiens_rat.dnds.tsv\", sep = \"\\t\",\n        quote = FALSE, row.names = FALSE)\n}\nx &lt;- read.table(fn, header = TRUE)\nggplot(x, aes(x = dnds)) + geom_histogram(bins = 100, aes(y = ..count../sum(..count..)),\n    fill = \"white\", color = \"black\") + xlim(0, 2) + xlab(expression(d[n] ~ \"/\" ~\n    d[s])) + ylab(\"Frequency\") + ggtitle(paste0(nrow(x), \" human-rat orthologue pairs\"))"
  },
  {
    "objectID": "recipes/index.html",
    "href": "recipes/index.html",
    "title": "Code recipes",
    "section": "",
    "text": "17-Oct-2023: This page is under construction!"
  },
  {
    "objectID": "recipes/index.html#slides",
    "href": "recipes/index.html#slides",
    "title": "Code recipes",
    "section": "Slides",
    "text": "Slides\nCollection of recipes to generate data and figures for lecture notes. For full listing, see slides/index.html."
  },
  {
    "objectID": "recipes/index.html#slim-recipes",
    "href": "recipes/index.html#slim-recipes",
    "title": "Code recipes",
    "section": "SLiM recipes",
    "text": "SLiM recipes\nCollection of SLiM recipes (Haller, Ben, 2016) used to generate figures and examples. See slim/index.html for full listing."
  },
  {
    "objectID": "slides/simulation/index.html#intended-learning-outcomes",
    "href": "slides/simulation/index.html#intended-learning-outcomes",
    "title": "Simulation",
    "section": "Intended learning outcomes",
    "text": "Intended learning outcomes\nIntroduction to the coalescent and simulation in msprime, with two exercises on the coalescent and msprime. The students should be able to:\n\nDescribe need for simulations\nDemonstrate the coalescent step by step\nDetail some properties of coalescent trees\nDefine the site-frequency spectrum\nDescribe the coalescent with recombination\nPerform simple simulations in msprime"
  },
  {
    "objectID": "slides/simulation/index.html#the-wright-fisher-model-and-simulations",
    "href": "slides/simulation/index.html#the-wright-fisher-model-and-simulations",
    "title": "Simulation",
    "section": "The Wright-Fisher model and simulations",
    "text": "The Wright-Fisher model and simulations\n\n\n\n\n\n\nFigure 1: Wright-Fisher model for 50 generations, 30 individuals\n\n\n\n\n\n\n\n\n\nRecap\nModel of a population describing genealogies under the following assumptions\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\n\nForward simulation\n\n\n\n\n(p. 15 Hein et al., 2005) shows the fraction of genes without descendants. Focus on the number of descendants for one gene i, which is X ~ Bin(2N, 1/2N). Since E(X)=1, for large 2N, X is almos Po(1), such that P(no descendants) = P(X=0) = e^{-1}\nLow reproductive success: forward simulations costly!"
  },
  {
    "objectID": "slides/simulation/index.html#the-wright-fisher-model-and-simulations-1",
    "href": "slides/simulation/index.html#the-wright-fisher-model-and-simulations-1",
    "title": "Simulation",
    "section": "The Wright-Fisher model and simulations",
    "text": "The Wright-Fisher model and simulations\n\n\n\n\n\n\nFigure 2: Wright-Fisher model for 50 generations, 30 individuals\n\n\n\n\n\n\n\n\n\n\nFigure 3: Reproductive success in percent per generation.\n\n\n\n\n\nMean reproductive success = 63.4%. Can show for large populations P(no descendants)=\\(1 - e^{-1} \\approx 0.632\\)\n\n\n\n(p. 15 Hein et al., 2005) shows the fraction of genes without descendants. Focus on the number of descendants for one gene i, which is X ~ Bin(2N, 1/2N). Since E(X)=1, for large 2N, X is almos Po(1), such that P(no descendants) = P(X=0) = e^{-1}\nLow reproductive success: forward simulations costly!"
  },
  {
    "objectID": "slides/simulation/index.html#forward-and-backward-simulation",
    "href": "slides/simulation/index.html#forward-and-backward-simulation",
    "title": "Simulation",
    "section": "Forward and backward simulation",
    "text": "Forward and backward simulation\n\n\n\n\n\n\nFigure 4: Forward simulation.\n\n\n\n\n\n\n\n\n\n\nFigure 5: Backward simulation.\n\n\n\n\n\n\n\nSimulated nodes are filled with black. Genealogy of interest is highlighted in thick black lines.\n\nForward simulations: require that we keep track of the entire population -&gt; computationally challenging.\nBackward simulations: require only tracking the sample -&gt; quicker. However, cannot model selection."
  },
  {
    "objectID": "slides/simulation/index.html#why-do-we-want-simulations-anyway",
    "href": "slides/simulation/index.html#why-do-we-want-simulations-anyway",
    "title": "Simulation",
    "section": "Why do we want simulations anyway?",
    "text": "Why do we want simulations anyway?\n\n\nNull model\n\nGenerate neutral null distributions to compare with observed data\n\nExploration\n\nUse to gain understanding and improve interpretation of mutational processes\n\nMathematical complexity\n\nNo analytical solutions for linked selection and the like \\(\\rightarrow\\) must use simulations\n\nBenchmarking\n\nUse to generate test data with known properties on which to test and evaluate new methods\n\nModel training\n\nGenerate training data for machine learning, e.g., Approximate Bayesian Computation (ABC) or Neural Networks (NNs)"
  },
  {
    "objectID": "slides/simulation/index.html#coalescent-simulations",
    "href": "slides/simulation/index.html#coalescent-simulations",
    "title": "Simulation",
    "section": "Coalescent simulations",
    "text": "Coalescent simulations\n\n\nThe coalescent simulates the genealogy of a sample of individuals on which mutations are “sprinkled” according to a Poisson process.\n\nSimulate ancestry (genealogy)\n\n\n\n\n\n\n\n\n\n\nNB: only the samples on the genealogy are needed, but the entire population is shown as a means to compare with forward simulations."
  },
  {
    "objectID": "slides/simulation/index.html#coalescent-simulations-1",
    "href": "slides/simulation/index.html#coalescent-simulations-1",
    "title": "Simulation",
    "section": "Coalescent simulations",
    "text": "Coalescent simulations\n\n\nThe coalescent simulates the genealogy of a sample of individuals on which mutations are “sprinkled” according to a Poisson process.\n\nSimulate ancestry (genealogy)\nSimulate mutations"
  },
  {
    "objectID": "slides/simulation/index.html#coalescent-simulations-2",
    "href": "slides/simulation/index.html#coalescent-simulations-2",
    "title": "Simulation",
    "section": "Coalescent simulations",
    "text": "Coalescent simulations\n\n\nThe coalescent simulates the genealogy of a sample of individuals on which mutations are “sprinkled” according to a Poisson process.\n\nSimulate ancestry (genealogy)\nSimulate mutations\n\n\nExercise\n\nHow many mutations are common to all samples? How many mutations does sample 1 have? Sample 2?\nAssuming the ancestral state is denoted 0 (prior to the first generation) and the derived state 1, what are the sequences of the samples?\n\n\n\n\n\n\n\n\n\nAnswers to exercise: 2 mutations are common to all samples. Sample 1 has 3 mutations, sample 2 has 4.\n(arbitrarily) ordering the sites from top to bottom (oldest mutation comes first), the sequences are:\n1: 11100 2: 11101 3: 11010"
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes"
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-1",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-1",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)"
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-2",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-2",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\nChoose two chromosomes at random to coalesce"
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-3",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-3",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\nChoose two chromosomes at random to coalesce\nMerge the two lineages and set \\(i \\rightarrow i - 1\\)"
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-4",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-4",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\nChoose two chromosomes at random to coalesce\nMerge the two lineages and set \\(i \\rightarrow i - 1\\)\nIf \\(i&gt;1\\), go to step 2; if not, stop."
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-5",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-5",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\nChoose two chromosomes at random to coalesce\nMerge the two lineages and set \\(i \\rightarrow i - 1\\)\nIf \\(i&gt;1\\), go to step 2; if not, stop."
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-6",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-6",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\nChoose two chromosomes at random to coalesce\nMerge the two lineages and set \\(i \\rightarrow i - 1\\)\nIf \\(i&gt;1\\), go to step 2; if not, stop."
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-7",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-7",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\nChoose two chromosomes at random to coalesce\nMerge the two lineages and set \\(i \\rightarrow i - 1\\)\nIf \\(i&gt;1\\), go to step 2; if not, stop."
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-8",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-8",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\nChoose two chromosomes at random to coalesce\nMerge the two lineages and set \\(i \\rightarrow i - 1\\)\nIf \\(i&gt;1\\), go to step 2; if not, stop."
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-9",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-9",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\nChoose two chromosomes at random to coalesce\nMerge the two lineages and set \\(i \\rightarrow i - 1\\)\nIf \\(i&gt;1\\), go to step 2; if not, stop."
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-10",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-10",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\\(^1\\)\nChoose two chromosomes at random to coalesce\nMerge the two lineages and set \\(i \\rightarrow i - 1\\)\nIf \\(i&gt;1\\), go to step 2; if not, stop.\n\n\n\\(^1\\): The exponential can be parametrized in two different ways, so that the parameter to the function is either \\(\\lambda\\) or \\(\\beta=1/\\lambda\\)."
  },
  {
    "objectID": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-11",
    "href": "slides/simulation/index.html#simulating-genealogies-hahn_molecularpopulationgenetics_2019-p.-115-11",
    "title": "Simulation",
    "section": "Simulating genealogies (Hahn, 2019, p. 115)",
    "text": "Simulating genealogies (Hahn, 2019, p. 115)\n\n\n\nStart with \\(i=n\\) chromosomes\nChoose time to next coalescent event from an exponential distribution with parameter \\(\\lambda=i(i-1)/2\\)\\(^1\\)\nChoose two chromosomes at random to coalesce\nMerge the two lineages and set \\(i \\rightarrow i - 1\\)\nIf \\(i&gt;1\\), go to step 2; if not, stop.\n\n\n\\(^1\\): The exponential can be parametrized in two different ways, so that the parameter to the function is either \\(\\lambda\\) or \\(\\beta=1/\\lambda\\).\n\n\n\n\n\n\nFigure 6: A simulated genealogy. The \\(T_i\\) represent the waiting time when the state has \\(i\\) chromosomes."
  },
  {
    "objectID": "slides/simulation/index.html#some-properties-of-the-tree",
    "href": "slides/simulation/index.html#some-properties-of-the-tree",
    "title": "Simulation",
    "section": "Some properties of the tree",
    "text": "Some properties of the tree\n\n\n\n\n\n\nFigure 7: A coalescent tree with numbered nodes. Nodes 1-5 correspond to the samples and are leaves. The internal nodes 6-8 (and the unlabelled root) are ancestral chromosomes (unsampled). The \\(T_i\\) represent the waiting time when the state has \\(i\\) chromosomes, whereas \\(\\tau_i\\) correspond to the branch length from node \\(i\\) to its parent.\n\n\n\n\n\n\nExpected waiting time to coalesce when \\(i\\) lineages: \\(E(T_i) = \\frac{2}{i(i-1)}\\)\nBranch lengths can be derived from waiting times. For instance, \\(\\tau_1=\\tau_2=T_5+T_4\\) and \\(\\tau_4=\\tau_5=T_5\\)\nTime to the most recent common ancestor (MRCA): \\(T_{MRCA} = \\sum_{i=2}^n T_i\\)\nwith expected value \\(E(T_{MRCA}) = \\sum_{i=2}^nE(T_i) = 2\\left(1 - \\frac{1}{n}\\right)\\)\nThe expected total tree height is \\(E(T_{total}) = \\sum_{i=2}^n iE(T_i) = 2\\sum_{i=2}^n\\frac{1}{i-1}\\)\n\n\n\nNote that the parametrization is in 2N generations (continuous time approximation); some use N, others 4N, and so on.\nExpected waiting time: the first expression follows from the fact that the waiting time, given \\(i\\) chromosomes, is exponentially distributed with parameter \\(\\lambda=i(i-1)/2\\). For an exponentially distributed variable \\(X\\), the expected value is simply \\(E(X)=1/\\lambda\\).\nOther relations are most easily derived by studying the tree and summing up relevant branches or time intervals."
  },
  {
    "objectID": "slides/simulation/index.html#coalescent-simulations-vary-in-topology-and-height",
    "href": "slides/simulation/index.html#coalescent-simulations-vary-in-topology-and-height",
    "title": "Simulation",
    "section": "Coalescent simulations vary in topology and height",
    "text": "Coalescent simulations vary in topology and height\n\n\nCode\nimport msprime\nseeds = [12, 15, 16, 34, 63, 30]\ntrees = [msprime.sim_ancestry(3, random_seed=x) for x in seeds]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExamples of coalescent simulations. Note the variation in tree topology and height."
  },
  {
    "objectID": "slides/simulation/index.html#diminishing-returns-of-adding-more-samples",
    "href": "slides/simulation/index.html#diminishing-returns-of-adding-more-samples",
    "title": "Simulation",
    "section": "Diminishing returns of adding more samples",
    "text": "Diminishing returns of adding more samples\n\nFigure 8: Dependence of \\(E[T_{MRCA}]\\) and \\(E[T_{total}]\\) on the sample size n. Already at low values of n the value of \\(E[T_{MRCA}]\\) is close to its asymptotic value, which has practical consequences for the measurement of DNA variation. Adapted from Wakeley (2008), Fig. 3.3.\nAdding a sample only adds \\(2/n\\) to the total tree length. Also, adding a sample will add little to \\(T_{MRCA}\\), or equivalently, will most likely add a very recent coalescent event to the tree for large enough \\(n\\). Note that \\(n=20\\) here is equivalent to 10 diploid individuals."
  },
  {
    "objectID": "slides/simulation/index.html#adding-mutations",
    "href": "slides/simulation/index.html#adding-mutations",
    "title": "Simulation",
    "section": "Adding mutations",
    "text": "Adding mutations\n\n\n\n\n\n\nFigure 9: Adding mutations on a coalescent genealogy.\n\n\n\n\n\n\nMutations are added by placing them on branches, where the probability of ending up on a branch \\(\\tau_i\\) is equal to its normalized length, where normalization is by the total tree branch length:\n\\[\nP(\\text{mutation on branch }i) = \\frac{\\tau_i}{\\sum_j\\tau_j} =\n\\frac{\\tau_i}{T_{total}}\n\\]\nThe total number of segregating sites \\(S\\) to be thrown on the tree is modelled as a Poisson random variable which expresses the probability of a given number of events in time \\(t\\):\n\\[\nS = Po(\\theta/2T_{total})\n\\]\n\n\n\nSofar we have looked at genealogies; now add mutations.\nIn words: sample a number of segregating sites from the Poisson distribution, and “sprinkle” them on the tree.\nThe parametrization \\(\\lambda = \\theta / 2\\) is defined with reference to the average heterozygosity between two sequences being \\(\\theta\\) (by Tajima; see Wakeley (2008), p. 92)"
  },
  {
    "objectID": "slides/simulation/index.html#the-coalescent-and-diversity",
    "href": "slides/simulation/index.html#the-coalescent-and-diversity",
    "title": "Simulation",
    "section": "The coalescent and diversity",
    "text": "The coalescent and diversity\n\n\n\n\n\n\n\n\nMany statistical quantities can be related to the site frequency spectrum (SFS), which is a summary of the frequencies of the segregating sites. Let \\(\\xi_i\\) be the number of chromosomes in the sample with \\(i\\) minor alleles. In the figure we have 6 mutations on \\(n=4\\) chromosomes.\n\n\n\n\n\n\nName\nCount\n\n\n\n\n\\(\\xi_1\\)\nsingleton\n4\n\n\n\\(\\xi_2\\)\ndoubleton\n2\n\n\n\\(\\xi_3\\)\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote that the number of segregating sites is \\(S=\\sum_{i=1}^{n-1}\\xi_i\\)\nIn this notation one can show that \\(\\pi\\), the nucleotide diversity, is\n\\[\n\\pi = \\frac{\\sum_{i=1}^{n-1}i(n-i)\\xi_i}{n(n-1)/2}\n\\]\n\n\n\nExercise\nCalculate the nucleotide diversity and compare the results from the foundation lecture\n\n\n\\[\n\\pi = \\frac{1(4-1)\\xi_1 + 2(4-2)\\xi_2 + 3(4-3)\\xi_3}{4(4-1)/2} =\n\\frac{1}{6}\\left(12 + 8 + 0\\right) = 3\\frac{1}{3}\n\\]\n\n\n\n\nExercise:\n\\[\n\\pi = \\frac{1(4-1)\\xi_1 + 2(4-2)\\xi_2 + 3(4-3)\\xi_3}{4(4-1)/2}\n= \\frac{3*4 + 4*2 + 3*0}{6} = \\frac{20}{6} = \\frac{8}{3}\n\\]"
  },
  {
    "objectID": "slides/simulation/index.html#the-impact-of-topology-on-the-sfs",
    "href": "slides/simulation/index.html#the-impact-of-topology-on-the-sfs",
    "title": "Simulation",
    "section": "The impact of topology on the SFS",
    "text": "The impact of topology on the SFS\n\n\n\n\n\nFigure 10: Interpretation of neutrality tests (Ferretti et al., 2017)\n\n\n\n\n\n\n\n\nFigure 11: The SFS under neutrality and selection\n\n\n\n\nMany tests for selection are based on the SFS which in turn is influenced by the topology of the tree.\n\n\n\nTake home: topologies influence shape of SFS\nExample: Tajima’s D\nTests common versus rare alleles. Numerator compares nucleotide diversity \\(\\pi\\) to Watterson’s theta, \\(\\theta_W\\).\n\nD &lt; 0\n\nrecent population increase or positive selection\n\nD &gt; 0\n\npopulation contraction or balancing selection"
  },
  {
    "objectID": "slides/simulation/index.html#on-non-recombining-chromosomes-and-assortment",
    "href": "slides/simulation/index.html#on-non-recombining-chromosomes-and-assortment",
    "title": "Simulation",
    "section": "On non-recombining chromosomes and assortment",
    "text": "On non-recombining chromosomes and assortment\n\n\n\n\n\n\n\nBoth siblings inherit chromosome from paternal grandfather\nChromosomes coalesce at father\n\n\n\n\n\n\n\nSiblings inherit different grandparental chromosomes \\(\\Rightarrow\\) chromosomes coalesce God knows when in the past\nGenealogies differ\n\n\n\n\nNB: the right genealogy is so small the sequences don’t coalesce. The following slide will show a larger genealogy where all sequence coalesce."
  },
  {
    "objectID": "slides/simulation/index.html#the-ancestral-recombination-graph",
    "href": "slides/simulation/index.html#the-ancestral-recombination-graph",
    "title": "Simulation",
    "section": "The ancestral recombination graph",
    "text": "The ancestral recombination graph\n  \n\nY. C. Brandt et al. (2022, fig. 1a)\n\n\nProperties:\n\nmarginal trees constitute a sequence of trees (tree sequence) along a chromosome\neach tree represents the genealogy of a non-recombining part of the chromosome\nneighbouring trees are correlated\n\nInterpretation: chromosomes are mosaics of non-recombining units\n\n\nGoing backwards in time, we now have two events to track. We have already encountered coalescence, that is, the merging of lineages. We now also need to monitor recombination events, at which point a genealogy splits into two separate paths. A recombination event takes place on a sequence, such that the genealogical history of the recombined sequence differs on either side of the recombination breakpoint. In the ARG, by convention the sequence to the left of the breakpoint takes the left path, the sequence to the right the right path.\nThe end consequence of recombination is that the chromosome/sequence will consist of non-recombining units with different genealogical histories. However, neighbouring genealogies will be similar - they are correlated - a fact that is of importance for the tree sequence data structure used in msprime."
  },
  {
    "objectID": "slides/simulation/index.html#the-ancestral-recombination-graph-as-sequence-of-trees",
    "href": "slides/simulation/index.html#the-ancestral-recombination-graph-as-sequence-of-trees",
    "title": "Simulation",
    "section": "The ancestral recombination graph as sequence of trees",
    "text": "The ancestral recombination graph as sequence of trees\n\n\n\n\nThe ancestral recombination graph as a tree sequence (Baumdicker et al., 2022, fig. 5)\n\n\n\n\nProperties:\n\nmarginal trees constitute a sequence of trees (tree sequence) along a chromosome\neach tree represents the genealogy of a non-recombining part of the chromosome\nneighbouring trees are correlated\n\nInterpretation: chromosomes are mosaics of non-recombining units"
  },
  {
    "objectID": "slides/simulation/index.html#msprime-is-a-fast-coalescent-simulator",
    "href": "slides/simulation/index.html#msprime-is-a-fast-coalescent-simulator",
    "title": "Simulation",
    "section": "msprime is a fast coalescent simulator",
    "text": "msprime is a fast coalescent simulator\nOriginal coalescent simulator implementions assumed small sample sizes and could only simulate short recombining sequences. msprime was developed to address these shortcomings as today we have\n\nchromosome-level assemblies that require full treatment of recombination (very complex problem)\nbiobank datasets consisting of 100’s of thousands of samples\n\n\n\nFeatures\n\ncan simulate millions of whole chromosomes\nwell-designed mature API\nsuccinct data structure (tree sequences) has led to advances in forwards-time simulation\ncan be used together with forwards-time simulators\n\n\nLimitations\n\nassumes neutrality - can’t simulate selection"
  },
  {
    "objectID": "slides/simulation/index.html#msprime-stores-variation-data-as-tree-sequences",
    "href": "slides/simulation/index.html#msprime-stores-variation-data-as-tree-sequences",
    "title": "Simulation",
    "section": "msprime stores variation data as tree sequences",
    "text": "msprime stores variation data as tree sequences\n\nTree sequences (Baumdicker et al., 2022, fig. 2)"
  },
  {
    "objectID": "slides/simulation/index.html#tree-sequences-compress-data",
    "href": "slides/simulation/index.html#tree-sequences-compress-data",
    "title": "Simulation",
    "section": "Tree sequences compress data",
    "text": "Tree sequences compress data\n\nData compression (Kelleher et al., 2019, fig. 1c)"
  },
  {
    "objectID": "slides/simulation/index.html#simulating-ancestry-with-msprime",
    "href": "slides/simulation/index.html#simulating-ancestry-with-msprime",
    "title": "Simulation",
    "section": "Simulating ancestry with msprime",
    "text": "Simulating ancestry with msprime\n\nFrom msprime quickstart\n\n\nimport msprime\n# Simulate an ancestral history for 3 diploid samples under the coalescent\n# with recombination on a 5kb region with human-like parameters.\nts = msprime.sim_ancestry(\n    samples=3,\n    recombination_rate=1e-8,\n    sequence_length=5_000,\n    population_size=10_000,\n    random_seed=123456)\nprint(ts.draw_svg())\n\n\n\nGenome position0141782400150003158402691013315840269101231584026910113501784291011"
  },
  {
    "objectID": "slides/simulation/index.html#simulating-mutations-with-msprime",
    "href": "slides/simulation/index.html#simulating-mutations-with-msprime",
    "title": "Simulation",
    "section": "Simulating mutations with msprime",
    "text": "Simulating mutations with msprime\n\nimport msprime\nts = msprime.sim_ancestry(\n    samples=3,\n    recombination_rate=1e-8,\n    sequence_length=5_000,\n    population_size=10_000,\n    random_seed=123456)\nmutated_ts = msprime.sim_mutations(ts, rate=1e-8, random_seed=54321)\nprint(mutated_ts.draw_svg())\n\n\n\nGenome position01417824001500031584026901013315840269110123315840262910113501784291011"
  },
  {
    "objectID": "slides/simulation/index.html#slim",
    "href": "slides/simulation/index.html#slim",
    "title": "Simulation",
    "section": "SLiM",
    "text": "SLiM\nSLiM (Selection on Linked Mutations) (Haller & Messer, 2019) is a forwards-time simulator. As its name implies, it models selection and thus is a complement to coalescent-based simulators.\n\n\nWhy SLiM?\n\nflexibility - scripting language Eidos allows for modelling complex scenarios with little code\nperformance - optimized code base\nGUI - interactive execution and graphical debugging\n\n\nHaller & Messer (2022)"
  },
  {
    "objectID": "slides/simulation/index.html#forward-simulation-in-slim-1",
    "href": "slides/simulation/index.html#forward-simulation-in-slim-1",
    "title": "Simulation",
    "section": "Forward simulation in SLiM",
    "text": "Forward simulation in SLiM\n\n\n\nExecution of first() events\nExecution of early() events\nGeneration of offspring; for each offspring:\n\nChoose source subpop for parental individuals, based on migration rates\nChoose parent 1, based on cached fitness values\nChoose parent 2, based on fitness and any defined mateChoice() callbacks\nGenerate the candidate offspring, with mutation and recombination (including mutation() and recombination() callbacks)\nSuppress/modify the candidate, using defined modifyChild() callbacks\n\nRemoval of fixed mutations unless convertToSubstitution==F\nOffspring become parents\nExecution of late() events\nFitness recalculation using mutationEffect() and fitnessEffect() callbacks\nTick/cycle count increment\n\n\n\n\n\n\nFigure 12: Forward simulation.\n\n\n\n\n\n\n\n\nSLiM works forward in time according to a tick cycle, which basically is a counter of time steps.\nHaller & Messer (2019), pp. 603–610 describes the steps in more details; some clarifying comments are added belowe wrt to the slide flowchart. There is a lot to unpack here, and the summary flowchart captures most of the essentials.\n\nfirst events: prior to generation of offspring; don’t affect fitness. Rare use.\nearly: catch-all event to do things before generation of offspring\ngeneration of offspring\n\nChoose source subpop for parental individuals, based on migration rates\nChoose parent 1, based on cached fitness values\nChoose parent 2, based on fitness and any defined mateChoice() callbacks\nGenerate the candidate offspring, with mutation and recombination (including mutation() and recombination() callbacks)\nSuppress/modify the candidate, using defined modifyChild() callbacks\n\nRemoval of fixed mutations unless convertToSubstitution==F - for simulation efficiency reasons\nOffspring become parents\nExecution of late() events - e.g., changing of selection or dominance coefficients\nFitness recalculation using mutationEffect() and fitnessEffect() callbacks\nTick/cycle count increment"
  },
  {
    "objectID": "slides/simulation/index.html#simple-neutral-simulation-in-slim",
    "href": "slides/simulation/index.html#simple-neutral-simulation-in-slim",
    "title": "Simulation",
    "section": "Simple neutral simulation in SLiM",
    "text": "Simple neutral simulation in SLiM\n\n// set up a simple neutral simulation\ninitialize()\n{\n// set the overall mutation rate\ninitializeMutationRate(1e-7);\n// m1 mutation type: neutral\ninitializeMutationType(\"m1\", 0.5, \"f\", 0.0);\n// g1 genomic element type: uses m1 for all mutations\ninitializeGenomicElementType(\"g1\", m1, 1.0);\n// uniform chromosome of length 100 kb\ninitializeGenomicElement(g1, 0, 99999);\n// uniform recombination along the chromosome\ninitializeRecombinationRate(1e-8);\n}\n// create a population of 500 individuals\n1 early()\n{\nsim.addSubpop(\"p1\", 500);\n}\n// run to tick 10000\n10000 early()\n{\nsim.simulationFinished();\n}\n\nComes with a huge manual (Haller & Messer, 2022) (700+ pages!)"
  },
  {
    "objectID": "slides/simulation/index.html#recapitation---combining-the-best-of-two-worlds",
    "href": "slides/simulation/index.html#recapitation---combining-the-best-of-two-worlds",
    "title": "Simulation",
    "section": "Recapitation - combining the best of two worlds",
    "text": "Recapitation - combining the best of two worlds\n\n\nA recent addition to SLiM is that it records data in tree sequence format (as in msprime)  we can combine backward and forward simulations!\n\n\n\nBackward simulation that adds coalescent (neutral) history\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForward simulation with selection or some other process that isn’t supported by the coalescent"
  },
  {
    "objectID": "slides/simulation/index.html#simulation-of-null-distributions",
    "href": "slides/simulation/index.html#simulation-of-null-distributions",
    "title": "Simulation",
    "section": "Simulation of null distributions",
    "text": "Simulation of null distributions\n\n\n\nFigure 13: Empirical distribution function of SweepFinder2 composite likelihood ratio (CLR) scores from observed data versus null simulations for three populations of squash bee (E. pruinosa). msprime was used to simulate data (without selection) using the inferred demographic model and recombination map. The eastern population in particular shows signs of selective sweeps. Pope et al. (2023), Fig S8.\n\n\n\n\n\nAuthors inferred demographic history and recombination map. The inferred values were used to simulate data with msprime. SweepFinder2 (DeGiorgio et al., 2016) was used to calculate composite likelihood ratio (CLR) scores on both observed and simulated data to assess significance quantiles.\n\n\nThe details of the sweep finding / paper are not the main point here; rather, we want to highlight the use of simulations to generate null distribution scores (here, for CLR values) such that significance quantiles can be derived and applied to the observed data.\nOriginal figure legend:\n\nEmpiricial distribution functions of SWEEPFINDER 2 composite likelihood ratio (CLR) scores from the observed data and null simulations for each major E. pruinosa lineage (log-transformed for visualization). The null simulations were generated using the inferred demographic model and recombination maps (see Methods in main text). The observed and null distributions match each other quite closely in the Mexican lineage (MX). In the Western lineage (CO), the tail of the CLR score distribution deviates slightly from the null simulations. In the Eastern lineage (PA), the tail of the observed CLR score distribution is extremely heavy relative to the null. This suggests the existence of selective sweeps in both CO and PA, but especially in PA"
  },
  {
    "objectID": "slides/simulation/index.html#simulations-of-genomic-landscapes-in-monkeyflower",
    "href": "slides/simulation/index.html#simulations-of-genomic-landscapes-in-monkeyflower",
    "title": "Simulation",
    "section": "Simulations of genomic landscapes in monkeyflower",
    "text": "Simulations of genomic landscapes in monkeyflower\n\n\n\n\n\nFigure 14: Sampling locations\n\n\n\n\n\n\n\n\nFigure 15: Genomic landscapes simulated under different divergence histories.\n\n\n\n\n\n\nMonkeyflower (Mimulus aurantiacus) radiation in California shows wide adaptive range and phenotypic diversity. Stankowski et al. (2019) et al use simulations (SLiM and msprime) to shed light on processes that shape genomic landscapes, which are correlated between species.\n\nWe will look more closely at this system tomorrow.\n\n\nSimulations are based on variations of a neutral base model that starts out with an ancestral population (N=10,000) that after 10N generation splits to two daughter populations (N=10,000 each) and are simulated another 10N generations. The chromosome is 21Mbp (similar in size to a monkeyflower chromosome) consisting of a central neutrally evolving region flanked by two regions where non-neutral processes are “allowed”. Models are:\n\nneutral\nBGS (non-neutral mutations are deleterious)\nBateson-Dobzhansky-Muller incompatibility (BDMI); after split, fraction variants deleterious in one population, neutral in other\npositive selection\nBGS and positive selection\nlocal adaptation; 4 but also after split some variants beneficial in one population, neutral in other\n\nFigure caption:\n\nFig 7. Genomic landscapes simulated under different divergence histories. Each row of plots shows patterns of within- and between-population variation (π, dxy, and FST) across the chromosome (500-kb windows) at 5 time points (N generations, where N = 10,000) during one of the scenarios The selection parameter (Ns, where s = Ns/N), proportion of deleterious (−) and positive mutations (+), and number of migrants per generation (Nm; 0 unless stated) for these simulations are as follows: (i) neutral divergence (no selection), (ii) BGS (−Ns = 100; −prop = 0.1), (iii) BDMI (−Ns = 100, −prop = 0.05, Nm = 0.1), (iv) positive selection (+Ns = 100, +prop = 0.001), (v) BGS and positive selection (−Ns = 100, −prop = 0.1; +Ns = 100, +prop = 0.005), and (vi) local adaptation (+Ns = 100, +prop = 0.001, Nm = 0.1). The gray boxes in the first column show the areas of the chromosome that are experiencing selection, while the white central area evolves neutrally. Note that π (in populations a and b) and dxy have been mean centered so they can be viewed on the same scale. Uncentered values and additional simulations with different parameter combinations and more time points can be found in S13 Fig. BDMI, Bateson-Dobzhansky-Muller incompatibility; BGS, background selection."
  },
  {
    "objectID": "slides/simulation/index.html#neural-network-recombination-landscape-prediction",
    "href": "slides/simulation/index.html#neural-network-recombination-landscape-prediction",
    "title": "Simulation",
    "section": "Neural network recombination landscape prediction",
    "text": "Neural network recombination landscape prediction\n\n\n\n\nFigure 16: Cartoon of Recombination Landscape Estimation using Recurrent Neural Networks (ReLERNN) workflow (Adrion et al., 2020)\n\n\n\n\n\nUse msprime simulations to generate training data for neural network.\n\nMethods paper; one of the first examples of using msprime simulations to generate training data for a neural network.\nFigure caption:\n\nA cartoon depicting a typical workflow using ReLERNN’s four modules (shaded boxes) for (A) individually sequenced genomes or (B) pooled sequences. ReLERNN can optionally (dotted lines) utilize output from stairwayplot, SMC++, and MSMC to simulate under a demographic history with msprime. Training inlays show the network architectures used, with the GRU inlay in (B) depicting the gated connections within each hidden unit. Here, r, z, ht, and ht˜ are the reset gate, update gate, activation, and candidate activation, respectively (Cho et al. 2014). The genotype matrix encodes alleles as reference (−1), alternative (1), or padded/missing data (0; not shown). Variant positions are encoded along the real number line (0–1)."
  },
  {
    "objectID": "slides/simulation/index.html#bibliography",
    "href": "slides/simulation/index.html#bibliography",
    "title": "Simulation",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nAdrion, J. R., Galloway, J. G., & Kern, A. D. (2020). Predicting the Landscape of Recombination Using Deep Learning. Molecular Biology and Evolution, 37(6), 1790–1808. https://doi.org/10.1093/molbev/msaa038\n\n\nBaumdicker, F., Bisschop, G., Goldstein, D., Gower, G., Ragsdale, A. P., Tsambos, G., Zhu, S., Eldon, B., Ellerman, E. C., Galloway, J. G., Gladstein, A. L., Gorjanc, G., Guo, B., Jeffery, B., Kretzschumar, W. W., Lohse, K., Matschiner, M., Nelson, D., Pope, N. S., … Kelleher, J. (2022). Efficient ancestry and mutation simulation with msprime 1.0. Genetics, 220(3), iyab229. https://doi.org/10.1093/genetics/iyab229\n\n\nDeGiorgio, M., Huber, C. D., Hubisz, M. J., Hellmann, I., & Nielsen, R. (2016). SweepFinder2: Increased sensitivity, robustness and flexibility. Bioinformatics, 32(12), 1895–1897. https://doi.org/10.1093/bioinformatics/btw051\n\n\nFerretti, L., Ledda, A., Wiehe, T., Achaz, G., & Ramos-Onsins, S. E. (2017). Decomposing the Site Frequency Spectrum: The Impact of Tree Topology on Neutrality Tests. Genetics, 207(1), 229–240. https://doi.org/10.1534/genetics.116.188763\n\n\nHahn, M. (2019). Molecular Population Genetics (First). Oxford University Press.\n\n\nHaller, B. C., & Messer, P. W. (2019). SLiM 3: Forward Genetic Simulations Beyond the Wright. Molecular Biology and Evolution, 36(3), 632–637. https://doi.org/10.1093/molbev/msy228\n\n\nHaller, B. C., & Messer, P. W. (2022). SLiM: An Evolutionary Simulation Framework.\n\n\nHein, J., Schierup, M. H., & Wiuf, C. (2005). Gene genealogies, variation and evolution: A primer in coalescent theory. Oxford University Press. https://books.google.se/books?id=CCmLNAEACAAJ\n\n\nKelleher, J., Wong, Y., Wohns, A. W., Fadil, C., Albers, P. K., & McVean, G. (2019). Inferring whole-genome histories in large population datasets. Nature Genetics, 51(9), 1330–1338. https://doi.org/10.1038/s41588-019-0483-y\n\n\nPope, N. S., Singh, A., Childers, A. K., Kapheim, K. M., Evans, J. D., & López-Uribe, M. M. (2023). The expansion of agriculture has shaped the recent evolutionary history of a specialized squash pollinator. Proceedings of the National Academy of Sciences, 120(15), e2208116120. https://doi.org/10.1073/pnas.2208116120\n\n\nStankowski, S., Chase, M. A., Fuiten, A. M., Rodrigues, M. F., Ralph, P. L., & Streisfeld, M. A. (2019). Widespread selection and gene flow shape the genomic landscape during a radiation of monkeyflowers. PLOS Biology, 17(7), e3000391. https://doi.org/10.1371/journal.pbio.3000391\n\n\nWakeley, J. (2008). Coalescent Theory: An Introduction (1st Edition edition). Roberts and Company Publishers.\n\n\nY. C. Brandt, D., Wei, X., Deng, Y., Vaughn, A. H., & Nielsen, R. (2022). Evaluation of methods for estimating coalescence times using ancestral recombination graphs. Genetics, iyac044. https://doi.org/10.1093/genetics/iyac044\n\n\n\n\nSimulation primer"
  },
  {
    "objectID": "slides/pgip/index.html#intended-learning-outcomes",
    "href": "slides/pgip/index.html#intended-learning-outcomes",
    "title": "Population genomics in practice",
    "section": "Intended learning outcomes",
    "text": "Intended learning outcomes\nCourse\n\nPresent minimum toolkit of methods that should be known to anyone starting out in population genomics\nSufficiently small for one-week workshop\n\nLecture\n\nPresent practical example of toolkit as applied in (Fuller et al., 2020)\nBriefly discuss baseline model (Johri et al., 2022)\n\n\n\nAim of lecture is to:\n\npresent a practical application of commonly used methods in population genomics\nlink population genomics to population genetics\ndiscuss statistical inference and the need of a baseline model with which to compare observations and conclusions\n\nWhat is population genomics?\nPoints from (Hahn, 2019, pp. 249–250):\n\nwhole-genome data instead of single loci - population genomics is population genetics for whole-genome sequences\n\nif only this, not too exciting\n\nmajor promise: enables analyses not possible for single loci or that require genomic context\naddresses interactions between different forces, notably selection and demographic history\n\nSome applications\n\ngenome-wide scans for selection\n\nselection vs demography (p. 251)\n\nmethods for genome-wide scans (p. 258)\n\nCaveats\n\nnon-independence (p. 267)\n\ndifferent statistics rely on similar input\noverlapping peaks from different statistics not independent\n\n\nGeneral points\n(Hartl & Clark, 1997, pp. 469–470):\n\nmore emphasis on differences within populations\ngoal: understand differences among genomes -&gt; requires complete sequence data from multiple individuals\n\n(Li & Durbin, 2011, supplementary notes, p. 6) on the use of PSMC on autosomes:\n“…highly consistent except for the very recent history, demonstrating the power of using whole-genome data.”"
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\nMotivation: corals are facing hard times and to prevent future losses of coral cover a better understanding of genetics is warranted.\n\n\n\n\nFigure 1: Genome assembly and sample collection.\n\n\n\n\nFuller et al. (2020)\n\n\n\n\n(Fuller et al., 2020) is an example of a population genomics study that applies methods that could be seen as a basic foundation of population genomics. We believe these present a minimum toolkit of methods that should be known to anyone starting out in population genomics, and that is sufficiently small to be presented in a one-week workshop. At the end of this lecture, we will discuss some more advanced applications in population genomics.\nGenome assembly and sampling\nWhy: most analyses require a reference sequence with which to compare resequenced samples\nPoints to consider:\n\nchoice of reference individual\nthe number of populations\nthe number of samples (more sites better than many samples per population)\nthe geographical distribution of samples\nsequencing depth (low-coverage often sufficient)"
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-1",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-1",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\nMotivation: corals are facing hard times and to prevent future losses of coral cover a better understanding of genetics is warranted.\n\n\nFigure 2: Variation and demographic history inferred from 44 resequenced individuals.\n\n\n\n\n\nFuller et al. (2020)\n\n\nVariation and demographic history\nWhy: summarizing diversity provides (indirect) information on population size and more, as does the linkage structure. Estimate demographic history since fluctuating population size may produce signals similar to those of selection\n\nLD decay: important for imputation (e.g., stephens_AccountingDecayLinkage_2005)\nThe extent of LD and its decay with genetic distance are useful parameters for determining the number of markers needed to successfully map a QTL, and the resolution with which the trait can be successfully mapped otyama_EvaluationLinkageDisequilibrium_2019\n0.363% average pi, but large variation.\nmany psmc plots show decline in population size, which could be an effect of bottleneck during pleistocene. Also population divergence (ghost ancestral populations, splits, extinction) can affect population size\nin aDNA studies missingness is common (i.e., heterozygotes are underestimated) and has to be accounted for since coalescence times are affected and may influence estimate of population size"
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-2",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-2",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\nMotivation: corals are facing hard times and to prevent future losses of coral cover a better understanding of genetics is warranted.\n\n\n\nFigure 3: Characterizing population structure and gene flow across 12 refs\nFuller et al. (2020)\n\n\nPopulation structure:\nWhy: many reasons: 1) identifying populations for contrasts in e.g. selection scans 2) identify admixed individuals that should be removed from analyses 3) identify barriers to gene flow etc\n\nno discernible relationship between geographic distance and genetic differentiation -&gt; gene flow\n\nfor this reason, Fst between populations is low\n\nEEMS (Estimated Effective Migration Surfaces) models relationship between genetics and geography petkova_VisualizingSpatialPopulation_2016\n\nIndicative of high connectivity among 12 sampled reefs."
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-3",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-3",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\nMotivation: corals are facing hard times and to prevent future losses of coral cover a better understanding of genetics is warranted.\n\n\n\nFigure 4: Genomic scans for local adaptation detect a signal at sacsin\n\n\n\n\n\nFuller et al. (2020)\n\n\nSelection scan\nWhy: identify loci associated with adaptation / selection\nLittle differentiation across reefs -&gt; little population structure over hundreds of kilometers. However, there are environmental differences (thermal regimes). Scan for pi outliers:\n\npoints to sacsin gene\nh12 measures the frequency of the two most common haplotypes; red indicate 0.01% outlier genome-wide\n4C: tree for central 1kb region in sacsin deeper than split from A.digitifera and A.tenuis\n\nvariation in sacsin has been maintained for long time\nco-chaperone for heat-shock protein Hsp70"
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-4",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-4",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\nStudy highlights common analyses in population genomics study:\n\n\nGenome assembly, resequencing, variant calling and filtering\nDescription of variation (e.g., \\(\\pi\\)) and genetic structure (LD)\nDescription of population structure (admixture, PCA)\nModelling of demographic history (PSMC)\nGenome scans for adaptive traits"
  },
  {
    "objectID": "slides/pgip/index.html#population-genetics",
    "href": "slides/pgip/index.html#population-genetics",
    "title": "Population genomics in practice",
    "section": "Population genetics",
    "text": "Population genetics\n\n\n \n\n\nMutation\n\n\n\nSelection\n\n\n\n \n\n\nRecombination\n\n\n\nDrift\n\n\n\n\n(Fuller et al., 2020) paper has population genetics in title -&gt; population genetics is a key ingredient.\nPopulation genetics focuses on the genetic basis of evolution. It is mainly a theoretical subject, owing to the slow changes of genetic variation. As such, it tries to explain the shape and structure of genetic variation from theoretical predictions and models."
  },
  {
    "objectID": "slides/pgip/index.html#from-population-genetics-to-population-genomics",
    "href": "slides/pgip/index.html#from-population-genetics-to-population-genomics",
    "title": "Population genomics in practice",
    "section": "From population genetics to population genomics",
    "text": "From population genetics to population genomics\n\n\n\nThe variable sites at the Drosophila melanogaster ADH locus (Kreitman, 1983)\n\nfrom locus-based studies (e.g., alcohol dehydrogenase in Drosophila (Kreitman, 1983)) to genome-wide (e.g., Drosophila population genomics (Begun et al., 2007)\nnote: studied loci have often not been randomly chosen, which is another argument for whole-genome studies\nenabler: sequencing technology\n\n(Fuller et al., 2020) paper has population genetics in title -&gt; population genetics is a key ingredient.\nRefer to Hahn’s points about learning something about global patterns:\n\nselection acts locally, demography globally\nthe structure of genetic variation and how it depends on\n\nrecombination landscapes and linked selection\ndemographic changes\nidentification of neutral loci\n\n\nSo, not simply about applying 10000 selection tests for multiple loci\nAll of the points above point to the importance of statistics which implies mathematics / computational skills important"
  },
  {
    "objectID": "slides/pgip/index.html#from-population-genetics-to-population-genomics-1",
    "href": "slides/pgip/index.html#from-population-genetics-to-population-genomics-1",
    "title": "Population genomics in practice",
    "section": "From population genetics to population genomics",
    "text": "From population genetics to population genomics\n\nPatterns of polymorphism and divergence (Begun et al., 2007)\nBegun et al. (2007) study: same system (Drosophila) but more individuals and whole genome"
  },
  {
    "objectID": "slides/pgip/index.html#from-population-genetics-to-population-genomics-2",
    "href": "slides/pgip/index.html#from-population-genetics-to-population-genomics-2",
    "title": "Population genomics in practice",
    "section": "From population genetics to population genomics",
    "text": "From population genetics to population genomics\n\nNumbers of polymorphic and fixed variants (Begun et al., 2007)\nNovelty: now possible to do genome-wide characterization of variation in different functional contexts"
  },
  {
    "objectID": "slides/pgip/index.html#the-technological-revolution-in-sequencing-and-computing",
    "href": "slides/pgip/index.html#the-technological-revolution-in-sequencing-and-computing",
    "title": "Population genomics in practice",
    "section": "The technological revolution in sequencing and computing",
    "text": "The technological revolution in sequencing and computing\n\n\n\n\n\n\nFigure 5: Sequencing cost ($) per megabase (Wetterstrand, KA)\n\n\n\n\n\n\n\n\nMoore’s law"
  },
  {
    "objectID": "slides/pgip/index.html#statistical-inference-in-population-genomics",
    "href": "slides/pgip/index.html#statistical-inference-in-population-genomics",
    "title": "Population genomics in practice",
    "section": "Statistical inference in population genomics",
    "text": "Statistical inference in population genomics\nThe data deluge requires advanced statistical methods and models to do inference. Today data production outpaces theoretical advances. Therefore, take care not to attach too much faith to a test that explains data well.\n\nA population genomics study should aim at generating a baseline model that takes into account the processes that shape genetic variation (Johri et al., 2022):\n\nmutation\nrecombination\ngene conversion\npurifying selection acting on functional regions and its effects on linked variants (background selection)\ngenetic drift with demographic history and geographic structure\n\n\n\nCaution against adaptationist storytelling; always compare to a baseline model that takes potential confounding factors into account"
  },
  {
    "objectID": "slides/pgip/index.html#applications-of-population-genomics",
    "href": "slides/pgip/index.html#applications-of-population-genomics",
    "title": "Population genomics in practice",
    "section": "Applications of population genomics",
    "text": "Applications of population genomics\n\n\n\n\n\nconservation genomics (Webster et al., 2023)\n\n\n\n\n\nspeciation genomics (Stankowski et al., 2019)\n\n\n\n\n\ndisentangle forces that create variation (Rodrigues et al., 2023)\n\n\n\n\n\npaleogenomics (aDNA) (van der Valk et al., 2021)\n\n\n\n\n\ndomestication (Barrera-Redondo et al., 2020)\n\n\n\n\n\necology (Hohenlohe et al., 2019)"
  },
  {
    "objectID": "slides/pgip/index.html#bibliography",
    "href": "slides/pgip/index.html#bibliography",
    "title": "Population genomics in practice",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nBarrera-Redondo, J., Piñero, D., & Eguiarte, L. E. (2020). Genomic, Transcriptomic and Epigenomic Tools to Study the Domestication of Plants and Animals: A Field Guide for Beginners. Frontiers in Genetics, 11.\n\n\nBegun, D. J., Holloway, A. K., Stevens, K., Hillier, L. W., Poh, Y.-P., Hahn, M. W., Nista, P. M., Jones, C. D., Kern, A. D., Dewey, C. N., Pachter, L., Myers, E., & Langley, C. H. (2007). Population Genomics: Whole-Genome Analysis of Polymorphism and Divergence in Drosophila simulans. PLOS Biology, 5(11), e310. https://doi.org/10.1371/journal.pbio.0050310\n\n\nFuller, Z. L., Mocellin, V. J. L., Morris, L. A., Cantin, N., Shepherd, J., Sarre, L., Peng, J., Liao, Y., Pickrell, J., Andolfatto, P., Matz, M., Bay, L. K., & Przeworski, M. (2020). Population genetics of the coral Acropora millepora: Toward genomic prediction of bleaching. Science, 369(6501), eaba4674. https://doi.org/10.1126/science.aba4674\n\n\nHahn, M. (2019). Molecular Population Genetics (First). Oxford University Press.\n\n\nHartl, D. L., & Clark, A. G. (1997). Principles of population genetics. Sinauer Associates.\n\n\nHohenlohe, P. A., Hand, B. K., Andrews, K. R., & Luikart, G. (2019). Population Genomics Provides Key Insights in Ecology and Evolution. In O. P. Rajora (Ed.), Population Genomics: Concepts, Approaches and Applications (pp. 483–510). Springer International Publishing. https://doi.org/10.1007/13836_2018_20\n\n\nJohri, P., Aquadro, C. F., Beaumont, M., Charlesworth, B., Excoffier, L., Eyre-Walker, A., Keightley, P. D., Lynch, M., McVean, G., Payseur, B. A., Pfeifer, S. P., Stephan, W., & Jensen, J. D. (2022). Recommendations for improving statistical inference in population genomics. PLOS Biology, 20(5), e3001669. https://doi.org/10.1371/journal.pbio.3001669\n\n\nKreitman, M. (1983). Nucleotide polymorphism at the alcohol dehydrogenase locus of Drosophila melanogaster. Nature, 304(5925), 412. https://doi.org/10.1038/304412a0\n\n\nLi, H., & Durbin, R. (2011). Inference of human population history from individual whole-genome sequences. Nature, 475(7357), 493–496. https://doi.org/10.1038/nature10231\n\n\nRodrigues, M. F., Kern, A. D., & Ralph, P. L. (2023). Shared evolutionary processes shape landscapes of genomic variation in the great apes (p. 2023.02.07.527547). bioRxiv. https://doi.org/10.1101/2023.02.07.527547\n\n\nStankowski, S., Chase, M. A., Fuiten, A. M., Rodrigues, M. F., Ralph, P. L., & Streisfeld, M. A. (2019). Widespread selection and gene flow shape the genomic landscape during a radiation of monkeyflowers. PLOS Biology, 17(7), e3000391. https://doi.org/10.1371/journal.pbio.3000391\n\n\nvan der Valk, T., Pečnerová, P., Díez-del-Molino, D., Bergström, A., Oppenheimer, J., Hartmann, S., Xenikoudakis, G., Thomas, J. A., Dehasque, M., Sağlıcan, E., Fidan, F. R., Barnes, I., Liu, S., Somel, M., Heintzman, P. D., Nikolskiy, P., Shapiro, B., Skoglund, P., Hofreiter, M., … Dalén, L. (2021). Million-year-old DNA sheds light on the genomic history of mammoths. Nature, 591(7849), 265–269. https://doi.org/10.1038/s41586-021-03224-9\n\n\nWebster, M. T., Beaurepaire, A., Neumann, P., & Stolle, E. (2023). Population Genomics for Insect Conservation. Annual Review of Animal Biosciences, 11(1), 115–140. https://doi.org/10.1146/annurev-animal-122221-075025\n\n\nWetterstrand, KA. DNA Sequencing Costs: Data from the NHGRI Genome Sequencing Program (GSP). www.genome.gov/sequencingcostsdata\n\n\n\n\nPopulation genomics in practice"
  },
  {
    "objectID": "exercises/data_filtering/index.html",
    "href": "exercises/data_filtering/index.html",
    "title": "Filtering of resequencing data",
    "section": "",
    "text": "Important\n\n\n\n17-Oct-2023: This exercise is WIP!\nIn this exercise we will look at ways of filtering data, mainly based on coverage."
  },
  {
    "objectID": "exercises/data_filtering/index.html#background",
    "href": "exercises/data_filtering/index.html#background",
    "title": "Filtering of resequencing data",
    "section": "Background",
    "text": "Background\nRegardless of how a raw variant call set has been produced, the calls will be of varying quality for a number of reasons. For high-coverage sequencing, the two most common are incompleteness of the reference sequence and misaligmnents in repetitive regions (Li, 2014). Low-coverage sequencing comes with its own biases and issues, with the most important being the difficulty to accurately call genotypes do to the low coverage, which in practice leads to an underrepresentation of heterozygote calls.\nTo improve the accuracy of downstream inference, a number of analysis-dependent quality control filters can be applied to the raw variant call set (for a concise summary, see Lou et al. (2021)). In this exercise, we will focus on coverage-based filters, with the aim of generating sequence masks to denote regions of a reference sequence that contain sufficient information across individuals and populations. Furthermore, the masks will be applied in the context of genetic diversity calculations, in which case specific filters on polymorphic sites (e.g., p-value or minimum minor allele frequency (MAF)) should not be applied (all sites contain information).\n\n\n\n\nFigure 1: Coverage distributions for three hypothetical samples along with the cumulative coverage for all samples.\n\n\n\nFigure 1 illustrates the sequencing coverage of three samples. The important thing to note is that the coverage is uneven. Some regions lack coverage entirely, e.g., due to random sampling or errors in the reference sequence. Other regions have excessive coverage, which could be a sign of repeats that have been collapsed in the reference. A general coverage filter could then seek to mask out sites where a fraction (50%, say) of individuals have too low or excessive coverage.\nThe right panel illustrates the sum of coverages across all samples. Minimum and maximum depth filters could be applied to the aggregate coverages of all samples, or samples grouped by population, to eliminate sites confounding data support.\nThe vcf we have produced contains all sites; that is, both monomorphic and polymorphic sites are present. Every site contains information about depth and other metadata, which makes it possible to apply coverage filters directly to the variant file itself. We will make use of direct filters in the first session below (Section 2).\nHowever, it may not always be possible to generate a vcf with all sites. Species with large genomes will produce files so large that they prevent efficient downstream processing. Under these circumstances, ad hoc coverage filters can be applied to the bam files to in turn generate sequence masks that can be used in conjunction with the variant file. This is the topic for the second session (Section 3)."
  },
  {
    "objectID": "exercises/data_filtering/index.html#sec-basic-filtering",
    "href": "exercises/data_filtering/index.html#sec-basic-filtering",
    "title": "Filtering of resequencing data",
    "section": "Basic filtering",
    "text": "Basic filtering\nFIXME: add basic filtering commands with vcftools"
  },
  {
    "objectID": "exercises/data_filtering/index.html#sec-advanced-filtering",
    "href": "exercises/data_filtering/index.html#sec-advanced-filtering",
    "title": "Filtering of resequencing data",
    "section": "Advanced filtering based coverage analyses",
    "text": "Advanced filtering based coverage analyses\nMapped reads provide information about how well a given genomic region has been represented during sequencing, and this information is usually summarized as the sequencing coverage. For any locus, this is equivalent to the number of reads mapping to that locus.\nSequencing coverage is typically not uniformly distributed over the reference. Reasons may vary but include uneven mapping coverage due to repeat regions, low coverage due to mis-assemblies, or coverage biases generated in the sequencing process. Importantly, both variable and monomorphic sites must be treated identically in the filtering process to eliminate biases between the two kinds of sites.\nIn this part, we will use mosdepth and bedtools to quickly generate depth of coverage profiles of mapped data. mosdepth is an ultra-fast command line tool for calculating coverage from a bam file. By default, it generates a summary of the global distribution, and per-base coverage in bed.gz format. We will be using the per-base coverage for filtering.\nAlternatively, mosdepth can also output results in a highly compressed format d4, which has been developed to handle the ever increasing size of resequencing projects. Files in d4 format can be processed with the d4-tools tool (Hou et al., 2021). For instance, d4tools view will display the coverage in bed format. We mention this in passing as it may be relevant when working with large genomes or sample sizes, but given the size of our sample data, we will be using bedtools from now on.\nPer sample coverage\nWe start by calculating per-sample coverages with mosdepth. For downstream purposes, we need to save the size of the chromosomes we’re looking at, and for many applications, a fasta index file is sufficient.\n\nexport REF=M_aurantiacus_v1.fasta\nsamtools faidx ${REF}\n\n[E::fai_build3_core] Failed to open the file M_aurantiacus_v1.fasta\n[faidx] Could not build fai index M_aurantiacus_v1.fasta.fai\n\n\nThe syntax to generate coverage information for a bam file is mosdepth &lt;prefix&gt; &lt;input file&gt;. Here, we add the -Q option to exclude reads with a mapping quality less than 20:\n\nmosdepth -Q 20 INJ INJ.sort.dup.recal.bam\n\n[E::hts_open_format] Failed to open file \"INJ.sort.dup.recal.bam\" : No such file or directory\n[hts-nim] could not open 'INJ.sort.dup.recal.bam'. No such file or directory\nSIGSEGV: Illegal storage access. (Attempt to read from nil?)\n\n\nThe per-base coverage output file will be named INJ.per-base.bed.gz and can be viewed with bgzip:\n\nbgzip -c -d INJ.per-base.bed.gz | head -n 5\n\n[bgzip] Could not open INJ.per-base.bed.gz: No such file or directory\n\n\nTo get an idea of what the coverage looks like over the chromsome, we can use bedtools and cvstk in a one-liner to generate a simple coverage plot (Figure 2)1\n\nbedtools intersect -a &lt;(bedtools makewindows -g ${REF}.fai -w 1000) \\\n      -b INJ.per-base.bed.gz -wa -wb | \\\n  bedtools groupby -i - -g 1,2,3 -c 7 -o mean | \\\n  csvtk plot -t line -x 2 -y 4 --point-size 0.01 --xlab Position \\\n      --ylab Coverage --width 9.0 --height 3.5 &gt; fig-plot-coverage.png\n\nError: Can't open genome file M_aurantiacus_v1.fasta.fai. Exiting...\nError: Unable to open file INJ.per-base.bed.gz. Exiting.\n\n*****\n***** ERROR: Requested column 7, but database file - only has fields 1 - 0.\n[31m[ERRO][0m xopen: no content\n\n\n\n\n\n\n\nFigure 2: Coverage for sample INJ in 1kb windows. Experiment changing the window size (-w) parameter to change smoothing.\n\nApparently there are some high-coverage regions that could be associated with, e.g., collapsed repeat regions in the assembly. Let’s compile coverage results for all samples, using bash string manipulation to generate file prefix2\n\nfor f in [A-Z]*.sort.dup.recal.bam; do\n  prefix=${f%.sort.dup.recal.bam}\n  mosdepth -Q 20 $prefix $f\n  echo -e -n \"$prefix\\t\"\n  cat $prefix.mosdepth.summary.txt | grep total\ndone &gt; ALL.mosdepth.summary.txt\ncat ALL.mosdepth.summary.txt\n\n[E::hts_open_format] Failed to open file \"[A-Z]*.sort.dup.recal.bam\" : No such file or directory\n[hts-nim] could not open '[A-Z]*.sort.dup.recal.bam'. No such file or directory\nSIGSEGV: Illegal storage access. (Attempt to read from nil?)\n[A-Z]*  \n\n\nWe can calculate the total coverage with csvtk as follows:\n\ncsvtk summary -H -t ALL.mosdepth.summary.txt -f 5:sum\n\nto get the total coverage 0, which gives a hint at where the diploid coverage peak should be.\nSample set coverages\nWe can combine coverage intervals with bedtools unionbedg. We collect the bed file names and generate matching sample names to pass as arguments to option -names. Also, we include positions with no coverage (-empty) which requires the use of a genome file (option -g). The bed output is piped to bgzip which compresses the output, before finally indexing with tabix:\n\n\nSAMPLES=$(cat sampleinfo.csv | csvtk grep -r -p .*red.* -r -p .*yellow.* -f Taxon | csvtk cut -f Sample | grep -v Sample | tr \"\\n\" \" \")\nBEDGZ=$(for sm in $SAMPLES; do echo -e -n \"${sm}.per-base.bed.gz \"; done)\nbedtools unionbedg -header -names $SAMPLES -g ${REF}.fai -empty -i $BEDGZ | bgzip &gt; ALL.bg.gz\ntabix -f -p bed -S 1 ALL.bg.gz\n\ncat: sampleinfo.csv: No such file or directory\n[33m[WARN][0m csvtk grep: skipping empty input file: -\n[33m[WARN][0m csvtk cut: skipping empty input file: -\nError: missing BedGraph file names (-i) to combine.\n\n\n\nWe also need to combine coverages per populations yellow and red.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nUsing the previous command as a template, try to generate per population coverage files.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\n\nfor pop in red yellow; do\n SAMPLES=$(cat sampleinfo.csv | csvtk grep -r -p .*${pop}.* -f Taxon | csvtk cut -f Sample | grep -v Sample | tr \"\\n\" \" \")\n BEDGZ=$(for sm in $SAMPLES; do echo -e -n \"${sm}.per-base.bed.gz \"; done)\n bedtools unionbedg -header -names $SAMPLES -g ${REF} -empty -i $BEDGZ | bgzip &gt; $pop.bed.gz\n tabix -f -p bed -S 1 $pop.bed.gz\ndone\n\ncat: sampleinfo.csv: No such file or directory\n[33m[WARN][0m csvtk grep: skipping empty input file: -\n[33m[WARN][0m csvtk cut: skipping empty input file: -\nError: missing BedGraph file names (-i) to combine.\ncat: sampleinfo.csv: No such file or directory\n[33m[WARN][0m csvtk grep: skipping empty input file: -\n[33m[WARN][0m csvtk cut: skipping empty input file: -\nError: missing BedGraph file names (-i) to combine.\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotal coverage\nSince we eventually want to filter on total coverage, we sum per sample coverages for each sample set with awk:\n\n\nbgzip -c -d ALL.bg.gz | awk -v FS=\"\\t\" -v OFS=\"\\t\" 'NR &gt; 1 {sum=0; for (i=4; i&lt;=NF; i++) sum+=$i; print $1, $2, $3, sum}' | bgzip &gt; ALL.sum.bed.gz\ntabix -f -p bed ALL.sum.bed.gz\n\n\nFor illustration, we plot the total coverage:\n\n\nbedtools intersect -a &lt;(bedtools makewindows -g ${REF}.fai -w 1000) \\\n    -b ALL.sum.bed.gz -wa -wb | \\\n  bedtools groupby -i - -g 1,2,3 -c 7 -o mean | \\\n  csvtk plot -t line -x 2 -y 4 --point-size 0.01 --xlab Position \\\n    --ylab Coverage --width 9.0 --height 3.5 &gt; fig-plot-total-coverage.png\n\n\n\n\n\n\n\nFigure 3: Total coverage in 1kb windows.\n\nIn order to define thresholds for subsequent filtering, we plot the proportion of the genome coverage versus depth of coverage (similar to k-mer plots in sequence assembly projects). In\n\n\n\n\n\n(a) Genome coverage\n\n\n\n\n\n(b) Cumulative genome coverage\n\n\nFigure 4: Genome coverage vs depth of coverage.\n\n\n\nIn Figure 4 a, a diploid peak is evident just below coverage X=150; we zoom in on that region to get a better view:\n\ncat ALL.sum.bed.csv | \\\n  csvtk plot line -x 1 -y 2 --point-size 0.01 \\\n    --xlab \"Depth of coverage (X)\" --ylab \"Genome coverage (kbp)\" \\\n    --width 9.0 --height 3.5 --x-min 90 --x-max 160\n\n\n\n\n\n(a) Genome coverage\n\nFigure 5: Genome coverage vs depth of coverage.\n\n\n(Lou et al., 2021) point out that appropriate thresholds depend on the data set, but as a general rule recommends a minimum depth threshold at &lt;0.8x average coverage, and a maximum depth threshold at mean coverage plus one or two standard deviations. Given the unrealistically homogenous coverage of our simulated data, we set thresholds based on Figure 5 to e.g., 100-160.\nWe then use these thresholds to generate a bed file containing regions that are accessible, i.e., have sufficient coverage for downstream analyses. We also calculate the number of bases that pass the filtering criteria.\n\n\nzcat ALL.sum.bed.gz | awk '{if (($4 &gt;= 100) && ($4 &lt;= 160)) print $0}' &gt; ALL.sum.depth.bed.gz\nbedtools genomecov -i ALL.sum.depth.bed.gz -g ${REF}.fai  | grep genome\n\n\nConsequently, 10% of the genome is accessible by depth.\n\n\n\n\n\n\nExercise\n\n\n\nGenerate coverage sums for sample sets CEU, CHB, and YRI, and from these determine coverage thresholds and apply the thresholds to generate bed files with accessible regions.\n\n\nCodefor pop in red yellow; do\n  bgzip -c -d $pop.bed.gz | \\\n    awk -v FS=\"\\t\" -v OFS=\"\\t\" 'NR &gt; 1 {sum=0; for (i=4; i&lt;=NF; i++) sum+=$i; print $1, $2, $3, sum}' | \\\n    bgzip &gt; $pop.sum.bed.gz\n  tabix -f -p bed $pop.sum.bed.gz\n  zcat $pop.sum.bed.gz | \\\n    awk -v h=0 'BEGIN {OFS=\",\"; cumsum=0} {a[$4] += ($3-$2)/1000; if ($4 &gt; h) {h=$4}} END{for (i=0; i&lt;=h; i++) {if (a[i]) {cumsum+=a[i]} else {a[i]=0;} print i, a[i], cumsum}}' \\\n    &gt; $pop.sum.bed.csv\ndone\n\n\n\n\nCodefor pop in red yellow; do\ncat ${pop}.sum.bed.csv | \\\n  csvtk plot line -x 1 -y 2 --point-size 0.01 \\\n    --xlab \"Depth of coverage (X)\" --ylab \"Genome coverage (kbp)\" \\\n    --width 9.0 --height 3.5 --x-min 10 --x-max 100 &gt; \\\n    fig-plot-total-coverage-distribution-hist-zoom-in-$pop.png\ndone\n\ncat: red.sum.bed.csv: No such file or directory\n[31m[ERRO][0m xopen: no content\ncat: yellow.sum.bed.csv: No such file or directory\n[31m[ERRO][0m xopen: no content\n\n\n\n\nNow we have combined total per sample coverage for ALL samples, and for sample sets CEU, CHB, and YRI. The upcoming task will be to generate sequence masks from the total coverage and minimum number of individuals with coverage greater than zero.\nFilter on minimum number of individuals\nIn addition to filtering on coverage, we will also filter on the minimum number of individuals with calls. This is to account for cases where coverages that pass the coverage filter originate from just a few samples. Here, we will remove sites where less than 50% of individuals have a call.\n\n\nbgzip -c -d ALL.bg.gz | \\\n  awk -v FS=\"\\t\" 'BEGIN {OFS=\"\\t\"} NR &gt; 1 {count=0; for (i=4; i&lt;=NF; i++) {if ($i&gt;0) count+=1}; if (count&gt;=((NF-3)*0.5)) {print $1, $2, $3}}' | \\\n  bgzip &gt; ALL.ind.bed.gz\ntabix -f -p bed ALL.ind.bed.gz\n\n\nExercise\nGenerate coverage sums for sample sets CEU, CHB, and YRI.\n\n\nCodefor pop in CEU CHB YRI; do\n  bgzip -c -d $pop.bed.gz | awk -v FS=\"\\t\" 'BEGIN {OFS=\"\\t\"} NR &gt; 1 {count=0; for (i=4; i&lt;=NF; i++) {if ($i&gt;0) count+=1}; if (count&gt;=((NF-3)*0.5)) {print $1, $2, $3}}' | bgzip &gt; $pop.ind.bed.gz\n  tabix -f -p bed $pop.ind.bed.gz\ndone"
  },
  {
    "objectID": "exercises/data_filtering/index.html#sequence-masks",
    "href": "exercises/data_filtering/index.html#sequence-masks",
    "title": "Filtering of resequencing data",
    "section": "Sequence masks",
    "text": "Sequence masks\nFinally, for each sample set, we will use bedtools intersect to generate combined bed files for total sum coverages and the filter on number of individuals. bedtools intersect makes it easy to combine multiple bed files, so other filters could be added.\nFIXME: make coverage filter above and intersect with ROI files\n\n# bedtools intersect -a ALL.sum.bed.gz -b ALL.ind.bed.gz \\\n# -g ${REF}.fai | bgzip &gt; ALL.mask.bed.gz\n#tabix -f -p bed ALL.mask.bed.gz\n\nNow we can use the command bedtools makefasta to make a sequence mask file in fasta format. The file will consist of characters 0 and 1, where the latter are regions that will be masked out in subsequent analyses. First, we make a mask file that consists solely of 1’s:\n\n\nawk 'BEGIN {OFS=\"\\t\"} {print $1, 0, $2}' ${REF}.fai &gt; ${REF}.bed\nbedtools maskfasta -fi ${REF} -mc 1 -fo ${REF}.mask.fa -bed ${REF}.bed"
  },
  {
    "objectID": "exercises/data_filtering/index.html#footnotes",
    "href": "exercises/data_filtering/index.html#footnotes",
    "title": "Filtering of resequencing data",
    "section": "Footnotes",
    "text": "Footnotes\n\nThe one-liner combines the results of several commands in a pipe stream. Also, Bash redirections are used to gather the results from the output of bedtools makewindows to bedtools intersect. The intersection commands collects coverage data in 1kb windows that are then summarized by bedtools groupby.↩︎\nThe % operator deletes the shortest match of $substring from back of $string: ${string%substring}. See Bash string manipulation for more information.↩︎"
  },
  {
    "objectID": "exercises/simulation/index.html",
    "href": "exercises/simulation/index.html",
    "title": "Introduction to simulation",
    "section": "",
    "text": "Note\n\n\n\n17-Oct-2023: The simulation exercises are currently hosted at https://nbisweden.github.io/pgip-jlite/lab/index.html. The repository will shortly be moved to the NBIS github organization."
  },
  {
    "objectID": "exercises/simulation/index.html#sec-exercise-simulation-howto",
    "href": "exercises/simulation/index.html#sec-exercise-simulation-howto",
    "title": "Introduction to simulation",
    "section": "Instructions",
    "text": "Instructions\nStart by going through the HOWTO"
  },
  {
    "objectID": "exercises/simulation/index.html#sec-exercise-simulation-coalescent",
    "href": "exercises/simulation/index.html#sec-exercise-simulation-coalescent",
    "title": "Introduction to simulation",
    "section": "1. Introduction to the coalescent",
    "text": "1. Introduction to the coalescent\nWork through the introduction to the coalescent workbook."
  },
  {
    "objectID": "exercises/simulation/index.html#sec-exercise-simulation-msprime",
    "href": "exercises/simulation/index.html#sec-exercise-simulation-msprime",
    "title": "Introduction to simulation",
    "section": "2. Introduction to msprime",
    "text": "2. Introduction to msprime\nWork through the introduction to msprime workbook."
  },
  {
    "objectID": "exercises/datasets/monkeyflowers.html#sec-monkeyflower-model-system",
    "href": "exercises/datasets/monkeyflowers.html#sec-monkeyflower-model-system",
    "title": "Monkeyflowers dataset",
    "section": "The monkeyflower model system",
    "text": "The monkeyflower model system\nMonkeyflowers (Mimulus) have recently become a key model in evolution and plant biology (Pennisi, 2019). The monkeyflower system consists of 160–200 species that display an amazing phenotypic variation. The genome is small, only 207Mbp, which makes it an ideal candidate for genomics - and for computer exercises!"
  },
  {
    "objectID": "exercises/datasets/monkeyflowers.html#the-monkeyflower-genomic-landscape",
    "href": "exercises/datasets/monkeyflowers.html#the-monkeyflower-genomic-landscape",
    "title": "Monkeyflowers dataset",
    "section": "The monkeyflower genomic landscape",
    "text": "The monkeyflower genomic landscape\nRecently, Stankowski et al. (2019) used the monkeyflower system to investigate what forces affect the genomic landscape. Burri (2017) has suggested that background selection (BGS) is one of the main causes for correlations between genomic landscapes, and that one way to study this phenomenon is to look at closely related taxa. This is one of the objectives of the Stankowski et al. (2019) paper.\nThey performed whole-genome resequencing of 37 individuals from 7 subspecies and 2 ecotypes of Mimulus aurantiacus and its sister taxon M. clevelandii (Figure 1), all sampled in California (Figure 2).\n\n\nFigure 1: Evolutionary relationships across the radiation\n\n\n\n\n\nFigure 2: Sampling locations\n\nGenomewide statistics, such as diversity (\\(\\pi\\)), divergence (\\(d_{XY}\\)) and differentiation \\(F_{ST}\\), were calculated within and between taxa to generate genomic diversity landscapes. The landscapes were highly similar across taxa, and local variation in genomic features, such as gene density and recombination rate, was predictive of variation in landscape patterns. These features suggest the influence of selection, in particular BGS.\nAlthough many characteristics were predicted by a model where BGS is one of the main causes, there were deviations. Therefore, the authors performed simulations in SLiM (Haller & Messer, 2019) with alternative models to see whether other factors could explain the observed patterns.\nIn all, six scenarios were studied:\n\nneutral evolution\nBGS (non-neutral mutations are deleterious)\nBateson-Dobzhansky-Muller incompatibility (BDMI); after split, a fraction variants deleterious in one population, neutral in other\npositive selection\nBGS and positive selection\nlocal adaptation; as 4 but also after split some variants are beneficial in one population, neutral in other\n\nFigure 3 shows typical results of the simulations.\n\n\nFigure 3: Genomic landscapes simulated under different divergence histories.\n\nIn conclusion, the authors found that although BGS plays a role, it does not sufficiently explain all observations, and that other aspects of natural selection (such as rapid adaptation) are responsible for the similarities between genomic landscapes.\nA locus that previously had been associated with differentiation of red and yellow ecotypes was investigated in more detail. We will be using this region, located on linkage group 4 (LG4:11,000,000-14,000,000), in the exercises."
  },
  {
    "objectID": "exercises/datasets/monkeyflowers.html#data",
    "href": "exercises/datasets/monkeyflowers.html#data",
    "title": "Monkeyflowers dataset",
    "section": "Data",
    "text": "Data\nThe dataset consists of 37 samples (see Table 1 for example information). Raw sequence reads were downloaded from Sequence Read Archive (SRA), bioproject PRJNA549183 and mapped to the reference sequence M_aurantiacus_v1_splitline_ordered.fasta. Reads that mapped to the ROI were extracted and constitute the sequence data that will be used during the exercises.\n\n\n\n\n\nTable 1: Example of monkeyflower samples. See file sampleinfo.csv in data repository for full listing.\n\nSample\nRun\nScientificName\nSampleName\nTaxon\nLatitude\nLongitude\n\n\n\nSRS4979271\nSRR9309782\nDiplacus longiflorus\nLON-T33_1\nssp. longiflorus\n34.3438\n-118.5099\n\n\nSRS4979267\nSRR9309785\nDiplacus longiflorus\nLON-T8_8\nssp. longiflorus\n34.1347\n-118.6452\n\n\nSRS4979269\nSRR9309784\nErythranthe parviflora\nPAR-KK161\nssp. parviflorus\n34.0180\n-119.6730\n\n\nSRS4979266\nSRR9309787\nErythranthe parviflora\nPAR-KK168\nssp. parviflorus\n34.0180\n-119.6730\n\n\nSRS4979268\nSRR9309786\nErythranthe parviflora\nPAR-KK180\nssp. parviflorus\n34.0180\n-119.6730\n\n\nSRS4979265\nSRR9309789\nErythranthe parviflora\nPAR-KK182\nssp. parviflorus\n34.0193\n-119.6802\n\n\n\n\n\n\n\n\n\nUPPMAX webexport\nFIXME: Add link to datasets\nRead files and reference sequences for the ROI are hosted at UPPMAX webexport.\nGithub\nThe github repository pgip-data contains reference sequence and read data for 37 monkeyflower individuals for the region LG4:12,000,000-12,100,000. The smaller region is motivated by the fact that even the ROI generates files that are too large to commit to github. The data resides in the data/monkeyflower/tiny subdirectory. This data set is used as input data to render the website.\nThe repository hosts a Snakemake workflow to generate all data needed for the exercises."
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "The aim of this workshop is to provide an introduction to commonly used methods in population genomics. As the focus of the course is on hands-on work, the topics have been designed to cover the fundamental analyses that are common in many population genomics studies. The course consists of lectures and exercises, with a focus on the practical aspects of analyses. Whereas lectures introduce some background theory, their primary aim is to set the stage for accompanying exercises.\n\nCovered topicsLearning objectivesRequirements\n\n\n\nFoundations of population genetics\nIntroduction to simulation and the coalescent\nBasics of variant calling\nVariant filtering and sequence masks\nCharacterization and intepretation of DNA sequence variation\nCalculation and interpretation of summary statistics from variation data\nInvestigating population structure with admixture modelling and principal component analyses\nDemographic modelling using sequentially Markovian coalescent models and linkage disequlibrium\nSelection scans\n\n\n\nUpon completion of this course, you will be able to:\n\ndescribe the different forces of evolution and how they influence genetic variation\nunderstand and interpret genealogical trees and how they relate to genetic variation data\ndescribe the basics of the coalescent\nperform simple coalescent simulations with msprime\nrun simple SLiM forward simulation models\ndescribe and run the steps of a variant calling pipeline, including quality control of raw reads, read mapping, and variant calling\nknow how and when to filter raw variant calls using manual coverage filters\ndescribe and calculate nucleotide diversity from variation data\nanalyze population structure with admixture modelling and dimensionality reduction methods\nperform demographic modelling with sequential Markovian coalescent models\ndescribe methods that identify regions undergoing adaptation and selection\nrun selection scans, score identified regions and interpret findings in the context of genome annotations\n\n\n\n\nBasic knowledge in R or Python\nBasic knowledge of variant calling, or the equivalent of NBIS course “Introduction to Bioinformatics using NGS data”\nBasic knowledge of population genetics\nBasic understanding of frequentist statistics\nA computer\n\nDesirable:\n\nExperience with analysis of NGS and other omic data"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References\n\n\nA genome atlas of european biodiversity. (n.d.). https://www.erga-biodiversity.eu. Retrieved November 3, 2022, from https://www.erga-biodiversity.eu\n\n\nAdrion, J. R., Galloway, J. G., & Kern, A. D. (2020). Predicting the Landscape of Recombination Using Deep Learning. Molecular Biology and Evolution, 37(6), 1790–1808. https://doi.org/10.1093/molbev/msaa038\n\n\nAllendorf, F. W., Hohenlohe, P. A., & Luikart, G. (2010). Genomics and the future of conservation genetics. Nature Reviews Genetics, 11(10), 697–709. https://doi.org/10.1038/nrg2844\n\n\nBaird, N. A., Etter, P. D., Atwood, T. S., Currey, M. C., Shiver, A. L., Lewis, Z. A., Selker, E. U., Cresko, W. A., & Johnson, E. A. (2008). Rapid SNP Discovery and Genetic Mapping Using Sequenced RAD Markers. PLOS ONE, 3(10), e3376. https://doi.org/10.1371/journal.pone.0003376\n\n\nBarrera-Redondo, J., Piñero, D., & Eguiarte, L. E. (2020). Genomic, Transcriptomic and Epigenomic Tools to Study the Domestication of Plants and Animals: A Field Guide for Beginners. Frontiers in Genetics, 11.\n\n\nBarton, N. H., Briggs, D. E. G., Eisen, J. A., Goldstein, D. B., & Patel, N. H. (2007). Evolution. Cold Spring Harbor Laboratory Press.\n\n\nBaumdicker, F., Bisschop, G., Goldstein, D., Gower, G., Ragsdale, A. P., Tsambos, G., Zhu, S., Eldon, B., Ellerman, E. C., Galloway, J. G., Gladstein, A. L., Gorjanc, G., Guo, B., Jeffery, B., Kretzschumar, W. W., Lohse, K., Matschiner, M., Nelson, D., Pope, N. S., … Kelleher, J. (2022). Efficient ancestry and mutation simulation with msprime 1.0. Genetics, 220(3), iyab229. https://doi.org/10.1093/genetics/iyab229\n\n\nBegun, D. J., Holloway, A. K., Stevens, K., Hillier, L. W., Poh, Y.-P., Hahn, M. W., Nista, P. M., Jones, C. D., Kern, A. D., Dewey, C. N., Pachter, L., Myers, E., & Langley, C. H. (2007). Population Genomics: Whole-Genome Analysis of Polymorphism and Divergence in Drosophila simulans. PLOS Biology, 5(11), e310. https://doi.org/10.1371/journal.pbio.0050310\n\n\nBergeron, L. A., Besenbacher, S., Zheng, J., Li, P., Bertelsen, M. F., Quintard, B., Hoffman, J. I., Li, Z., St. Leger, J., Shao, C., Stiller, J., Gilbert, M. T. P., Schierup, M. H., & Zhang, G. (2023). Evolution of the germline mutation rate across vertebrates. Nature, 615(7951), 285–291. https://doi.org/10.1038/s41586-023-05752-y\n\n\nBerner, D. (2019). Allele Frequency Difference AFD to FST for Quantifying Genetic Population Differentiation. Genes, 10(4), 308. https://doi.org/10.3390/genes10040308\n\n\nBhatia, G., Patterson, N., Sankararaman, S., & Price, A. L. (2013). Estimating and interpreting FST: The impact of rare variants. Genome Research, 23(9), 1514–1521. https://doi.org/10.1101/gr.154831.113\n\n\nBuri, P. (1956). Gene Frequency in Small Populations of Mutant Drosophila. Evolution, 10(4), 367–402. https://doi.org/10.1111/j.1558-5646.1956.tb02864.x\n\n\nBurri, R. (2017). Interpreting differentiation landscapes in the light of long-term linked selection. Evolution Letters, 1(3), 118–131. https://doi.org/10.1002/evl3.14\n\n\nCasillas, S., & Barbadilla, A. (2017). Molecular Population Genetics. Genetics, 205(3), 1003–1035. https://doi.org/10.1534/genetics.116.196493\n\n\nChan, A. H., Jenkins, P. A., & Song, Y. S. (2012). Genome-Wide Fine-Scale Recombination Rate Variation in Drosophila melanogaster. PLOS Genetics, 8(12), e1003090. https://doi.org/10.1371/journal.pgen.1003090\n\n\nChang, C. C. (2020). Data Management and Summary Statistics with PLINK. In J. Y. Dutheil (Ed.), Statistical Population Genomics (pp. 49–65). Springer US. https://doi.org/10.1007/978-1-0716-0199-0_3\n\n\nCharlesworth, B., & Charlesworth, D. (2010). Elements of Evolutionary Genetics. Roberts and Company Publishers.\n\n\nCharlesworth, B., & Jensen, J. D. (2021). Effects of selection at linked sites on patterns of genetic variability. Annual Review of Ecology, Evolution, and Systematics, 52(1), 177–197. https://doi.org/10.1146/annurev-ecolsys-010621-044528\n\n\nCharlesworth, B., Morgan, M. T., & Charlesworth, D. (1993). The Effect of Deleterious Mutations on Neutral Molecular Variation. Genetics, 134(4), 1289–1303.\n\n\ncooplab. (2011). Population genetics course resources: Hardy-Weinberg Eq. In gcbias. https://gcbias.org/2011/10/13/population-genetics-course-resources-hardy-weinberg-eq/\n\n\nCorbett-Detig, R. B., Hartl, D. L., & Sackton, T. B. (2015). Natural Selection Constrains Neutral Diversity across A Wide Range of Species. PLOS Biology, 13(4), e1002112. https://doi.org/10.1371/journal.pbio.1002112\n\n\nD. Lawson, S. M., G. Hellenthal. (2012). Inference of population structure using dense haplotype data. PLoS Genet. 8(1):e1002453. https://doi.org/doi: 10.1371/journal.pgen.1002453\n\n\nDanecek, P., Auton, A., Abecasis, G., Albers, C. A., Banks, E., DePristo, M. A., Handsaker, R. E., Lunter, G., Marth, G. T., Sherry, S. T., McVean, G., & Durbin, R. (2011). The variant call format and VCFtools. Bioinformatics (Oxford, England), 27(15), 2156–2158. https://doi.org/10.1093/bioinformatics/btr330\n\n\nDanecek, P., Bonfield, J. K., Liddle, J., Marshall, J., Ohan, V., Pollard, M. O., Whitwham, A., Keane, T., McCarthy, S. A., Davies, R. M., & Li, H. (2021). Twelve years of SAMtools and BCFtools. GigaScience, 10(2), giab008. https://doi.org/10.1093/gigascience/giab008\n\n\nDavey, J. W., & Blaxter, M. L. (2010). RADSeq: Next-generation population genetics. Briefings in Functional Genomics, 9(5-6), 416–423. https://doi.org/10.1093/bfgp/elq031\n\n\nDavydov, E. V., Goode, D. L., Sirota, M., Cooper, G. M., Sidow, A., & Batzoglou, S. (2010). Identifying a High Fraction of the Human Genome to be under Selective Constraint Using GERP++. PLOS Computational Biology, 6(12), e1001025. https://doi.org/10.1371/journal.pcbi.1001025\n\n\nDeGiorgio, M., Huber, C. D., Hubisz, M. J., Hellmann, I., & Nielsen, R. (2016). SweepFinder2: Increased sensitivity, robustness and flexibility. Bioinformatics, 32(12), 1895–1897. https://doi.org/10.1093/bioinformatics/btw051\n\n\nDePristo, M. A., Banks, E., Poplin, R., Garimella, K. V., Maguire, J. R., Hartl, C., Philippakis, A. A., del Angel, G., Rivas, M. A., Hanna, M., McKenna, A., Fennell, T. J., Kernytsky, A. M., Sivachenko, A. Y., Cibulskis, K., Gabriel, S. B., Altshuler, D., & Daly, M. J. (2011). A framework for variation discovery and genotyping using next-generation DNA sequencing data. Nature Genetics, 43(5), 491–498. https://doi.org/10.1038/ng.806\n\n\nDes Roches, S., Pendleton, L. H., Shapiro, B., & Palkovacs, E. P. (2021). Conserving intraspecific variation for nature’s contributions to people. Nature Ecology & Evolution, 5(5), 574–582. https://doi.org/10.1038/s41559-021-01403-5\n\n\nDutheil, Julien (Ed.). (2020). Statistical Population Genomics.\n\n\nEllegren, H., & Galtier, N. (2016). Determinants of genetic diversity. Nature Reviews Genetics, 17(7), 422–433. https://doi.org/10.1038/nrg.2016.58\n\n\nEwels, P., Magnusson, M., Lundin, S., & Käller, M. (2016). MultiQC: Summarize analysis results for multiple tools and samples in a single report. Bioinformatics, 32(19), 3047–3048. https://doi.org/10.1093/bioinformatics/btw354\n\n\nEwens, W. J. (2004). Mathematical Population Genetics (S. S. Antman, J. E. Marsden, L. Sirovich, & S. Wiggins, Eds.; Vol. 27). Springer. https://doi.org/10.1007/978-0-387-21822-9\n\n\nExcoffier, L. (2004). Analysis of Population Subdivision. In Handbook of Statistical Genetics. John Wiley & Sons, Ltd. https://doi.org/10.1002/0470022620.bbc25\n\n\nFerretti, L., Ledda, A., Wiehe, T., Achaz, G., & Ramos-Onsins, S. E. (2017). Decomposing the Site Frequency Spectrum: The Impact of Tree Topology on Neutrality Tests. Genetics, 207(1), 229–240. https://doi.org/10.1534/genetics.116.188763\n\n\nFitzpatrick, M. C., & Keller, S. R. (2015). Ecological genomics meets community-level modelling of biodiversity: Mapping the genomic landscape of current and future environmental adaptation. Ecology Letters, 18(1), 1–16. https://doi.org/10.1111/ele.12376\n\n\nFoll, M., & Gaggiotti, O. (2008). A Genome-Scan Method to Identify Selected Loci Appropriate for Both Dominant and Codominant Markers: A Bayesian Perspective. Genetics, 180(2), 977–993. https://doi.org/10.1534/genetics.108.092221\n\n\nFormenti, G., Theissinger, K., Fernandes, C., Bista, I., Bombarely, A., Bleidorn, C., Ciofi, C., Crottini, A., Godoy, J. A., Höglund, J., Malukiewicz, J., Mouton, A., Oomen, R. A., Paez, S., Palsbøll, P. J., Pampoulie, C., Ruiz-López, M. J., Svardal, H., Theofanopoulou, C., … Zammit, G. (2022). The era of reference genomes in conservation genomics. Trends in Ecology & Evolution, 37(3), 197–202. https://doi.org/10.1016/j.tree.2021.11.008\n\n\nFuller, Z. L., Mocellin, V. J. L., Morris, L. A., Cantin, N., Shepherd, J., Sarre, L., Peng, J., Liao, Y., Pickrell, J., Andolfatto, P., Matz, M., Bay, L. K., & Przeworski, M. (2020). Population genetics of the coral Acropora millepora: Toward genomic prediction of bleaching. Science, 369(6501), eaba4674. https://doi.org/10.1126/science.aba4674\n\n\nGillespie, J. H. (2004). Population Genetics: A Concise Guide (2nd edition). Johns Hopkins University Press.\n\n\nGraham Coop. (2020). Notes on Population Genetics. https://github.com/cooplab/popgen-notes\n\n\nGutenkunst, R. N., Hernandez, R. D., Williamson, S. H., & Bustamante, C. D. (2009). Inferring the joint demographic history of multiple populations from multidimensional SNP frequency data. PLoS Genetics, 5(10), e1000695. https://doi.org/10.1371/journal.pgen.1000695\n\n\nHahn, M. (2019). Molecular Population Genetics (First). Oxford University Press.\n\n\nHaller, B. C., & Messer, P. W. (2019). SLiM 3: Forward Genetic Simulations Beyond the Wright. Molecular Biology and Evolution, 36(3), 632–637. https://doi.org/10.1093/molbev/msy228\n\n\nHaller, B. C., & Messer, P. W. (2022). SLiM: An Evolutionary Simulation Framework.\n\n\nHaller, Ben. (2016). Messer Lab SLiM. In Messer Lab. https://messerlab.org/slim/\n\n\nHansen, N. F. (2016). Variant Calling From Next Generation Sequence Data. In E. Mathé & S. Davis (Eds.), Statistical Genomics: Methods and Protocols (pp. 209–224). Springer. https://doi.org/10.1007/978-1-4939-3578-9_11\n\n\nHartl, D. L., & Clark, A. G. (1997). Principles of population genetics. Sinauer Associates.\n\n\nHein, J., Schierup, M. H., & Wiuf, C. (2005). Gene genealogies, variation and evolution: A primer in coalescent theory. Oxford University Press. https://books.google.se/books?id=CCmLNAEACAAJ\n\n\nHein, J., Schierup, M., & Wiuf, C. (2004). Gene genealogies, variation and evolution. A primer in coalescent theory. In Systematic Biology - SYST BIOL (Vol. 54).\n\n\nHermisson, J. (2017). Mathematical population genetics. https://www.mabs.at/fileadmin/user_upload/p_mabs/Lecture_Notes_2017\n\n\nHermisson, J. (2018). Mathematical population genetics II. https://www.mabs.at/fileadmin/user_upload/p_mabs/Lecture_Notes_2018\n\n\nHohenlohe, P. A., Hand, B. K., Andrews, K. R., & Luikart, G. (2019). Population Genomics Provides Key Insights in Ecology and Evolution. In O. P. Rajora (Ed.), Population Genomics: Concepts, Approaches and Applications (pp. 483–510). Springer International Publishing. https://doi.org/10.1007/13836_2018_20\n\n\nHou, H., Pedersen, B., & Quinlan, A. (2021). Balancing efficient analysis and storage of quantitative genomics data with the D4 format and D4tools. Nature Computational Science, 1(6), 441–447. https://doi.org/10.1038/s43588-021-00085-0\n\n\nHTS format specifications. (2023). https://samtools.github.io/hts-specs/\n\n\nHubisz, M., & Siepel, A. (2020). Inference of Ancestral Recombination Graphs Using ARGweaver. In J. Y. Dutheil (Ed.), Statistical Population Genomics (pp. 231–266). Springer US. https://doi.org/10.1007/978-1-0716-0199-0_10\n\n\nHurst, L. D. (2002). The Ka/Ks ratio: Diagnosing the form of sequence evolution. Trends in Genetics, 18(9), 486–487. https://doi.org/10.1016/S0168-9525(02)02722-1\n\n\nHurst, L. D. (2009). Genetics and the understanding of selection. Nature Reviews Genetics, 10(2), 83–93. https://doi.org/10.1038/nrg2506\n\n\nJohri, P., Aquadro, C. F., Beaumont, M., Charlesworth, B., Excoffier, L., Eyre-Walker, A., Keightley, P. D., Lynch, M., McVean, G., Payseur, B. A., Pfeifer, S. P., Stephan, W., & Jensen, J. D. (2022). Recommendations for improving statistical inference in population genomics. PLOS Biology, 20(5), e3001669. https://doi.org/10.1371/journal.pbio.3001669\n\n\nKelleher, J., Wong, Y., Wohns, A. W., Fadil, C., Albers, P. K., & McVean, G. (2019). Inferring whole-genome histories in large population datasets. Nature Genetics, 51(9), 1330–1338. https://doi.org/10.1038/s41588-019-0483-y\n\n\nKimura, M. (1983). The neutral theory of molecular evolution. Cambridge University Press. https://doi.org/10.1017/CBO9780511623486\n\n\nKimura, M., & Ohta, T. (1971). Protein Polymorphism as a Phase of Molecular Evolution. Nature, 229(5285), 467–469. https://doi.org/10.1038/229467a0\n\n\nKorneliussen T, N. R., Albrechtsen A. (2014). ANGSD: Analysis of next generation sequencing data. BMC Bioinformatics 15(1):356. https://doi.org/doi: 10.1186/s12859-014-0356-4\n\n\nKorunes, K. L., & Samuk, K. (2021). Pixy: Unbiased estimation of nucleotide diversity and divergence in the presence of missing data. Molecular Ecology Resources, 21(4), 1359–1368. https://doi.org/10.1111/1755-0998.13326\n\n\nKreitman, M. (1983). Nucleotide polymorphism at the alcohol dehydrogenase locus of Drosophila melanogaster. Nature, 304(5925), 412. https://doi.org/10.1038/304412a0\n\n\nKumar, P., Henikoff, S., & Ng, P. C. (2009). Predicting the effects of coding non-synonymous variants on protein function using the SIFT algorithm. Nature Protocols, 4(7), 1073–1081. https://doi.org/10.1038/nprot.2009.86\n\n\nKumar, S., & Subramanian, S. (2002). Mutation rates in mammalian genomes. Proceedings of the National Academy of Sciences, 99(2), 803–808. https://doi.org/10.1073/pnas.022629899\n\n\nLan, T., & Lindqvist, C. (2019). Paleogenomics: Genome-Scale Analysis of Ancient DNA and Population and Evolutionary Genomic Inferences. In O. P. Rajora (Ed.), Population Genomics: Concepts, Approaches and Applications (pp. 323–360). Springer International Publishing. https://doi.org/10.1007/13836_2017_7\n\n\nLaurie, C. C., Nickerson, D. A., Anderson, A. D., Weir, B. S., Livingston, R. J., Dean, M. D., Smith, K. L., Schadt, E. E., & Nachman, M. W. (2007). Linkage Disequilibrium in Wild Mice. PLOS Genetics, 3(8), e144. https://doi.org/10.1371/journal.pgen.0030144\n\n\nLawson DJ, F. D., van Dorp L. (2018). A tutorial on how not to over-interpret STRUCTURE and ADMIXTURE bar plots. Nat Commun. 14;9(1):3258. https://doi.org/doi: 10.1038/s41467-018-05257-7\n\n\nLeffler, E. M., Bullaughey, K., Matute, D. R., Meyer, W. K., Ségurel, L., Venkat, A., Andolfatto, P., & Przeworski, M. (2012). Revisiting an Old Riddle: What Determines Genetic Diversity Levels within Species? PLOS Biology, 10(9), e1001388. https://doi.org/10.1371/journal.pbio.1001388\n\n\nLewis, D. (2023). Biggest ever study of primate genomes has surprises for humanity. Nature. https://doi.org/10.1038/d41586-023-01776-6\n\n\nLi, H. (2013). Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. arXiv:1303.3997 [q-Bio]. https://arxiv.org/abs/1303.3997\n\n\nLi, H. (2014). Toward better understanding of artifacts in variant calling from high-coverage samples. Bioinformatics, 30(20), 2843–2851. https://doi.org/10.1093/bioinformatics/btu356\n\n\nLi, H., & Durbin, R. (2011). Inference of human population history from individual whole-genome sequences. Nature, 475(7357), 493–496. https://doi.org/10.1038/nature10231\n\n\nLipson, M. (2020). Applying F4-statistics and admixture graphs: Theory and examples. Molecular Ecology Resources, 20(6), 1658–1667. https://doi.org/10.1111/1755-0998.13230\n\n\nLiu, C.-C., Shringarpure, S., Lange, K., & Novembre, J. (2020). Exploring Population Structure with Admixture Models and Principal Component Analysis. In J. Y. Dutheil (Ed.), Statistical Population Genomics (pp. 67–86). Springer US. https://doi.org/10.1007/978-1-0716-0199-0_4\n\n\nLou, R. N., Jacobs, A., Wilder, A. P., & Therkildsen, N. O. (2021). A beginner’s guide to low-coverage whole genome sequencing for population genomics. Molecular Ecology, 30(23), 5966–5993. https://doi.org/10.1111/mec.16077\n\n\nLuu, K., Bazin, E., & Blum, M. G. B. (2017). Pcadapt: An R package to perform genome scans for selection based on principal component analysis. Molecular Ecology Resources, 17(1), 67–77. https://doi.org/10.1111/1755-0998.12592\n\n\nLynch, M. (2007). The origins of genome architecture. Sinauer Associates.\n\n\nMaier, R., Flegontov, P., Flegontova, O., Changmai, P., & Reich, D. (2022). On the limits of fitting complex models of population history to genetic data (p. 2022.05.08.491072). bioRxiv. https://doi.org/10.1101/2022.05.08.491072\n\n\nMaier, Robert. (2022). Paper notes. https://uqrmaie1.github.io/admixtools/articles/paper.html\n\n\nMary-Huard, T., & Balding, D. (2023). Fast and accurate joint inference of coancestry parameters for populations and/or individuals. PLOS Genetics, 19(1), e1010054. https://doi.org/10.1371/journal.pgen.1010054\n\n\nMcLaren, W., Gil, L., Hunt, S. E., Riat, H. S., Ritchie, G. R. S., Thormann, A., Flicek, P., & Cunningham, F. (2016). The Ensembl Variant Effect Predictor. Genome Biology, 17(1), 122. https://doi.org/10.1186/s13059-016-0974-4\n\n\nMcLaren, W., Pritchard, B., Rios, D., Chen, Y., Flicek, P., & Cunningham, F. (2010). Deriving the consequences of genomic variants with the Ensembl API and SNP Effect Predictor. Bioinformatics, 26(16), 2069–2070. https://doi.org/10.1093/bioinformatics/btq330\n\n\nMcVean. (2009). A genealogical interpretation of principal components analysis. PLoS Genetics Oct;5(10):e1000686. https://doi.org/doi: 10.1371/journal.pgen.1000686\n\n\nMenozzi P, C.-S. L., Piazza A. (1978). Synthetic maps of human gene frequencies in europeans. Science 1;201(4358):786-92. https://doi.org/doi: 10.1126/science.356262\n\n\nMiller, C. (2020). Human Biology. Thompson Rivers University.\n\n\nNei, M., & Kumar, S. (2000). Molecular Evolution and Phylogenetics. Oxford University Press.\n\n\nNielsen, R. (2005). Molecular Signatures of Natural Selection. Annual Review of Genetics, 39(1), 197–218. https://doi.org/10.1146/annurev.genet.39.073003.112420\n\n\nNovembre J, B. K., Johnson T. (2008). Genes mirror geography within europe. Nature. 2008 Nov 6;456(7218):98-101. https://doi.org/doi: 10.1038/nature07331\n\n\nOhta, T. (1973). Slightly Deleterious Mutant Substitutions in Evolution. Nature, 246(5428), 96. https://doi.org/10.1038/246096a0\n\n\nPatterson, N., Price, A. L., & Reich, D. (2006). Population Structure and Eigenanalysis. PLOS Genetics, 2(12), e190. https://doi.org/10.1371/journal.pgen.0020190\n\n\nPedersen, B. S., & Quinlan, A. R. (2018). Mosdepth: Quick coverage calculation for genomes and exomes. Bioinformatics, 34(5), 867–868. https://doi.org/10.1093/bioinformatics/btx699\n\n\nPennisi, E. (2019). The allure of monkeyflowers. Science, 365(6456), 854–857. https://doi.org/10.1126/science.365.6456.854\n\n\nPeter, B. (2016). Admixture, population structure, and f-statistics. Genetics 202(4):1485-501. https://doi.org/doi: 10.1534/genetics.115.183913\n\n\nPeter, B. (2022). A geometric relationship of F2, F3 and F4-statistics with principal component analysis. Philos Trans R Soc Lond B Biol Sci. 377(1852):20200413. https://doi.org/doi: 10.1098/rstb.2020.0413\n\n\nPeter, B. M. (2016). Admixture, Population Structure, and F-Statistics. Genetics, 202(4), 1485–1501. https://doi.org/10.1534/genetics.115.183913\n\n\nPicard toolkit. (2019). In Broad Institute, GitHub repository. https://broadinstitute.github.io/picard/; Broad Institute.\n\n\nPope, N. S., Singh, A., Childers, A. K., Kapheim, K. M., Evans, J. D., & López-Uribe, M. M. (2023). The expansion of agriculture has shaped the recent evolutionary history of a specialized squash pollinator. Proceedings of the National Academy of Sciences, 120(15), e2208116120. https://doi.org/10.1073/pnas.2208116120\n\n\nQuinlan, A. R., & Hall, I. M. (2010). BEDTools: A flexible suite of utilities for comparing genomic features. Bioinformatics, 26(6), 841–842. https://doi.org/10.1093/bioinformatics/btq033\n\n\nRead groups. (2023). In GATK. https://gatk.broadinstitute.org/hc/en-us/articles/360035890671-Read-groups\n\n\nRodrigues, M. F., Kern, A. D., & Ralph, P. L. (2023). Shared evolutionary processes shape landscapes of genomic variation in the great apes (p. 2023.02.07.527547). bioRxiv. https://doi.org/10.1101/2023.02.07.527547\n\n\nRomiguier, J., Gayral, P., Ballenghien, M., Bernard, A., Cahais, V., Chenuil, A., Chiari, Y., Dernat, R., Duret, L., Faivre, N., Loire, E., Lourenco, J. M., Nabholz, B., Roux, C., Tsagkogeorga, G., Weber, A. a.-T., Weinert, L. A., Belkhir, K., Bierne, N., … Galtier, N. (2014). Comparative population genomics in animals uncovers the determinants of genetic diversity. Nature, 515(7526), 261–263. https://doi.org/10.1038/nature13685\n\n\nSchlötterer, C., Tobler, R., Kofler, R., & Nolte, V. (2014). Sequencing pools of individuals - mining genome-wide polymorphism data without big funding. Nature Reviews. Genetics, 15(11), 749–763. https://doi.org/10.1038/nrg3803\n\n\nSchraiber, J., & Akey, J. (2015). Methods and models for unravelling human evolutionary history. Nat Rev Genet. 16(12):727-40. https://doi.org/doi: 10.1038/nrg4005\n\n\nShen, W., Le, S., Li, Y., & Hu, F. (2016). SeqKit: A Cross-Platform and Ultrafast Toolkit for FASTA/Q File Manipulation. PLOS ONE, 11(10), e0163962. https://doi.org/10.1371/journal.pone.0163962\n\n\nSmith, J. M., & Haigh, J. (1974). The hitch-hiking effect of a favourable gene. Genetics Research, 23(1), 23–35. https://doi.org/10.1017/S0016672300014634\n\n\nStankowski, S., Chase, M. A., Fuiten, A. M., Rodrigues, M. F., Ralph, P. L., & Streisfeld, M. A. (2019). Widespread selection and gene flow shape the genomic landscape during a radiation of monkeyflowers. PLOS Biology, 17(7), e3000391. https://doi.org/10.1371/journal.pbio.3000391\n\n\nTalla, V., Soler, L., Kawakami, T., Dincă, V., Vila, R., Friberg, M., Wiklund, C., & Backström, N. (2019). Dissecting the Effects of Selection and Mutation on Genetic Diversity in Three Wood White (Leptidea) Butterfly Species. Genome Biology and Evolution, 11(10), 2875–2886. https://doi.org/10.1093/gbe/evz212\n\n\nTool Documentation Index. (2023). In GATK. https://gatk.broadinstitute.org/hc/en-us/articles/13832655155099--Tool-Documentation-Index\n\n\nvan der Valk, T., Pečnerová, P., Díez-del-Molino, D., Bergström, A., Oppenheimer, J., Hartmann, S., Xenikoudakis, G., Thomas, J. A., Dehasque, M., Sağlıcan, E., Fidan, F. R., Barnes, I., Liu, S., Somel, M., Heintzman, P. D., Nikolskiy, P., Shapiro, B., Skoglund, P., Hofreiter, M., … Dalén, L. (2021). Million-year-old DNA sheds light on the genomic history of mammoths. Nature, 591(7849), 265–269. https://doi.org/10.1038/s41586-021-03224-9\n\n\nVertebrate Genomes Project. (n.d.). https://vertebrategenomesproject.org. Retrieved November 3, 2022, from https://vertebrategenomesproject.org\n\n\nWakeley, J. (2008). Coalescent Theory: An Introduction (1st Edition edition). Roberts and Company Publishers.\n\n\nWaples, R. S. (2022). What Is Ne, Anyway? Journal of Heredity, 113(4), 371–379. https://doi.org/10.1093/jhered/esac023\n\n\nWebster, M. T., Beaurepaire, A., Neumann, P., & Stolle, E. (2023). Population Genomics for Insect Conservation. Annual Review of Animal Biosciences, 11(1), 115–140. https://doi.org/10.1146/annurev-animal-122221-075025\n\n\nWebster, Matthew, & Yuanzhen Liu. (2022). Genetic Variation in Mountain Bumblebees.\n\n\nWetterstrand, KA. DNA Sequencing Costs: Data from the NHGRI Genome Sequencing Program (GSP). www.genome.gov/sequencingcostsdata\n\n\nWilli, Y., Kristensen, T. N., Sgrò, C. M., Weeks, A. R., Ørsted, M., & Hoffmann, A. A. (2022). Conservation genetics as a management tool: The five best-supported paradigms to assist the management of threatened species. Proceedings of the National Academy of Sciences, 119(1), e2105076119. https://doi.org/10.1073/pnas.2105076119\n\n\nWisely, S. M., Buskirk, S. W., Fleming, M. A., McDonald, D. B., & Ostrander, E. A. (2002). Genetic Diversity and Fitness in Black-Footed Ferrets Before and During a Bottleneck. Journal of Heredity, 93(4), 231–237. https://doi.org/10.1093/jhered/93.4.231\n\n\nY. C. Brandt, D., Wei, X., Deng, Y., Vaughn, A. H., & Nielsen, R. (2022). Evaluation of methods for estimating coalescence times using ancestral recombination graphs. Genetics, iyac044. https://doi.org/10.1093/genetics/iyac044"
  },
  {
    "objectID": "info.html",
    "href": "info.html",
    "title": "Practical info",
    "section": "",
    "text": "This workshop is organised by the National Bioinformatics Infrastructure, Sweden (NBIS) and sponsored by the Science for Life Laboratory (SciLifeLab) & Wallenberg National Program for Data-Driven Life Science (DDLS). NBIS is a platform of the Science for Life Laboratory (SciLifeLab).\nIf you would like to get in touch with us regarding this workshop, please contact us at edu.population-genomics-in-practice [at] nbis.se or edu.pgip [at] nbis.se."
  },
  {
    "objectID": "info.html#organizers",
    "href": "info.html#organizers",
    "title": "Practical info",
    "section": "Organizers",
    "text": "Organizers\n\n\n\n\n\n\nPer Unneberg\n\n\n\n\n\n\nNikolay Oskolkov\n\n\n\n\n\n\nJason Hill\n\n\n\n\n\n\nAndré Soares"
  },
  {
    "objectID": "info.html#venue",
    "href": "info.html#venue",
    "title": "Practical info",
    "section": "Venue",
    "text": "Venue\nThe workshop is held onsite in Trippelrummet in Navet at the Uppsala Biomedical Centre, Uppsala.\n\nLocation\n\n\nUppsala\n\n\n\n\nRoom E10:1309 Entrance C11 Biomedicinskt centrum Uppsala University / ScilifeLab Husargatan 3 75237 Uppsala Sweden\nSome selected hotels are listed below ranked by distance from the venue.\n\n\nHotel von Kraemer (900 m, 11 min walk)\n\nAkademihotellet (1.7 Km, 21 min walk)\n\nCityStay Hotell (1.8 Km, 21 min walk)\n\nGrand Hotel Hörnan (1.9 Km, 23 min walk)\n\nHotell Centralstation (2.1 Km, 25 min walk)\n\nBest Western Svava (2.2 Km, 26 min walk)\n\nThe venue and hotels are also marked on the map.\nUse the UL website or the UL app for bus and train services around Uppsala. For buses from the Centralstation (Train/Bus), take Bus 4 (towards Gottsunda Centrum) or 8 (towards Sunnersta) and get off at the stop Uppsala Science Park. Bus tickets can be purchased in the app or directly from the driver using a credit card."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DDLS Population genomics in practice",
    "section": "",
    "text": "NBIS • Workshop\nDDLS Population genomics in practice\nWelcome to the DDLS Population Genomics in Practice homepage!\nImportant dates and information\nSee the canvas home page for the current course NBIS_POPGENIP_H23 for more information on how to apply.\n\n\n\n\n\nNext round\n06-Nov-2023 - 10-Nov-2023\n\n\nApplication opens\n15-Aug-2023\n\n\nApplication deadline\n30-Sep-2023\n\n\n\n\nBrief contents\n\n\nThis workshop includes the following moments:\n\nVariant calling and filtering\nDescribing and summarising variation data\nPopulation structure\nDemographic analysis\nSelection scans\nCoalescent simulation\n\nSee syllabus for a more complete description of course contents and info for practical information on venue and hotels.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLast updated on  17-Oct-2023"
  },
  {
    "objectID": "contents.html",
    "href": "contents.html",
    "title": "Course Materials",
    "section": "",
    "text": "As the focus of the course is on hands-on work, the topics have been designed to cover the fundamental analyses that are common in many population genomics studies. The course consists of lectures and exercises, with a focus on the practical aspects of analyses. Whereas lectures introduce some background theory, their primary aim is to set the stage for accompanying exercises."
  },
  {
    "objectID": "contents.html#sec-manuscript-route",
    "href": "contents.html#sec-manuscript-route",
    "title": "Course Materials",
    "section": "The manuscript route",
    "text": "The manuscript route\nIn principle, you could imagine the course structure to follow that of a manuscript (Fuller et al., 2020)\nHigh-throughput DNA sequencing has now made it possible to generate whole-genome resequencing data for multiple individuals and populations, and a first step is to map sequence data to a reference, perform variant calling and variant filtering.\nOnce a high-quality variant set has been obtained, a common task is to describe variation, either in terms of summary statistics such as nucleotide diversity (\\(\\pi\\)) or site-frequency spectra (sfs), or as descriptions of population structure in terms of admixture or pca plots.\nGenetic diversity is also affected by population history and demographic processes such as population expansion, bottlenecks, migration events and hybridizations.\nFinally, it is often of interest to identify adaptive traits, to which end selection tests and scans can be performed. The tests are designed to detect signals of selection, either via direct selection on loci, or by looking at haplotype structures to detect linked selection."
  },
  {
    "objectID": "contents.html#the-baseline-model",
    "href": "contents.html#the-baseline-model",
    "title": "Course Materials",
    "section": "The baseline model",
    "text": "The baseline model\nMuch of what has been described in The manuscript route has recently been treated in an article on recommendations for improving statistical inference in population genomics (Johri et al., 2022). In it, the authors point out that whereas historically theoretical advances outpaced data production, that is no longer true due to the advent of next-generation sequencing. In particular, they caution researchers to attach too much faith to a test that explains the data well, as there are many alternative hypotheses with equal explanatory power, but with drastically different conclusions. At the very least, a population genomics study should aim at first generating a baseline model consisting of all or several of the following components:\n\nmutation\nrecombination\ngene conversion\npurifying selection acting on functional regions and its effects on linked variants (background selection)\ngenetic drift with demographic history and geographic structure\n\nThe exercises are designed to address many of the points above, and to highlight cases where competing hypotheses may actually explain data to equal degrees."
  },
  {
    "objectID": "precourse.html",
    "href": "precourse.html",
    "title": "Precourse",
    "section": "",
    "text": "The first sessions consist of lectures that aim to introduce concepts and theory from population genetics\nPopulation genomics in practice provides a quick overview of population genomics. Although not required, it is recommended to briefly go through the following papers that will be discussed in the lecture:\n\nFuller et al. (2020) (most important)\nJohri et al. (2022)\n\nPopulation genetics introduces the foundations of population genetics. This lecture contains a lot of material and we strongly recommend you review the slides to be fully prepared for the lecture. See notes on usage for instructions how to view slides."
  },
  {
    "objectID": "precourse.html#suggested-readings",
    "href": "precourse.html#suggested-readings",
    "title": "Precourse",
    "section": "",
    "text": "The first sessions consist of lectures that aim to introduce concepts and theory from population genetics\nPopulation genomics in practice provides a quick overview of population genomics. Although not required, it is recommended to briefly go through the following papers that will be discussed in the lecture:\n\nFuller et al. (2020) (most important)\nJohri et al. (2022)\n\nPopulation genetics introduces the foundations of population genetics. This lecture contains a lot of material and we strongly recommend you review the slides to be fully prepared for the lecture. See notes on usage for instructions how to view slides."
  },
  {
    "objectID": "precourse.html#uppmax-account",
    "href": "precourse.html#uppmax-account",
    "title": "Precourse",
    "section": "UPPMAX account",
    "text": "UPPMAX account\nYou will need an uppmax account to run some of the exercises. You can apply for an account here.\n\nTutorials\nLook at https://www.uppmax.uu.se/support/user-guides/, in particular https://www.uppmax.uu.se/support/user-guides/guide--first-login-to-uppmax/ for information on how to connect to and work on uppmax."
  },
  {
    "objectID": "precourse.html#sec-software-installation",
    "href": "precourse.html#sec-software-installation",
    "title": "Precourse",
    "section": "Software installation",
    "text": "Software installation\n\n\n\n\n\n\nImportant\n\n\n\nInstructions will be updated when a full list of required programs are available.\n\n\nIn case there are issues with UPPMAX we ask you to prepare a local backup compute environment on your computer. We will use the conda package manager to install necessary requirements from the package repositories bioconda and conda-forge.\n\n1. Install conda\nTo start using conda, follow the quick command line install instructions to install the minimal conda installer miniconda.\n\n\n2. Configure conda\nConfigure conda to access the package repositories (see also bioconda usage). This will modify your ~/.condarc file:\n#| label: conda-configuration\n#| echo: true\n#| eval: false\nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\nconda config --set channel_priority strict\n\n\n\n\n\n\nImportant\n\n\n\nPlease note that the order of these commands is important!\n\n\n\n\n3. Create an isolated course environment\nIt is suggested you create and change to a isolated environment pgip dedicated to the course:\n#| label: create-conda-pgip\n#| echo: true\n#| eval: false\nconda create -n pgip python=3.10 r-base\nconda activate pgip\nTo deactivate an environment you issue the command conda deactivate.\n\n\n4. Install packages\nYou can install packages as follows (remember to activate pgip!):\n#| label: conda-install-packages\n#| echo: true\n#| eval: false\nconda install bcftools angsd mosdepth\n\n\n\n\n\n\nTip\n\n\n\nIf installation is slow, you can try the mamba installer."
  },
  {
    "objectID": "precourse.html#resources",
    "href": "precourse.html#resources",
    "title": "Precourse",
    "section": "Resources",
    "text": "Resources\n\nLiterature\nLecture notes have been prepared based on the literature listed below.\n\nOnline\n\nGraham Coop’s notes on population genetics\n\nComprehensive introduction to population genetics. Contains many biological examples and code snippets. (Graham Coop, 2020).\n\nJoachim Hermisson’s notes on mathematical population genetics\n\nIntroduction to mathematical population genetics (Hermisson, 2017, 2018).\n\n\n\n\nBooks\n\nPopulation Genetics: A Concise Guide\n\nJohn Gillespie’s short but excellent introduction to population genetics (Gillespie, 2004).\n\nMolecular Population Genetics\n\nA more recent introduction to population genetics with more focus on the analyses of sequencing data (Hahn, 2019).\n\nMolecular Evolution and Phylogenetics\n\nOver view of molecular evolution and population genetics, and also phylogenetics (Nei & Kumar, 2000).\n\nMathematical Population Genetics I\n\nA great reference when it comes to the mathematical treatment of population genetics (Ewens, 2004).\n\nPrinciples of Population Genetics\n\nA comprehensive textbook covering most topics of population genetics (Hartl & Clark, 1997).\n\nElements of Evolutionary Genetics\n\nIntroduction to evolutionary genetics (Charlesworth & Charlesworth, 2010).\n\nEvolution\n\nGreat comprehensive textbook covering evolution (Barton et al., 2007).\n\nCoalescent Theory: An Introduction\n\nA great introduction to coalescent theory (Wakeley, 2008).\n\nGene Genealogies, Variation and Evolution: A Primer in Coalescent Theory\n\nAlternative introduction to coalescent with more focus on the Wright-Fisher model (Hein et al., 2005)."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "17-Oct-2023: Note that the schedule is tentative and subject to change!\n\n\n\n\n\n\nNote\n\n\n\nCoffee breaks are planned for approximately 10:00 and 14:30 every day.\n\n\n\n\n 06-Nov-2023 Mon  Uppsala\n\n\n\n\n\n\n\n\n\n\nTime\nTopic\nTeacher\nAssistant\n\n\n\n08:30 - 09:30\nCoffee and registration\n\n\n\n\n09:00 - 09:30\nWelcome and general introduction\nPer Unneberg\nAS, JH, NO\n\n\n09:30 - 10:30\n\nPopulation genomics in practice \n\nPer Unneberg\n\n\n\n10:30 - 12:00\n\nPopulation genetics foundations \n\nPer Unneberg\n\n\n\n12:00 - 13:00\nLunch\n\n\n\n\n13:00 - 14:45\n\nIntroduction to the coalescent  \n\nPer Unneberg\nAS, JH, NO\n\n\n14:45 - 16:30\n\nIntroduction to msprime  \n\nPer Unneberg\nAS, JH, NO\n\n\n16:30 - 17:00\n\nOverview of SLiM, general applications \n\nPer Unneberg\nAS, JH, NO\n\n\n\n\n 07-Nov-2023 Tue  Uppsala\n\n\n\n\n\n\n\n\n\n\nTime\nTopic\nTeacher\nAssistant\n\n\n\n09:00 - 09:30\nRecap day 1\nPer Unneberg\n\n\n\n09:30 - 11:00\n\nVariant calling \n\nPer Unneberg\nAS, JH, NO\n\n\n11:00 - 12:00\n\nVariant filtering \n\nPer Unneberg\nAS, JH, NO\n\n\n12:00 - 13:00\nLunch\n\n\n\n\n13:00 - 17:00\nGenetic diversity, summarizing variation data\nPer Unneberg\nAS, JH, NO\n\n\n\n\n 08-Nov-2023 Wed  Uppsala\n\n\n\n\n\n\n\n\n\n\nTime\nTopic\nTeacher\nAssistant\n\n\n\n09:00 - 09:30\nRecap day 2\nPer Unneberg\n\n\n\n09:30 - 12:00\n\nPopulation structure \n\nNikolay Oskolkov\nAS, JH, PU\n\n\n12:00 - 13:00\nLunch\n\n\n\n\n13:00 - 15:00\n\nPopulation structure \n\nNikolay Oskolkov\nAS, JH, PU\n\n\n\n\n 09-Nov-2023 Thu  Uppsala\n\n\n\n\n\n\n\n\n\n\nTime\nTopic\nTeacher\nAssistant\n\n\n\n09:00 - 09:30\nRecap day 3\nNikolay Oskolkov\n\n\n\n09:30 - 12:00\nDemography\nAndré Soares\nJH, NO, PU\n\n\n12:00 - 13:00\nLunch\n\n\n\n\n13:00 - 17:00\nSelection\nJason Hill\nAS, NO, PU\n\n\n\n\n 10-Nov-2023 Fri  Uppsala\n\n\n\n\n\n\n\n\n\n\nTime\nTopic\nTeacher\nAssistant\n\n\n\n09:00 - 10:30\nRecap\nAndré Soares / Jason Hill / Nikolay Oskolkov / Per Unneberg\n\n\n\n10:30 - 11:30\nGuest lecture (TBA)\n\n\n\n\n11:30 - 12:00\nRecap\nAndré Soares / Jason Hill / Nikolay Oskolkov / Per Unneberg\n\n\n\n12:00 - 13:00\nLunch\n\n\n\n\n13:00 - 17:00\nProject discussion / networking / own time\n\n\n\n\n\n\n\n\n   Date    Venue    Slides    Exercises  \n\n\n  AS: André Soares, JH: Jason Hill, NO: Nikolay Oskolkov, PU: Per Unneberg\n\n\n\n\nLast updated on  17-Oct-2023"
  },
  {
    "objectID": "exercises/compute_environment/index.html",
    "href": "exercises/compute_environment/index.html",
    "title": "Compute environment",
    "section": "",
    "text": "Computer exercise requirements are listed in Tools callout blocks in each exercise. We will primarily use gitpod and JupyterLite for exercises, which ideally means you do not need to install any software dependencies yourself. The Tools callout block contains listings of programs, along with specifications for two fallback solutions, whenever relevant:"
  },
  {
    "objectID": "exercises/compute_environment/index.html#gitpod",
    "href": "exercises/compute_environment/index.html#gitpod",
    "title": "Compute environment",
    "section": "gitpod",
    "text": "gitpod"
  },
  {
    "objectID": "exercises/compute_environment/index.html#jupyterlite",
    "href": "exercises/compute_environment/index.html#jupyterlite",
    "title": "Compute environment",
    "section": "JupyterLite",
    "text": "JupyterLite"
  },
  {
    "objectID": "exercises/compute_environment/index.html#conda-1",
    "href": "exercises/compute_environment/index.html#conda-1",
    "title": "Compute environment",
    "section": "conda",
    "text": "conda\nThe first fallback option is to install software packages locally on your computer. We will use the conda package manager to install necessary requirements from the package repositories bioconda and conda-forge.\n1. Install conda\nTo start using conda, follow the quick command line install instructions to install the minimal conda installer miniconda.\n2. Configure conda\nConfigure conda to access the package repositories (see also bioconda usage). This will modify your ~/.condarc file:\n\nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\nconda config --set channel_priority strict\n\n\n\n\n\n\n\nImportant\n\n\n\nPlease note that the order of these commands is important!\n\n\n3. Create an isolated course environment\nIt is suggested you create and change to a isolated environment pgip dedicated to the course. We also suggest you use mamba package manager to install programs as this is much quicker.\n\nmamba create -n pgip python=3.10 r-base\nmamba activate pgip\n\nTo deactivate an environment you issue the command mamba deactivate.\n4. Install packages\nYou can install packages as follows (remember to activate pgip!):\n\nmamba install bcftools angsd mosdepth\n\nor if you have packages listed in an environment file\n\nmamba env update -f environment.yml"
  },
  {
    "objectID": "exercises/compute_environment/index.html#uppmax",
    "href": "exercises/compute_environment/index.html#uppmax",
    "title": "Compute environment",
    "section": "UPPMAX",
    "text": "UPPMAX\nAs another fallback option, you may need an uppmax account to run some of the exercises. You can apply for an account here.\nTutorials\nLook at https://www.uppmax.uu.se/support/user-guides/, in particular https://www.uppmax.uu.se/support/user-guides/guide--first-login-to-uppmax/ for information on how to connect to and work on uppmax."
  },
  {
    "objectID": "exercises/compute_environment/index.html#brief-introduction-to-bash",
    "href": "exercises/compute_environment/index.html#brief-introduction-to-bash",
    "title": "Compute environment",
    "section": "Brief introduction to bash",
    "text": "Brief introduction to bash"
  },
  {
    "objectID": "exercises/index.html",
    "href": "exercises/index.html",
    "title": "Exercises",
    "section": "",
    "text": "Scattered throughout the documents are exercise blocks, with hidden answers, and in some cases, hints. The exercises are for self-assessment of your understanding, but they are not mandatory.\nSome of the exercises (labelled with the linux penguin ) are related to the usage of the command line interfaces (CLI), and how to obtain information about what a program does. This is an essential skill when working in Linux/UNIX environments! These exercises can be skipped if you are an experienced Linux/UNIX user.\nAn example exercise is provided here:\n\n\n\n\n\n\nExample exercise block\n\n\n\n\n\n\n\n The ls command is used to list the contents of a directory. What option provides a so-called long listing format?\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n\nType ls --help to show the options to ls.\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\nThe -l option uses the long listing format, i.e., the command to use is ls -l."
  },
  {
    "objectID": "exercises/index.html#on-self-assessment-exercise-blocks",
    "href": "exercises/index.html#on-self-assessment-exercise-blocks",
    "title": "Exercises",
    "section": "",
    "text": "Scattered throughout the documents are exercise blocks, with hidden answers, and in some cases, hints. The exercises are for self-assessment of your understanding, but they are not mandatory.\nSome of the exercises (labelled with the linux penguin ) are related to the usage of the command line interfaces (CLI), and how to obtain information about what a program does. This is an essential skill when working in Linux/UNIX environments! These exercises can be skipped if you are an experienced Linux/UNIX user.\nAn example exercise is provided here:\n\n\n\n\n\n\nExample exercise block\n\n\n\n\n\n\n\n The ls command is used to list the contents of a directory. What option provides a so-called long listing format?\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n\nType ls --help to show the options to ls.\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\nThe -l option uses the long listing format, i.e., the command to use is ls -l."
  },
  {
    "objectID": "exercises/index.html#exercises",
    "href": "exercises/index.html#exercises",
    "title": "Exercises",
    "section": "Exercises",
    "text": "Exercises"
  },
  {
    "objectID": "exercises/variant_calling/index.html",
    "href": "exercises/variant_calling/index.html",
    "title": "Variant calling",
    "section": "",
    "text": "In this exercise we will produce a variant call set, going through the basic steps from quality control, read mapping to variant calling. We will be working on the Monkeyflowers dataset. Make sure to read the dataset document before running any commands as it will give you the biological background and general information about where to find and how to setup the data. We will focus on the red and yellow ecotypes in what follows."
  },
  {
    "objectID": "exercises/variant_calling/index.html#variant-calling-overview",
    "href": "exercises/variant_calling/index.html#variant-calling-overview",
    "title": "Variant calling",
    "section": "Variant calling overview",
    "text": "Variant calling overview\nA generic variant calling workflow consists of the following basic steps:\n\nread quality control and filtering\nread mapping\nremoval / marking of duplicate reads\njoint / sample-based variant calling\n\nThere are different tweaks and additions to each of these steps, depending on application and method.\nRead quality control\n\n\n\n \nFigure 1: Fastqc per base quality scores, read 1 (upper) and read 2 (lower panel).\n\nDNA sequencers score the quality of each sequenced base as phred quality scores, which is equivalent to the probability \\(P\\) that the call is incorrect. The base quality scores, denoted \\(Q\\), are defined as\n\\[\nQ = -10 \\log_{10} P\n\\]\nHence, a base quality score \\(Q=20\\) corresponds to a 1% probability that the call is incorrect. The base qualities typically drop towards the end of the reads (Figure 1). Prior to mapping it may therefore be prudent to remove reads that display too high drop in quality, too low mean quality, or on some other quality metric reported by the qc software.\nThe quality scores are encoded using ASCII codes. An example of a fastq sequence is given below. The code snippet shows an example of shell commands1 that are separated by a so-called pipe (|) character which takes the output from one process and sends it as input to the next2.\n\nzcat PUN-Y-INJ_R1.fastq.gz | head -n 4 | cut -c -30\n\ngzip: PUN-Y-INJ_R1.fastq.gz: No such file or directory\n\n\nA fastq entry consists of four lines:\n\nsequence id (prefixed by @)\nDNA sequence\nseparator (+)\nphred base quality scores\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\n Use the command wc to determine how many sequences are in PUN-Y-INJ_R1.fastq.gz.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nzcat PUN-Y-INJ_R1.fastq.gz | wc -l\n\nSince there are four lines per sequence (id, sequence, + separator, qualities) you need to divide the final number by four (622744 / 4).\n\n\n\n\n\n\n\n\n\n\nRead mapping\nRead mapping consists of aligning sequence reads, typically from individuals in a population (a.k.a. resequencing) to a reference sequence. The choice of read mapper depends, partly on preference, but mostly on the sequencing read length and application. For short reads, a common choice is bwa-mem, and for longer reads minimap2.\nIn what follows, we will assume that the sequencing protocol generates paired-end short reads (e.g., from Illumina). In practice, this means a DNA fragment has been sequence from both ends, where fragment sizes have been selected such that reads do not overlap (i.e., there is unsequenced DNA between the reads of a given insert size).\nThe final output of read mapping is an alignment file in binary alignment map (bam) format or variants thereof.\nRemoval / marking of duplicate reads\nDuring sample preparation or DNA amplification with PCR, it may happen that a single DNA fragment is present in multiple copies and therefore produces redundant sequencing reads. This shows up as alignments with identical start and stop coordinates. These so-called duplicate reads should be marked prior to any downstream analyses. The most commonly used tools for this purpose are samtools markdup and picard MarkDuplicates.\nVariant calling\nOnce bam files have been produced, it is time for variant calling. There are many different variant callers, of which we will mention four.\nbcftools is a toolkit to process variant call files, but also has a variant caller command. We will use bcftools to look at and summarize the variant files.\nfreebayes uses a Bayesian model to call variants. It may be very time-consuming in high-coverage regions, and one therefore may have to mask repetitive and other low-complexity regions.\nANGSD is optimized for low-coverage data. Genotypes aren’t called directly; rather, genotype likelihoods form the basis for all downstream analyses, such as calculation of diversity or other statistics.\nFinally, GATK HaplotypeCaller performs local realignment around variant candidates, which avoids the need to run the legacy GATK IndelRealigner. Realignment improves results but requires more time to run. GATK is optimized for human data. For instance, performance drops dramatically if the reference sequence consists of many short scaffolds/contigs, and there is a size limit to how large the chromosomes can be. It also requires some parameter optimization and has a fairly complicated workflow (Hansen, 2016).\nGATK best practice variant calling\nWe will base our work on the GATK Germline short variant discovery workflow. In addition to the steps outlined above, there is a step where quality scores are recalibrated in an attempt to correct errors produced by the base calling procedure itself.\nGATK comes with a large set of tools. For a complete list and documentation, see the “Tool Documentation Index” (2023)."
  },
  {
    "objectID": "exercises/variant_calling/index.html#preparation-reference-sequence-index-and-read-qc",
    "href": "exercises/variant_calling/index.html#preparation-reference-sequence-index-and-read-qc",
    "title": "Variant calling",
    "section": "Preparation: reference sequence index and read QC",
    "text": "Preparation: reference sequence index and read QC\nPrior to mapping we need to create a database index. We also generate a fasta index and a sequence dictionary for use with the picard toolkit.\n\nsamtools faidx M_aurantiacus_v1.fasta\npicard CreateSequenceDictionary --REFERENCE M_aurantiacus_v1.fasta\nbwa index M_aurantiacus_v1.fasta\n\nWe can generate fastqc reports for all input fastq files simultaneously, setting the output directory with the -o flag:\n\n# Make fastqc output directory; -p avoids error if it already exists\nmkdir -p fastqc\nfastqc -o fastqc *fastq.gz\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\ncd to the output directory and look at the html reports. Do you notice any difference between read 1 (R1) and read 2 (R2)?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\ncd fastqc\nopen PUN-Y-INJ_R1_fastqc.html\nopen PUN-Y-INJ_R2_fastqc.html\n\nThe traffic light summary indicates whether a given quality metric has passed or not. Typically, read 2 has slightly lower quality and more quality metrics with warnings. Since these reads have been deposited in the Sequence Read Archive (SRA), it is likely they were filtered prior to upload, and we will not take any further action here.\n\n\n\n\n\n\n\n\n\n\nWe will use MultiQC later on to combine the results from several output reports."
  },
  {
    "objectID": "exercises/variant_calling/index.html#read-mapping-1",
    "href": "exercises/variant_calling/index.html#read-mapping-1",
    "title": "Variant calling",
    "section": "Read mapping",
    "text": "Read mapping\nWe will start by mapping fastq read pairs to the reference. We will use the bwa read mapper together with samtools to process the resulting output.\nRead group information identifies sequence sets\nSome of the downstream processes require that reads have been assigned read groups (“Read Groups,” 2023), which is a compact string representation of a set of reads that originate from a sequencing unit and sample. Assigning read groups becomes particularly important for multiplexing protocols, or when a sample has been sequenced on different lanes or platform units, as it allows for the identification of sequence batch issues (e.g., poor sequencing quality). Here, we want to assign a unique ID, the sample id (SM), and the sequencing platform (PL), where the latter informs the algorithms on what error model to apply. The read group is formatted as @RG\\tID:uniqueid\\tSM:sampleid\\tPU:platform, where \\t is the tab character. More fields can be added; see the SAM specification, section 1.3 (HTS Format Specifications, 2023) for a complete list.\nSample information is available in the sampleinfo.csv file:\n\nhead -n 3 sampleinfo.csv\n\nhead: cannot open 'sampleinfo.csv' for reading: No such file or directory\n\n\nThe sample information is a combination of the run information obtained from the SRA (BioProject PRJNA549183) and the sample sheet provided with the article. An additional column SampleAlias has been added that names samples using a three-letter abbreviation for population hyphenated with the sample identifier. For the ssp. puniceus, an additional one-letter character denoting the color ecotype is inserted between population and sample id. PUN-Y-BCRD then is a sample from the puniceus subspecies with the yellow ecotype. We will use the Run column as unique ID, SampleAlias as the sample id SM, and ILLUMINA as the platform PL.\nRead mapping with bwa and conversion to bam format with samtools\nLet’s map the fastq files corresponding to sample PUN-Y-BCRD:\n\nbwa mem -R \"@RG\\tID:SRR9309788\\tSM:PUN-Y-BCRD\\tPL:ILLUMINA\" -t 4 \\\n -M M_aurantiacus_v1.fasta PUN-Y-BCRD_R1.fastq.gz PUN-Y-BCRD_R2.fastq.gz | \\\n samtools sort - | samtools view -h -o PUN-Y-BCRD.sort.bam\n\nThere’s a lot to unpack here. First, the -R flag to bwa mem passes the read group information to the mapper. -t sets the number of threads, and -M marks shorter split hits as secondary, which is for Picard compatibility3. The first positional argument is the reference sequence, followed by the fastq files for read 1 and 2, respectively.\nThe output would be printed on the screen (try running the bwa mem command alone!), but we pipe the output to samtools sort to sort the mappings (by default by coordinate). The - simply means “read from the pipe”.\nFinally, samtools view converts the text output to binary format (default), including the header information (option -h). You can use the same command to view the resulting output on your screen:\n\nsamtools view PUN-Y-BCRD.sort.bam | head -n 2\n\n[E::hts_open_format] Failed to open file \"PUN-Y-BCRD.sort.bam\" : No such file or directory\nsamtools view: failed to open \"PUN-Y-BCRD.sort.bam\" for reading: No such file or directory\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nLook at the header information of the output bam file. What does the @SQ tag stand for, and what does the information on that line tell you?\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n\nTo get a list of options, type samtools view. The -H option views the header only.\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nsamtools view -H PUN-Y-BCRD.sort.bam\n\n[E::hts_open_format] Failed to open file \"PUN-Y-BCRD.sort.bam\" : No such file or directory\nsamtools view: failed to open \"PUN-Y-BCRD.sort.bam\" for reading: No such file or directory\n\n\nAlthough you can probably figure it out by looking at the data, do have a glance at the SAM format specification mentioned above. The @SQ tag corresponds to the reference sequence dictionary and tells you what region you are looking at (chromosome LG4, which has a length LN 100000 bases; the example reference sequence was created by extracting the region on LG4 from position 12000000 to 12100000).\n\n\n\n\n\n\n\n\n\n\nMapping from uBAM file\nThere is an alternative storage format for the fastq files called uBAM (unmapped BAM format). The GATK developers promote its use in lieu of fastq files since BAM files can store more metadata associated with sequencing runs. The workflow is slightly more complex, but the files have been prepared for you so you don’t need to worry about generating the uBAM files.\nTo facilitate downstream processing, we will from now on make use of environment variables4 to refer to a sample and the reference sequence. Retrieve the SRR id from the sampleinfo file.\n\nexport SRR=SRR9309790\nexport SAMPLE=PUN-Y-INJ\nexport REF=M_aurantiacus_v1.fasta\nsamtools fastq ${SAMPLE}.unmapped.bam | \\\n bwa mem -R \"@RG\\tID:${SRR}\\tSM:${SAMPLE}\\tPL:ILLUMINA\" -t 4 -p -M ${REF} - | \\\n samtools sort - | samtools view -h -o ${SAMPLE}.sort.bam\n\nNote that we here need to use the command samtools fastq to read the contents of ${SAMPLE}.unmapped.bam and pipe the output to bwa mem.\nMark duplicate reads with Picard MarkDuplicates\nOnce mapping is completed, we must find and mark duplicate reads as these can distort the results of downstream analyses, such as variant calling. We here use Picard MarkDuplicates5:\n\npicard MarkDuplicates --INPUT ${SAMPLE}.sort.bam \\\n    --METRICS_FILE ${SAMPLE}.sort.dup_metrics.txt \\\n    --OUTPUT ${SAMPLE}.sort.dup.bam\n\nThe metrics output file contains information on the rate of duplication. We will include the output in the final multiqc report.\nGenerate high quality known sites for BQSR\nOnce we have a duplicate marked bam file, we can proceed with Base Quality Score Recalibration (BQSR). The purpose here is to correct any systematic errors made by the sequencing machine. This is done by applying a machine learning model. Before we do so, however, we need to generate a list of known sites that should not be recalibrated6 Therefore, we will first perform a preliminary round of variant calling and filtering to generate a known sites callset.\n\ngatk HaplotypeCaller -OVI true \\\n  --emit-ref-confidence GVCF \\\n  --annotation FisherStrand -A QualByDepth -A MappingQuality -G StandardAnnotation \\\n  --input ${SAMPLE}.sort.dup.bam --output ${SAMPLE}.sort.dup.raw.hc.g.vcf.gz \\\n  --reference ${REF}\ngatk VariantFiltration -OVI true \\\n  --variant ${SAMPLE}.sort.dup.raw.hc.g.vcf.gz \\\n  --output ${SAMPLE}.sort.dup.raw.hc.filtered.g.vcf.gz \\\n     --filter-name FisherStrand --filter 'FS &gt; 50.0' \\\n  --filter-name QualByDepth --filter 'QD &lt; 4.0' \\\n  --filter-name MappingQuality --filter 'MQ &lt; 50.0'\n\nHaplotypeCaller is GATK’s variant caller that calls both SNPs and indels by realigning sequences in the vicinity of sites that harbor variation. We apply the -ERC option to generate GVCF output format, a condensed VCF format that includes non-variant sites as well as variant sites. The --annotation (-A) option adds annotations to the output that are used in the subsequent filtering step.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\n What does the -OVI parameter do?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\nEither go to the HaplotypeCaller documentation page or type7\n\ngatk HaplotypeCaller --help 2&gt;&1 | less\n\nand look for -OVI. This option is shorthand for --create-output-variant-index and makes HaplotypeCaller create a VCF index.\n\n\n\n\n\n\n\n\n\n\nVariantFiltration does what its name suggests. The --filter-name / --filter option pairs apply named filters to the input data. For instance, we here remove variants whose mapping quality is below 50.0.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nGo to the Tool Documentation Index and look up the documentation for the FisherStrand and QualByDepth variant annotations. What do they do and why do you think the filters are applied as they are?\n\n\n\n\n\nNow we have per-sample known sites callsets that can be used as input to BQSR.\nBase quality score recalibration\nBase quality score recalibration consists of two commands:\n\ngatk BaseRecalibrator -I ${SAMPLE}.sort.dup.bam \\\n  -R ${REF} --known-sites ${SAMPLE}.sort.dup.raw.hc.filtered.g.vcf.gz \\\n  -O ${SAMPLE}.sort.dup.recal.table\ngatk ApplyBQSR -bqsr ${SAMPLE}.sort.dup.recal.table \\\n  -I ${SAMPLE}.sort.dup.bam -O ${SAMPLE}.sort.dup.recal.bam\n\nBaseRecalibrator compiles empirical data for all non-variant sites for an input bam file for a number of covariates (e.g., nucleotide context). The basic idea is to fit a probability of error (i.e., a quality score of sorts), to observed covariate combinations, which is recorded in a recalibration table file. The probability is then used correct the quality scores reported by the sequencing machine in ApplyBQSR.\nOPTIONAL: Examine the output of BQSR\nWe can investigate how well BQSR has performed by applying two more commands. First, we generate a calibration table for the recalibrated bam file:\n\ngatk BaseRecalibrator -I ${SAMPLE}.sort.dup.recal.bam \\\n  -R ${REF} --known-sites ${SAMPLE}.sort.dup.raw.hc.filtered.g.vcf.gz \\\n  -O ${SAMPLE}.sort.dup.recal.after.table\n\nThen we use the two calibration tables as input to AnalyzeCovariates to generate a pdf output (and a csv file that we will use in the next code block):\n\ngatk AnalyzeCovariates -before ${SAMPLE}.sort.dup.recal.table \\\n  -after ${SAMPLE}.sort.dup.recal.after.table \\\n  -plots ${SAMPLE}.sort.dup.recal.after.pdf \\\n  -csv ${SAMPLE}.sort.dup.recal.after.csv\n\n?@fig-bqsr-analyze-covariates-plot shows an example plot of quality values for base substitutions. There are more plots and summaries in the pdf output file.\n\n\n\nError in file(file, \"rt\"): cannot open the connection\n\n\nError in subset.default(data, EventType == \"Base Substitution\" & CovariateName == : object 'EventType' not found\n\nSeveral rounds of generating known sites followed by BQSR can be applied until convergence. This means that running BQSR can be time-consuming, and one side effect is that the resulting bam output files can become very large, which may or not be a problem. Also, sequencing technologies keep improving, potentially eliminating concerns of biased quality scores. This begs the question: is it worth running BQSR? For the time being, the GATK developers do recommend that BQSR always be run. Keep in mind though, that for non-model organisms, one issue is that there seldom is a catalogue of known sites, which means the user has to bootstrap such a call set, like we did above. For a more complete discussion, see the technical documentation on BQSR."
  },
  {
    "objectID": "exercises/variant_calling/index.html#variant-calling-and-genotyping",
    "href": "exercises/variant_calling/index.html#variant-calling-and-genotyping",
    "title": "Variant calling",
    "section": "Variant calling and genotyping",
    "text": "Variant calling and genotyping\nAfter we have generated the recalibrated bam files, we can proceed with the “real” variant calling. We once again run GATK HaplotypeCaller and VariantFiltration.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nUsing the code in section Generate high quality known sites for BQSR as a template, run GATK HaplotypeCaller on the recalibrated bam file, followed by VariantFiltration. For the latter, modify the filters to\n\nfilterName: FisherStrand, filter: FS &gt; 60.0\nfilterName: QualByDepth, filter: QD &lt; 2.0\nfilterName: MappingQuality, filter: MQ &lt; 40.0\n\nChange the output file label from raw to recal (i.e., .sort.dup.raw becomes .sort.dup.recal).\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\ngatk HaplotypeCaller -OVI true \\\n  --emit-ref-confidence GVCF \\\n  --annotation FisherStrand -A QualByDepth -A MappingQuality -G StandardAnnotation \\\n  --input ${SAMPLE}.sort.dup.recal.bam --output ${SAMPLE}.sort.dup.recal.hc.g.vcf.gz \\\n  --reference ${REF}\ngatk VariantFiltration -OVI true \\\n  --variant ${SAMPLE}.sort.dup.recal.hc.g.vcf.gz \\\n  --output ${SAMPLE}.sort.dup.recal.hc.filtered.g.vcf.gz \\\n     --filter-name FisherStrand --filter 'FS &gt; 60.0' \\\n  --filter-name QualByDepth --filter 'QD &lt; 2.0' \\\n  --filter-name MappingQuality --filter 'MQ &lt; 40.0'\n\n\n\n\n\n\n\n\n\n\n\nThat concludes the sample-specific part of the variant calling workflow! Now we need to combine the samples and perform genotyping. To do so, we need to run the same commands, from mapping to variant calling and filtering on recalibrated files, for all samples.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nIf time permits, run the workflow on some more samples (e.g., PUN-R-ELF).\n\n\n\n\n\n\nImportant\n\n\n\nThere are prepared gVCF files for download so there’s no need to run the workflow on all samples.\n\n\n\n\n\n\n\nCompile QC metrics\nIdentifying sample quality issues is crucial for downstream processing. Quality metrics that indicate problems with a sample could potentially lead to its removal entirely from subsequent analyses. Many programs generate QC metrics, but as it is difficult to get an overview by sifting through all separate QC reports, it is recommended that you compile them with MultiQC. Running MultiQC is as simple as\n\nmultiqc .\n\nOpen the report multiqc_report.html to quickly QC your data. There are lots of ways you can interactively modify the report to make more logical groupings (e.g., grouping reports by sample8) , but we won’t go into this topic in more detail here.\nCombine genomic VCF files and genotype\nWe are now at the stage where we can do genotyping of our samples. This done by first combining individual sample gVCF files with GATK CombineGVCFs, followed by genotyping with GenotypeGVCFs.\n\ngatk CombineGVCFs -OVI true --output combine.subset.g.vcf.gz --reference ${REF} \\\n  -V PUN-Y-INJ.sort.dup.recal.hc.g.vcf.gz \\\n  -V PUN-R-ELF.sort.dup.recal.hc.g.vcf.gz\ngatk GenotypeGVCFs -OVI true -R ${REF} -V combine.subset.g.vcf.gz \\\n  -O allsites.subset.vcf.gz --all-sites\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nCreate a variant call set allsites.vcf.gz but for all the red and yellow samples.\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n\nYou need to specify all gVCF input files via the --variants (-V) option. To get the sample names, look at the first column of sampleinfo.csv:\n\ncat sampleinfo.csv | grep yellow | cut -f 1 -d \",\"\n\ncat: sampleinfo.csv: No such file or directory\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\ngatk CombineGVCFs -OVI true --output combine.subset.g.vcf.gz --reference ${REF} \\\n     -V PUN-R-ELF.sort.dup.recal.hc.g.vcf.gz \\\n     -V PUN-R-JMC.sort.dup.recal.hc.g.vcf.gz \\\n     -V PUN-R-LH.sort.dup.recal.hc.g.vcf.gz \\\n     -V PUN-R-MT.sort.dup.recal.hc.g.vcf.gz \\\n     -V PUN-R-UCSD.sort.dup.recal.hc.g.vcf.gz \\\n     -V PUN-Y-BCRD.sort.dup.recal.hc.g.vcf.gz \\\n     -V PUN-Y-INJ.sort.dup.recal.hc.g.vcf.gz \\\n     -V PUN-Y-LO.sort.dup.recal.hc.g.vcf.gz \\\n     -V PUN-Y-PCT.sort.dup.recal.hc.g.vcf.gz \\\n     -V PUN-Y-POTR.sort.dup.recal.hc.g.vcf.gz\ngatk GenotypeGVCFs -OVI true -R ${REF} -V combine.g.vcf.gz \\\n  -O allsites.vcf.gz --all-sites"
  },
  {
    "objectID": "exercises/variant_calling/index.html#looking-closer-at-variants-with-bcftools",
    "href": "exercises/variant_calling/index.html#looking-closer-at-variants-with-bcftools",
    "title": "Variant calling",
    "section": "Looking closer at variants with bcftools",
    "text": "Looking closer at variants with bcftools\nAs a final step, let’s run a couple of commands to view variants and summarize variant statistics.\nCompiling statistics\nFirst out is bcftools stats, which compiles a summary of statistics, such as number of variants, quality distribution over variants, indel distributions and more.\n\nbcftools stats allsites.vcf.gz &gt; allsites.vcf.gz.stats\n\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n\n\nThe output text file consists of report sections that can be easily extracted with the grep command by virtue of the fact that the first column corresponds to a shortcode of the statistic. For instance, SN corresponds to Summary numbers:\n\ngrep \"^SN\" allsites.vcf.gz.stats\n\nHere, we can see that we have included non-variant sites (no-ALTs), that there are indels, and that a number of sites are multiallelic (more than two alleles).\nRerunning MultiQC will automatically add this report.\n\n# Use -f to overwrite old report\nmultiqc -f .\n\nWe will use bcftools stats in the next exercise to look more closely at variant quality metrics.\nLooking inside the VCF\nA Variant Call Format (VCF) file consists of three sections: meta-information lines (prefixed with ##), a header line (prefixed with #), followed by the data. The meta-information contains provenance information detailing how the file was generated, FILTER specification, INFO fields that provide additional information to genotypes, FORMAT specification fields that define genotype entries, and more. You can print the header with the command bcftools view -h. An example of each is given below:\n\nbcftools view -h allsites.vcf.gz | grep FILTER | head -n 1\nbcftools view -h allsites.vcf.gz | grep INFO | head -n 1\nbcftools view -h allsites.vcf.gz | grep FORMAT | head -n 1\n\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n\n\nThe header field consists of eight mandatory columns CHROM, POS, ID, REF, ALT, QUAL, FILTER and INFO, followed by FORMAT and sample columns that contain the called genotypes:\n\nbcftools view -h allsites.vcf.gz | grep CHROM\n\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n\n\nLet’s look at the first SNP entry (here, the first line extracts the position of the SNP):\n\npos=$(bcftools view -v snps -s PUN-R-JMC allsites.vcf.gz -H | head -n 1 | cut -f 2)\nbcftools view -v snps -s PUN-R-JMC allsites.vcf.gz LG4:$pos | tail -n 2\n\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n[E::_regions_init_string] Could not parse the region(s): LG4:\nFailed to read the regions: LG4:\n\n\nThe most important columns are CHROM, which indicates the sequence (LG4), the genome position POS, the reference allele REF (i.e., the nucleotide in the reference sequence), and the alternate allele ALT, which is the called variant. QUAL is a Phred-scaled quality of the call and can be used to filter low-quality calls. The FILTER column can be used to set filter flags. The INFO column contains metadata concerning the site; for instance, DP is the approximate read depth, the definition of which is included in the meta-information:\n\nbcftools view -h allsites.vcf.gz | grep INFO | grep \"ID=DP\"\n\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n\n\nFinally, the columns following FORMAT pertain to the samples and contain the genotype calls, formatted according to the - you guessed it - FORMAT column. The example above contains a number of fields, where GT is the genotype:\n\nbcftools view -h allsites.vcf.gz | grep FORMAT | grep \"ID=GT\"\n\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n\n\nFor diploid samples, the genotype format is #/#, or #|# for phased data, where the hash marks are numbers that refer to the reference (0) and alternate (1 or higher) alleles. A . indicates a missing call.\nViewing variants and regions\nThe bcftools view command allows for quick access and viewing of file contents. A prerequisite is that we first index the file:\n\nbcftools index allsites.vcf.gz\n\nafter which we can view, say, the first three indel variants in the region 12,010,000-12,010,100, corresponding to VCF coordinates 10,000-10,1009:\n\nbcftools view -v indels -H allsites.vcf.gz LG4:10000-10100\n\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n\n\nbcftools view has many options for subsetting and filtering variants. Remember to consult the help pages!\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\n How many SNPs are there in region LG4:12010000-12000100?\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n\nLook in the help page for option -v.\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\n# Option -H omits the header information\nbcftools view -H -v snps allsites.vcf.gz LG4:10000-10100\n# Could also use wc -l to count the number of lines\nbcftools view -H -v snps allsites.vcf.gz LG4:10000-10100 | wc -l\n\n\n\n\n\n\n\n\n\n\n\nSelecting samples\nFinally, we look at how we can select samples from a variant file. To list the samples in a file, we can run bcftools query:\n\nbcftools query -l allsites.vcf.gz\n\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory\n\n\nSelecting indel variants for a given sample, say PUN-Y-BCRD, and region LG4:12001000-12001100 can then be done as follows:\n\nbcftools view -H -s PUN-Y-BCRD -v indels allsites.vcf.gz LG4:1000-1100\n\n[E::hts_open_format] Failed to open file \"allsites.vcf.gz\" : No such file or directory\nFailed to read from allsites.vcf.gz: No such file or directory"
  },
  {
    "objectID": "exercises/variant_calling/index.html#footnotes",
    "href": "exercises/variant_calling/index.html#footnotes",
    "title": "Variant calling",
    "section": "Footnotes",
    "text": "Footnotes\n\nFor any shell command, use the option --help to print information about the commands and its options. zcat is a variant of the cat command that prints the contents of a file on the terminal; the z prefix shows the command works on compressed files, a common naming convention. head views the first lines of a file, and cut can be used to cut out columns from a tab-delimited file, or in this case, cut the longest strings to 30 characters width.↩︎\nFor more information, see unix pipelines ↩︎\nSimply type man bwa mem at the command line for general help and a complete list of options.↩︎\nBriefly, environment variables are a great way to generalise commands. To reuse the command, one only needs to modify the value of the variable.↩︎\nThe actual command call will depend on how Picard was installed. The conda installation provides access via the picard wrapper, whereas on UPPMAX you must point java to the actual jar file (java -jar $PICARD_ROOT/picard.jar)↩︎\nIf we don’t supply a list of known sites, the variants will be treated as errors and therefore recalibrated to the reference state.↩︎\nSome programs, such as GATK, print their help output to stderr, one of two so-called standard output streams (the other being stdout). The 2&gt;&1 is a construct that redirects (&gt;) the output from stderr (2) to stdout (1) and does so in the background (&). By piping to less we can scroll through the documentation.↩︎\nMultiQC does a fairly good job at this as it is, but it does so by guessing sample names from file names. You may need to help it along the way by using the rename tab.↩︎\nAlthough the reference sequence corresponds to region LG4:12000000-12100000, the coordinates in allsites.vcf.gz start from 1↩︎"
  },
  {
    "objectID": "slides/index.html",
    "href": "slides/index.html",
    "title": "Slides",
    "section": "",
    "text": "A note on usage\nHtml slides have been authored using revealjs and can be viewed directly in the browser. In some cases, there are accompanying speaker notes that can be viewed by pressing s. Whenever there is a  symbol, it links to a recipe that is related to the figure or content on the active slide.\n\n\nSlides\n\n\n\n\n\n\n\nPopulation genomics in practice\n\n\nWhat is population genomics?\n\n\n\nPer Unneberg\n\n\n\n\n\n\n\n\n\n\n\nPopulation genetics\n\n\nFoundations\n\n\n\nPer Unneberg\n\n\n\n\n\n\n\n\n\n\n\nSimulation\n\n\nPrimer on the coalescent and forward simulation\n\n\n\nPer Unneberg\n\n\n\n\n\n\n\n\n\n\n\nPopulation structure\n\n\nPrincipal Component Analysis, Admixture and F-statistics\n\n\n\nNikolay Oskolkov, (uses material from lectures of Ben Peter, Anders Albrechtsen, Ida Moltke, Graham Coop)\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "slides/foundations/index.html#intended-learning-outcomes",
    "href": "slides/foundations/index.html#intended-learning-outcomes",
    "title": "Population genetics",
    "section": "Intended learning outcomes",
    "text": "Intended learning outcomes\nIntroduction to foundations of population genetics with an emphasis on genealogies\n\nDescription of DNA variation data\nWright-Fisher population model and genealogies\nGenetic drift\nWright-Fisher model with mutation\nMutation-drift balance\nNeutral theory\nSelection basics\n\n\nObjective: introduce the foundations of population genetics, with an emphasis on genealogies. Framing population genetic concepts in trees will facilitate the introduction of the coalescent in the afternoon.\nThe lecture presents sequence data, the Wright-Fisher model, genetic drift, mutation, and selection. The focus is to familiarise students with concepts and basic theory."
  },
  {
    "objectID": "slides/foundations/index.html#dna-variation-1",
    "href": "slides/foundations/index.html#dna-variation-1",
    "title": "Population genetics",
    "section": "DNA variation",
    "text": "DNA variation\n\n\nSequence aligmnent of four DNA sequences (Hahn, 2019, Fig 1.1). \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\n\nThe main data for molecular population genetics are DNA sequences. The alignment above shows a sample of four DNA sequences. Each sequence has 15 nucleotides (sites) “from the same locus (location) on a chromosome” (p.2 Hahn, 2019)\n\n\n\nAlternative names for sequence:\n\n\n\n\n\nchromosome\ngene\n\n\n\n\n\nallele (different by origin)\nsample\ncistron\n\n\n\n\n\n\nWe will preferentially use sequence or chromosome to refer to an entire sequence, and allele to refer to individual nucleotides that differ."
  },
  {
    "objectID": "slides/foundations/index.html#dna-variation---monomorphic-sites",
    "href": "slides/foundations/index.html#dna-variation---monomorphic-sites",
    "title": "Population genetics",
    "section": "DNA variation - monomorphic sites",
    "text": "DNA variation - monomorphic sites\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n*\n\n*\n*\n\n*\n*\n\n*\n*\n\n*\n\n*\nT\n\n\n\n\nThe alignment has 4 DNA sequences where each sequence has length \\(L=15\\). A site where all nucleotides (alleles) are identical is called a monomorphic site (indicated with asterisks above). There are 9 monomorphic sites."
  },
  {
    "objectID": "slides/foundations/index.html#dna-variation---segregating-sites",
    "href": "slides/foundations/index.html#dna-variation---segregating-sites",
    "title": "Population genetics",
    "section": "DNA variation - segregating sites",
    "text": "DNA variation - segregating sites\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\n*\n\n\n*\n\n\n*\n\n\n*\n\n*\n\n*\n\n\n\n\nA site where there are different nucleotides (alleles) is called a segregating site (indicated with asterisks above), often denoted S. There are \\(S=6\\) segregating sites.\n\n\n\nAlternative names for segregating site are:\n\n\n\npolymorphism\nmutation\nsingle nucleotide polymorphism (SNP)\n\n\n\n\nmutation here and onwards refers to the process that generates new variation and the new variants generated by this process\nIn contrast to mutation which corresponds to within-species variation, a substitution refers to DNA differences between species."
  },
  {
    "objectID": "slides/foundations/index.html#dna-variation---major-and-minor-alleles",
    "href": "slides/foundations/index.html#dna-variation---major-and-minor-alleles",
    "title": "Population genetics",
    "section": "DNA variation - major and minor alleles",
    "text": "DNA variation - major and minor alleles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\n*\n\n\n*\n\n\n*\n\n\n*\n\n*\n\n*\n\n\n\n\nMuch of the nucleotide variation we study consists of bi-allelic SNPs. The most common variant is called the major allele, and the least common the minor allele.\nThe set of alleles found on a single sequence is called haplotype."
  },
  {
    "objectID": "slides/foundations/index.html#describing-dna-variation---heterozygosity",
    "href": "slides/foundations/index.html#describing-dna-variation---heterozygosity",
    "title": "Population genetics",
    "section": "Describing DNA variation - heterozygosity",
    "text": "Describing DNA variation - heterozygosity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\n*\n\n\n*\n\n\n*\n\n\n*\n\n*\n\n*\n\n\n\n\nOnce we have a sample of sequences we want to describe the observed variation. At any position the ith allele has sample frequency \\(p_i\\), where the sum of all allele frequencies is 1. For instance, at site 1, \\(p_T=1\\) (and by extension \\(p_A=p_C=p_G=0\\)), and at site 2 \\(p_C=1/4\\) and \\(p_T=3/4\\).\n\n\n\n\nHeterozygosity\n\nThe heterozygosity at a site \\(j\\) is given by\n\\[\nh_j = \\frac{n}{n-1}\\left(1 - \\sum_i p_i^2\\right)\n\\]\nwhere the summation is over all alleles and \\(p_i\\) is the frequency of the \\(i\\)-th allele\n\n\n\n\nExercise: calculate the heterozygosity at sites 1, 2 and 5\n\n\n\n\n\\[\nh_1 = \\frac{4}{3} \\left(1 - p_T^2 \\right) = 0 \\\\\nh_2 = \\frac{4}{3} \\left(1 - \\left(p_C^2 + p_T^2\\right) \\right) = \\frac{4}{3} \\left( 1 - \\left(\\frac{1}{16} + \\frac{9}{16}\\right)\\right) = \\frac{1}{2}\\\\\nh_5 = \\frac{4}{3} \\left(1 - \\left(p_A^2 + p_G^2\\right) \\right) = \\frac{4}{3} \\left( 1 - \\left(\\frac{1}{4} + \\frac{1}{4}\\right)\\right) = \\frac{2}{3}\n\\]\n\n\n\n\n\nIn a randomly mating population, the heterozygosity is equal to the frequency of heterozygotes. Note however that the definition of heterozygosity only relies on allele frequencies, which means it can be applied to populations that are not in Hardy-Weinberg equilibrium. It can also be applied to haploid organisms, like bacteria."
  },
  {
    "objectID": "slides/foundations/index.html#describing-dna-variation---nucleotide-diversity",
    "href": "slides/foundations/index.html#describing-dna-variation---nucleotide-diversity",
    "title": "Population genetics",
    "section": "Describing DNA variation - nucleotide diversity",
    "text": "Describing DNA variation - nucleotide diversity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\n*\n\n\n*\n\n\n*\n\n\n*\n\n*\n\n*\n\n\n\n\n\n\n\n\nNucleotide diversity \\(\\pi\\)\n\nThe nucleotide diversity is the sum of site heterozygosities:\n\\[\n\\pi = \\sum_{j=1}^S h_j\n\\]\nwhere \\(S\\) is the number of segregating sites\n\n\n\n\nCalculate the nucleotide diversity\n\n\n\nObservation: \\(h_i\\) either 1/2 or 2/3 (for sites with \\(p_{major}=p_{minor}\\)).\n\n\n\n\\[\n\\pi = \\frac{1}{2} + \\frac{2}{3} + \\frac{1}{2} + \\frac{2}{3} + \\frac{1}{2} + \\frac{1}{2} = 3\\frac{1}{3}\n\\]\n\n\n\nOften we provide \\(\\pi\\) per site:\n\\[\n\\pi = 3.33/15 = 0.222\n\\]\n\n\n\n\nHahn (2019) implicitly assumes we are looking at DNA polymorphism. The expression actually holds for any genetic variation at a locus, and is sometimes called the gene diversity (Nei & Kumar, 2000, p. 245).\nUnder the infinite sites model, \\(E(\\pi)=\\theta=4N_e\\mu\\), for which reason \\(\\pi\\) sometimes is called \\(\\theta_\\pi\\). The measure gives the average number of pairwise nucleotide differences between two sequences, so an alternative expression is\n\\[\n\\pi = \\frac{\\sum_{i&lt;j}k_{ij}}{n(n-1)/2}\n\\]\nThe latter expression is called the nucleotide diversity (Nei & Kumar, 2000, p. 251)."
  },
  {
    "objectID": "slides/foundations/index.html#alleles-as-algebraic-entities",
    "href": "slides/foundations/index.html#alleles-as-algebraic-entities",
    "title": "Population genetics",
    "section": "Alleles as algebraic entities",
    "text": "Alleles as algebraic entities\nRecall: alleles refer to different variants of a sequence at a locus (genomic position).\n\nWhatever the underlying molecular nature (gene, chromosome, nucleotide, protein), let’s represent a locus by a letter, e.g., \\(A\\) (\\(B\\) if two loci, and so on)\n\n\nIf locus has many alleles \\(1, 2, ...\\) , could use indexing \\(A_1, A_2, ...\\).\n\n\nWill use combination \\(A\\), \\(a\\) for bi-allelic loci from now on\n\n\n\n\n\nExample: gene coding for flower color\n\n\n\n\n \\(A\\) red color\n \\(a\\) white color\n\n\n\nPunnett square\n\n\n \\ \n\n\nA\n\n\na\n\n\nA\n\n\n\n\n\n\n\n\na\n\n\n\n\n\n\n\n\n\n\n\n\n\nGenotype\n\n\naa\n\n\nAa\n\n\nAA\n\n\nPhenotype\n\n\n\n\n\n\n\n\n\n\n\nHeterozygote has intermediate color phenotype (pink).\n\n\n\n\n\n\n\nUntil now the examples have been based on nucleotide sequences. However, much of population genetic theory was developed before the nature of heredity (DNA) was known. In these early days, an allele would refer to variant forms of a gene, observed as differences in phenotypes. Genes, or loci, would be denoted using alphabetic characters, such as \\(A\\), and allelic types could be referenced with indices, e.g., \\(A_1, A_2, ..., A_n\\).\nTo simplify calculations, we often look at one locus and we assume two alleles, whereby we skip the indices and denote the allelic pairs \\(A\\) and \\(a\\) (although note that notations differs from author to author; for instance Gillespie (2004) uses \\(A_1, A_2\\) for bi-allelic loci). For two-locus systems we simply denote the second allele with \\(B, b\\), and so on.\nThe example shows a hypothetical locus having two alleles \\(A\\) and \\(a\\) that have phenotypes red and white flower color, and where heterozygotes are colored pink. The Punnett square shows how gamete combinations form genotypes and their corresponding phenotypes."
  },
  {
    "objectID": "slides/foundations/index.html#alleles-and-frequencies",
    "href": "slides/foundations/index.html#alleles-and-frequencies",
    "title": "Population genetics",
    "section": "Alleles and frequencies",
    "text": "Alleles and frequencies\nWe will be interested in looking at the dynamics of alleles, i.e., how their abundances in the population change over time. Therefore we want to measure the frequencies of alleles \\(A\\) and \\(a\\).\n\n\n\n\n\n\nExample\n\n\nAssume following population (\\(n=10\\), with \\(n_{AA}=5\\), \\(n_{Aa}=4\\), \\(n_{aa}=1\\)):\n         \n\nLet \\(p\\) be frequency of \\(A\\) alleles, \\(q=1-p\\) frequency of \\(a\\) alleles; then\n5 \\(AA\\) individuals, 4 \\(Aa\\) individuals \\(\\Rightarrow p=\\frac{5\\cdot2 + 4\\cdot1}{10\\cdot2}=\\frac{14}{20}=0.7\\)\nand \\(q=1-p=\\frac{6}{20}=0.3\\)\n\n\nInserting frequencies into Punnett square gives expected frequency of offspring genotypes.\n\n\n\n\n\n\n\n\n\n \\ \n\n\n\\(A\\) (\\(p=0.7\\))\n\n\n\\(a\\) (\\(q=0.3\\))\n\n\n\\(A\\) (\\(p=0.7\\))\n\n\n\n\\(p\\cdot p = 0.49\\)\n\n\n\n\\(p\\cdot q = 0.21\\)\n\n\n\\(a\\) (\\(q=0.3\\))\n\n\n\n\\(q\\cdot p = 0.21\\)\n\n\n\n\\(q\\cdot q = 0.09\\)\n\n\n\n\nExpected allele frequencies after mating: \\(p=p^2 + pq=0.7\\), \\(q=1-p=0.3\\)\n\n\n\n\nGiven \\(n\\) diploid individuals, there are \\(2n\\) alleles in the population. The frequency of allele \\(A\\) is then the homozygote \\(AA\\) times two, plus one times the individuals carrying one \\(A\\).\nThe Punnett square shows that the expected homozygote frequencies are \\(0.49\\) and \\(0.09\\) for \\(AA\\) and \\(aa\\), and hence, the frequency of \\(Aa\\) is \\(1 - 0.49 - 0.09 = 0.42 = 0.21 + 0.21 = 2pq\\)"
  },
  {
    "objectID": "slides/foundations/index.html#in-absence-of-evolutionary-forces-alleles-are-in-equilibrium",
    "href": "slides/foundations/index.html#in-absence-of-evolutionary-forces-alleles-are-in-equilibrium",
    "title": "Population genetics",
    "section": "In absence of evolutionary forces alleles are in equilibrium",
    "text": "In absence of evolutionary forces alleles are in equilibrium\nThe Hardy-Weinberg equilibrium\nFor a locus, let \\(A\\) and \\(a\\) be two different alleles and let \\(p\\) be the frequency of the \\(A\\) allele and \\(q=1-p\\) the frequency of the \\(a\\) allele. In the absence of mutation, drift, migration, and other evolutionary processes, the equilibrium state is given by the Hardy-Weinberg equilibrium (HWE).\n\n\n\n\n\nGenotype:\n\\(AA\\)\n\\(Aa\\)\n\\(aa\\)\n\n\nFrequency:\n\\(p^2\\)\n\\(2pq\\)\n\\(q^2\\)\n\n\n\n\n\n\n\n\n\n\\(A\\) (\\(p\\))\n\\(a\\) (\\(q\\))\n\n\n\n\n\\(A\\) (\\(p\\))\n\\(p^2\\)\n\\(pq\\)\n\n\n\\(a\\) (\\(q\\))\n\\(qp\\)\n\\(q^2\\)\n\n\n\n\n\nUnder HWE assumption, neither allele nor genotype frequencies change over time.\nImportantly, we can calculate allele frequencies from genotype frequencies and vice versa:\n\\[\np = p^2 + pq\\\\\nq = q^2 + pq\n\\]\n\nSegue: apart from describing the variation via e.g., diversity measures, we want to model how allele frequencies change in time. As (Gillespie, 2004, preface p. xi) points out, “While genotype frequencies are easily measured, their change is not”\nIOW: describing variation fine, but where does it come from and how does it change?\nIf assumptions of HWE hold, we have no change of variation. However, we want to look at change of variation and disentangle the forces that impose change\nHWE assumption gives us a way to calculate allele frequencies from genotype frequencies. How well do these assumptions hold in real data? See next slide."
  },
  {
    "objectID": "slides/foundations/index.html#natural-populations-do-mate-randomly",
    "href": "slides/foundations/index.html#natural-populations-do-mate-randomly",
    "title": "Population genetics",
    "section": "Natural populations do mate randomly?",
    "text": "Natural populations do mate randomly?\n\n\nError in file(file, \"rt\"): cannot open the connection\n\n\nError in pivot_longer(x, cols = c(\"AA\", \"Aa\", \"aa\"), names_to = \"genotype\"): object 'x' not found\n\n\nError in by(x, x$population, function(y) {: object 'x' not found\n\n\nError in factor(z$population): object 'z' not found\n\n\nError in levels(z$population) &lt;- c(\"European\", \"Chinese\", \"Yoruban\"): object 'z' not found\n\n\nError in ggplot(z, aes(x = p, y = value)): object 'z' not found\n\n\n\nSo how do the HWE assumptions hold up in real data? The figure shows three human populations from the 1000 genomes data, for which 10,000 SNPs have been selected. For each SNP, we know the genotype frequencies \\(AA\\), \\(Aa\\), \\(aa\\) and can therefore calculate the allele frequencies for \\(A\\) and \\(a\\) using the equations on the preceding slide (e.g., \\(p=p_{AA}+p_{Aa}/2\\)).\nNote that 1000 genomes data have sorted genotype frequencies, so to produce nice symmetrical plots, half the genotype frequencies have been reversed (minor/het/major -&gt; major/het/minor).\n\nSee https://stackoverflow.com/questions/26587940/ggplot2-different-legend-symbols-for-points-and-lines for legend customization."
  },
  {
    "objectID": "slides/foundations/index.html#the-obsession-of-population-genetics",
    "href": "slides/foundations/index.html#the-obsession-of-population-genetics",
    "title": "Population genetics",
    "section": "The obsession of population genetics",
    "text": "The obsession of population genetics\nPopulation genetics is about (Gillespie, 2004)\n\ndescribing the genetic structure of populations\nconstructing theories on the forces that influence genetic variation\n\n\n\n\nQuestions to ponder:\n\nwhy does variation look the way it does?\nhow is variation maintained?\nhow does variation change over time (\\(\\Delta p\\))?\nwhat forces shape the genetic structure of populations?\n\n\n\n\n         \n\\(p=0.1\\)\n\n\n\\(\\large\\rightarrow\\)\n\n\n         \n\\(p=0.5\\)\n\n\n\\(\\large\\rightarrow\\)\n\n\n         \n\\(p=0.9\\)\n\n\n\n\n\n\nFrom HWE: we want to look a the creation, maintenance and loss of variation and what forces affect it\nGoal: describe theory behind evolving populations. This has been an obsession for a long time, even before DNA was known. We need to get back to basics."
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model",
    "href": "slides/foundations/index.html#wright-fisher-model",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\n\n\n\n\n\n\nSee Hein et al. (2004) for more assumptions. The second assumption means we can use 2N chromosome interchangeably for haploid (n=2N) and diploid (n=N) populations."
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-1",
    "href": "slides/foundations/index.html#wright-fisher-model-1",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-2",
    "href": "slides/foundations/index.html#wright-fisher-model-2",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-3",
    "href": "slides/foundations/index.html#wright-fisher-model-3",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-4",
    "href": "slides/foundations/index.html#wright-fisher-model-4",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-5",
    "href": "slides/foundations/index.html#wright-fisher-model-5",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-6",
    "href": "slides/foundations/index.html#wright-fisher-model-6",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-7",
    "href": "slides/foundations/index.html#wright-fisher-model-7",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-8",
    "href": "slides/foundations/index.html#wright-fisher-model-8",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-9",
    "href": "slides/foundations/index.html#wright-fisher-model-9",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-10",
    "href": "slides/foundations/index.html#wright-fisher-model-10",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\nFigure 1: Wright-Fisher model\nSee https://mikeyharper.uk/animated-plots-with-r/"
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-11",
    "href": "slides/foundations/index.html#wright-fisher-model-11",
    "title": "Population genetics",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\n\n\n\n\nFigure 2: WF model indicating time direction from past (top) to present (bottom).\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: WF model tracing the genealogies of three extant chromosomes"
  },
  {
    "objectID": "slides/foundations/index.html#the-wright-fisher-sampling-model",
    "href": "slides/foundations/index.html#the-wright-fisher-sampling-model",
    "title": "Population genetics",
    "section": "The Wright-Fisher sampling model",
    "text": "The Wright-Fisher sampling model\nLet’s formalise the sampling process of the Wright-Fisher model1. We assume\n\na single locus in a haploid population of size \\(2N\\) (or diploid of size \\(N\\) when random mating)\nno mutation and selection\ndiscrete generations\n\nEach generation we sample \\(2N\\) new chromosomes from the previous generation. The probability of choosing a chromosome \\(v\\) is \\(1/2N\\) (coin flip with probability of success \\(1/2N\\)). Since the trials are independent, and we perform \\(2N\\) trials, the number of offspring \\(k\\) of a given chromosome \\(v\\) is binomially distributed \\(\\mathrm{Bin}(m, p)\\), with parameters \\(m=2N\\) and probability of success \\(p=\\frac{1}{2N}\\).\n\nWe assume some familiarity with Binomial sampling. For reference, some mathematical formality follows.\nLet \\(p\\) be the probability of heads (=1) of a coin flip, and \\(q=1-p\\) the probability of tails (=0). A coin flip can be modelled by a random variable (r.v.) \\(X\\) that follows a Bernoulli distribution, where \\(\\mathrm{Pr(}X=1\\mathrm{)}=p\\), \\(\\mathrm{Pr(}X=0\\mathrm{)}=1-p=q\\). One can show (e.g., with transforms such as the probability-generating function) that a binomially distributed variable \\(Y\\sim Bin(n, p)\\) is the sum of \\(n\\) independent Bernoulli variables \\(X\\) (“Bernoulli trials”), or \\(Y=\\sum^nX\\). In our case, there are \\(2N\\) trials, each with \\(p=1/2N\\).\n\\[\nP(v=k) = {2N\\choose k}\\left( \\frac{1}{2N} \\right)^k\n\\left(1 - \\frac{1}{2N} \\right)^{(2N - k)}\n\\]\n\nFor a more extensive treatment, see Hermisson (2017) or Hein et al. (2005)"
  },
  {
    "objectID": "slides/foundations/index.html#properties-of-wright-fisher-sampling",
    "href": "slides/foundations/index.html#properties-of-wright-fisher-sampling",
    "title": "Population genetics",
    "section": "Properties of Wright-Fisher sampling",
    "text": "Properties of Wright-Fisher sampling\n\n\n\n\nThe expected number of offspring is one\n\n\n\n\n\n\n\n\n\n\n\n\nPoisson approximation for large \\(N\\)\n\n\n\n\n\n\n\n\n\n\\[\nP(v=k) \\approx \\frac{1}{k!}e^{-k}\n\\]\n\n\n\n\nProb(pick same parent) = 1/2N\n\n\n\n\n\n\n\n\n\n\n\n\nTime for two sequences to coalesce \\(\\sim 1/2N\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMany of the results above follow from standard results in probability theory and are provided here in brevity for reference to the interested reader. The details are not necessary to understand in detail.\nExpected number of offspring\nThe expected value of a \\(\\mathrm{Bin}(m,p)\\) (binomially distributed) variable with parameters \\(m=2N\\) and \\(p=\\frac{1}{2N}\\) is \\(mp\\), hence:\n\\[\nE(v) = mp = 2N\\frac{1}{2N} = 1\n\\]\nPoisson approximation\nWhen \\(2N\\) large it holds that the probability that sequence \\(v\\) has \\(k\\) offspring is\n\\[\nP(v=k) \\approx \\frac{1}{k!}e^{-k}\n\\]\nSince \\(P(v=0) = e^{-1} \\approx 0.37\\), a fraction 0.37 of sequences lack descendants\nProbability that two sequences pick same parent\nLet \\(u\\) and \\(v\\) be two sequences. Pick a parent \\(p_u\\) of \\(u\\). Then the probability that \\(v\\) picks the same parent is (solid lines)\n\\[\nP(p_u=p_v) = \\frac{1}{2N}\n\\]\nThe probability that they pick different parents is\n\\[\nP(p_u \\neq p_v) = 1 - \\frac{1}{2N}\n\\]\nTime for two sequences to coalescent\nTime for two sequences \\(u\\) and \\(v\\) to find common ancestor distributed as \\((1 - \\frac{1}{2N})^{j-1}\\frac{1}{2N}\\) (\\(j-1\\) failures followed by success). This is the geometric distribution \\(Ge(p)\\), with parameter \\(p=\\frac{1}{2N}\\), and expected value \\(\\frac{1}{p}={2N}\\). That is, the expected number of generations for two sequences to find a common ancestor (i.e., coalesce) is \\(2N\\) generations.\nSince a large fraction of genes lack descendants, very quickly (compared to 2N) a population will descend from a small proportion of genes.\nDerivation of average time to having same parent (i.e., coalescence) requires knowledge of geometric distribution. The probability that the genes find common parent \\(j\\) generations ago is\n\\[\n(1-\\frac{1}{2N})^{(j-1)}\\frac{1}{2N}\n\\]\ndue to independence between generations. This is the geometric distribution \\(Ge(p)\\) with \\(p=1/2N\\), which has expected value \\(1/p\\), i.e., 2N in this case."
  },
  {
    "objectID": "slides/foundations/index.html#wright-fisher-model-with-alleles",
    "href": "slides/foundations/index.html#wright-fisher-model-with-alleles",
    "title": "Population genetics",
    "section": "Wright-Fisher model with alleles",
    "text": "Wright-Fisher model with alleles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlleles can randomly fix or be lost through process called genetic drift\nWright-Fisher model showing the evolution of population of 10 genes over 16 generations. Allele variants are shown in white and black. Starting frequency black variant is 0.3.\n\n\n(To avoid confusion: previously black was used to indicate parent, here black/white will refer to different alleles)\nEnter allelic variants; we are looking at two alleles\nImportant: the fate of any allele under drift is to be lost or fixed, which ultimately means variation is lost (decays) with drift"
  },
  {
    "objectID": "slides/foundations/index.html#binomial-process-models-allele-sampling",
    "href": "slides/foundations/index.html#binomial-process-models-allele-sampling",
    "title": "Population genetics",
    "section": "Binomial process models allele sampling",
    "text": "Binomial process models allele sampling\n\n\n\n\n\n\n\n\n\n\n\nWe assume two alleles \\(A\\), \\(a\\), each with \\(i\\) and \\(j=2N-i\\) copies in generation \\(t\\).\n\n\n\n     \n\n\n\\(i=8\\), \\(j=2\\cdot 6-8=4\\)\n\n\n\n\n\n\nLet \\(p_t=i/2N\\) be the frequency of \\(A\\) in generation \\(t\\), and \\(q_t=1-p_t\\) the frequency of \\(a\\).\n\n\n\n     \n\\(p_t = 8/12\\)\n\n\n     \n\\(p_{t+1} = 4/12\\)\n\n\n\n\n\nProb(\\(k\\) \\(A\\) alleles in next generation) is \\(\\mathsf{Bin}(2N, \\frac{i}{2N})\\)\n\n\nA more formal mathematical description goes as follows:\nThe sampling model for next generation \\(t+1\\), given \\(i\\) \\(A\\) alleles in generation \\(t\\), is\n\\[\np_{t+1} = P(v_A=k) = {2N\\choose k}\\left( \\frac{i}{2N} \\right)^k\n\\left(1 - \\frac{i}{2N} \\right)^{(2N - k)} = \\mathsf{Bin}(2N, \\frac{i}{2N})\n\\]\nNB: we here slightly change notation, with \\(p_{t+1} = P(X=k)\\). Also, we have omitted an index \\(i\\) in the expressions of \\(p\\). The probability of observing \\(k\\) \\(A\\) alleles in generation \\(t+1\\) will of course depend on the number \\(i\\) \\(A\\) alleles in the previous generation."
  },
  {
    "objectID": "slides/foundations/index.html#genetic-drift",
    "href": "slides/foundations/index.html#genetic-drift",
    "title": "Population genetics",
    "section": "Genetic drift",
    "text": "Genetic drift\n\n\nTo capture dynamics, follow allele frequency trajectory (\\(p_t\\)) as function of time.\n\n\n##' Wright Fisher model - follow allele frequency distribution\n##'\n##' @param p0 Starting frequency\n##' @param n Population size\n##' @param generations Number of generations to simulate\n##'\nwright_fisher &lt;- function(p0, n, generations) {\n    x &lt;- vector(mode = \"numeric\", length = generations)\n    x[1] &lt;- p0\n    for (i in seq(2, length(x))) {\n        x[i] &lt;- rbinom(1, size = n, prob = x[i - 1])/n\n    }\n    x\n}\n\n\n# Example simulation and plot\nset.seed(1223)\ngenerations &lt;- 100\nn &lt;- 100  # NB: haploid population size!\nplot(1:generations, wright_fisher(0.5, n, generations), type = \"l\", ylab = \"frequency\",\n    xlab = \"generation\", ylim = c(0, 1))\n\n\n\n\n\n\n\n\nFigure 4: Genetic drift for different haploid(!) population sizes, starting frequency \\(p_0\\)=0.5. Note dependency of variance on population size N.\n\n\n\n\n\n\n\n\n\nMention neutral here as this is how alleles behave under drift: like gas particle diffusing up and down. Allele is eventually either fixed or lost."
  },
  {
    "objectID": "slides/foundations/index.html#genetic-drift-1",
    "href": "slides/foundations/index.html#genetic-drift-1",
    "title": "Population genetics",
    "section": "Genetic drift",
    "text": "Genetic drift\n\n\n\n\n\n\n\nFigure 5: Genetic drift for different combinations of starting frequency and population size for n=50 repetitions per parameter combination. Note how variation and time to fixation depends on population size and starting frequency.\n\n\n\n\n\n\n\n\n\nfate of allele: fixation or loss \\(\\rightarrow\\) eventually loss of variation\nprobability of fixation \\(\\pi(p)=p\\), where \\(p\\) is the current frequency\nrate of drift (loss of variation) \\(\\propto \\frac{1}{2N}\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimplifying assumptions -&gt; rate of drift \\(\\propto \\frac{1}{N}\\) (\\(\\frac{1}{2N}\\) in our treatment) (Leffler et al., 2012)\nIn reality population fluctuates and therefore Ne is substituted for N. Larger Ne -&gt; smaller fluctuation in allele frequency (as evidenced in plots) -&gt; maintain larger genetic diversity\nDrift can be thought of as a force acting on a buoyant gas particle floating up and down at random."
  },
  {
    "objectID": "slides/foundations/index.html#allele-frequency-distribution-for",
    "href": "slides/foundations/index.html#allele-frequency-distribution-for",
    "title": "Population genetics",
    "section": "Allele frequency distribution for",
    "text": "Allele frequency distribution for"
  },
  {
    "objectID": "slides/foundations/index.html#probability-distributions-of-allele-frequencies",
    "href": "slides/foundations/index.html#probability-distributions-of-allele-frequencies",
    "title": "Population genetics",
    "section": "Probability distributions of allele frequencies",
    "text": "Probability distributions of allele frequencies\n\n\n\n\n\n\nFigure 6: Histogram showing the course of change of the allele frequency distribution with time (Kimura, 1983, fig. 3.4). When N large (\\(\\gtrsim 100\\)) histogram can be approximated by continuous distribution (diffusion theory). Try recipe  for different values of N.\n\n\n\n\n\n\n\n\n\n\nFigure 7: Frequency distributions of the brown eye (\\(bw^{75}\\)) allele in replicate experimental populations (\\(n\\sim 100\\)) of Drosophila melanogaster (8 , 8 ) (Buri, 1956)\n\n\n\n\n\n\n\n\nMathematical treatment of drift can become complicated: easier to study dynamics of heterozygosity\n\n\nKimura’s plot illustrates the allelic frequency distribution of replicate populations each consisting of N=10 sequences. There are two allelic types. The x axis corresponds to the proportion of populations in a given state (e.g., the y value for x=3/10 corresponds to the proportion of populations with 3 alleles of one type and 7 of the other). At \\(t=0\\) all populations are in state 5/10.\nKimura’s plot is very instructive and students are encouraged to test the recipe code, increasing the number of states incrementally. For large enough N, the histograms can be approximated by continuous distributions. This observation led Kimura (even though diffusion equations were originally introduced to genetics by Fisher in 1922) to apply diffusion theory to obtain probability densities of allele frequencies, leading in turn to compact expressions of fixation probabilities, expected ages of alleles, and more. A treatment of diffusion theory is outside the scope of this course; the interested reader can consult e.g., (Ewens, 2004).\nThe Buri experiment is an empirical demonstration of Kimura’s plot.\nOn the sampling model, (Charlesworth & Charlesworth, 2010, p. 231) says:\n\nIt is, however, impossible to write down a simple algebraic expression for P, even without selection and mutation. [The equation] is useful for obtaining numerical results for relatively small populations, but becomes computationally demanding when N becomes very large."
  },
  {
    "objectID": "slides/foundations/index.html#heterozygosity-dynamics",
    "href": "slides/foundations/index.html#heterozygosity-dynamics",
    "title": "Population genetics",
    "section": "Heterozygosity dynamics",
    "text": "Heterozygosity dynamics\n\n\n\n\n\n\nFigure 8: Illustration of identity by descent (IBD) and state (IBS). Alleles in generation \\(n\\) are IBD but not IBS.\n\n\n\n\n\n\nLet \\(\\mathcal{H}_t\\) be the probability that two alleles are different by state. One can show that the time course evolution of \\(\\mathcal{H}_t\\) in a randomly mating population consisting of \\(N\\) diploid hermaphroditic individuals is\n\\[\n\\mathcal{H}_t = \\mathcal{H}_0 \\left( 1 - \\frac{1}{2N} \\right)^t\n\\]\nImportant consequence: heterozygosity in WF population lost at rate \\(1/2N\\).\n\n\n\nAlleles in generation \\(n\\) are IDB but not IBS\nMotivation: mathematical description of genetic drift complicated for populations with more than one individual. Easier to study the evolution of heterozygosity.\nEquation presented without details. Derivation in (Gillespie, 2004, pp. 25–27) starts from G=probability that two alleles are IBS"
  },
  {
    "objectID": "slides/foundations/index.html#heterozygosity-dynamics-1",
    "href": "slides/foundations/index.html#heterozygosity-dynamics-1",
    "title": "Population genetics",
    "section": "Heterozygosity dynamics",
    "text": "Heterozygosity dynamics\n\n\n\n\n\n\nFigure 9: Plot of \\(\\mathcal{H}_t\\) illustrating dependency on population size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 10: Heterozygosity in black-footed ferret (Wisely et al., 2002). Example from Graham Coop (2020), Fig. 4.5\n\n\n\n\n\n\n\nExample of how rapid decline in population size can affect heterozygosity.\n\nPopulation size influences genetic diversity!\n\n\nHowever, census population size not (always) the correct measure.\n\n\n\n\n\n\n\nDependency on population size: for large enough populations the decline will be very slow (drift speed ~ 1/2N)\nPractical example shows loss of heterozygosity tell-tale signature of population decline; conversely, not easy to show population decline in large populations (e.g., marine species with large \\(N_e\\)) using heterozygosity as measure\n(Barton et al., 2007, p. 369) “The relation between genetic diversity and population size is difficult to discern, in part, because it is extremely hard to estimate the numbers of most species and because the number that matters is an average back into the distant past”(!)\nFrom (Graham Coop, 2020, p. 64)\n\nTo see how a decline in population size can affect levels of het- erozygosity, let’s consider the case of black-footed ferrets (Mustela nigripes). The black-footed ferret population has declined dramatically through the twentieth century due to destruction of their habitat and sylvatic plague. In 1979, when the last known black-footed ferret died in captivity, they were thought to be extinct. In 1981, a very small wild population was rediscovered (40 individuals), but in 1985 this population suffered a number of disease outbreaks. At that point of the 18 remaining wild individuals were brought into captivity, 7 of which reproduced. Thanks to intense captive breeding efforts and conservation work, a wild population of over 300 individuals has been established since. However, because all of these individuals are descended from those 7 individuals who survived the bottleneck, diversity levels remain low. Wisely et al. measured heterozygosity at a number of microsatellites in individuals from museum collections, showing the sharp drop in diversity as population sizes crashed (see Figure 4.5).\n\nSegue: population size important; however, census population size is not always the measure we want when relating to genetic diversity"
  },
  {
    "objectID": "slides/foundations/index.html#effective-population-size",
    "href": "slides/foundations/index.html#effective-population-size",
    "title": "Population genetics",
    "section": "Effective population size",
    "text": "Effective population size\nAssumptions underlying Wright-Fisher model seldom fulfilled for natural populations. In particular\n\nnon-random mating (population structure)\nfluctuations of population census size\n\nTherefore, magnitude of drift experienced by a population different from that predicted by population size\nTechnically correct definition (but see Waples (2022)):\n\n\\(N_e\\) is the size of an ideal population that would experience the same rate of genetic drift as the population in question.\n\n\nideal population: discrete generations with random mating, no evolutionary forces besides drift, no selective advantages"
  },
  {
    "objectID": "slides/foundations/index.html#mutation",
    "href": "slides/foundations/index.html#mutation",
    "title": "Population genetics",
    "section": "Mutation",
    "text": "Mutation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTwo-allele\n\nDerive popgen stats\n\nFinite sites\n\nRecurrent mutations\n\nInfinite alleles\n\nProtein electrophoresis\n\nInifinite sites\n\nDNA sequences\n\n\n\n\n\n\nMutations are generated randomly as changes in DNA. In WF model will be highlighted in black. We assume mutations are described by a Poisson process with rate \\(\\mu\\) (per generation).\nThe mutation models are:\n\ntwo-allele model: used to derive popgen statistics\nfinite sites model: recurrent mutations may occur, an assumption that is often omitted to facilitate calculations (e.g., coalescent)\ninifinite alleles model: every mutation leads to new allele (e.g., protein electrophoresis)\ninfinite sites model: model commonly used for long DNA sequences\n\nAdditional model not presented here is the stepwise mutation model (mainly used to model repeats):"
  },
  {
    "objectID": "slides/foundations/index.html#mutation-and-drift",
    "href": "slides/foundations/index.html#mutation-and-drift",
    "title": "Population genetics",
    "section": "Mutation and drift",
    "text": "Mutation and drift\n\n\nGenetic drift “moves” frequencies to the point that variation is lost via allele fixation or loss. New variation is introduced through mutation. We typically assume mutations are described by a Poisson process with rate \\(\\mu\\) (per generation).\n\nThe mutation rate is denoted \\(\\mu\\), and the population scaled mutation rate is \\(2N_e\\mu\\) for haploid populations, \\(4N_e\\mu\\) for diploid, where \\(N_e\\) is the effective population size.\n\n\nThe mutation - drift balance is when the diversity lost due to drift equals the diversity gained due to mutation.\n\n\n\n\n\n\n\nFigure 11: Variation is introduced by mutations (black) at rate \\(\\mu=1e^{-4}\\) and is occasionally lost through genetic drift.\n\n\n\n\n\n\n\n\n\nSegue: so if drift removes variation, what introduces it? Mutation!\nNote that the mutation rate in the WF model is not meaningful; the value is simply chosen such that enough mutations show up in plot."
  },
  {
    "objectID": "slides/foundations/index.html#tracing-the-evolution-of-mutations",
    "href": "slides/foundations/index.html#tracing-the-evolution-of-mutations",
    "title": "Population genetics",
    "section": "Tracing the evolution of mutations",
    "text": "Tracing the evolution of mutations\n\n\n\n\n\n\nFigure 12: Different mutations suffer different fates. Most mutations are lost in a couple of generations. Mutant alleles are colored black and their genealogies are highlighted with thicker edges.\n\n\n\n\n\n\n\nObservation: most mutations are in fact lost\n\n\nRecall: fixation probability \\(\\pi(p)=p\\)\n\n\n\n\nDifference to previous figure: here we highlight the genealogies"
  },
  {
    "objectID": "slides/foundations/index.html#mutation-drift-balance",
    "href": "slides/foundations/index.html#mutation-drift-balance",
    "title": "Population genetics",
    "section": "Mutation drift balance",
    "text": "Mutation drift balance\nDrift removes variation. Mutation reintroduces it. At equilibrium the change in variation by definition is 0. In terms of \\(\\mathcal{H}_t\\) (the probability that two alleles are not identical by state), \\(\\Delta\\mathcal{H}=0\\).\nOne can show1 the classical formula that the equilibrium heterozygosity value is\n\\[\n\\hat{\\mathcal{H}} = \\frac{4N_e\\mu}{1 + 4N_e\\mu}\n\\]\n\n\\(\\mu\\) is often assumed known, and heterozygosity is easily calculated from data, which provides a way of estimating \\(N_e\\).\n\n\nThe compound parameter \\(4N_e\\mu\\) is called the population scaled mutation rate and is commonly named \\(\\theta\\) such that\n\\[\n\\hat{\\mathcal{H}} = \\frac{\\theta}{1 + \\theta}\n\\]\n\n\nGillespie (2004), pp. 30–31 uses a difference equation approach to derive \\(\\mathcal{H}\\). Briefly, he studies the time evolution of \\(\\mathcal{G}\\), the probability that two alleles drawn at random without replacement from the population are identical by state. Mutations are assumed unique, i.e., the infinite-alleles model. It holds\n\\[\n\\mathcal{G}^\\prime = (1-\\mu)^2\\left[ \\frac{1}{2N} +\n\\left( 1 - \\frac{1}{2N} \\right) \\mathcal{G} \\right]\n\\]\nwhere \\((1-\\mu)^2\\) is the probability that no mutation occur in either of the two sampled alleles. Since \\(\\mu\\) is small, \\((1-\\mu)^2 \\approx 1-2\\mu\\), which after some manipulation gives the desired expression for \\(\\mathcal{H} = 1 - \\mathcal{G}\\).\nOn pages 46–47, he shows that the expression for can be derived in a much simpler fashion using coalescent theory. Tracing two lineages backwards in time, the probability of coalescence is 1/2N, whereas the probability of a mutation is \\(1-(1-\\mu)^2\\approx 2\\mu\\); \\(\\mathcal{H}\\) is then simply the relative probability of the two events\n\\[\n\\mathcal{H} = \\frac{2\\mu}{2\\mu + 1/2N} = \\frac{4N\\mu}{4N\\mu + 1}\n\\]\n\nsee (Gillespie, 2004, p. 29 – 31) for a concise treatement"
  },
  {
    "objectID": "slides/foundations/index.html#the-neutral-theory-of-evolution",
    "href": "slides/foundations/index.html#the-neutral-theory-of-evolution",
    "title": "Population genetics",
    "section": "The neutral theory of evolution",
    "text": "The neutral theory of evolution\n\n\nMutation drift balance, together with the observation during 50’s-60’s that polymorphism was more common than expected, is the foundation of the neutral theory of evolution (Kimura, 1983): allele frequencies may change and fix due to chance alone and not selection.\n\nNearly neutral theory (Ohta, 1973) was later developed to explain failure to predict scaling of polymorphism with population size: most mutations are not neutral but slightly deleterious and purged from population by natural selection.\n\n\n\n\n\n\nFigure 13: Heterozygosity predicted by the neutral theory. Shaded region shows typical heterozygosities in animals (y-axis). The observed \\(N_e\\mu\\) range is higher than predicted from plot. From Hurst (2009), Fig 1.\n\n\n\n\n\n\n\n\nRelated to rate of substitution and molecular evolution is the work of Kimura that lead to the development of the neutral theory.\nMotivation: if polymorphic sites deleterious, should not expect much polymorphism.\nLow levels of polymorphism expected assuming little balancing selection (Hurst, 2009, p. 87); however electrophoretic studies showed polymorphism common. Would lead to detrimental load (Kimura & Ohta, 1971) -&gt; therefore majority of polymorphism must evolve neutrally (dynamics). Also: rate of evolution (on protein level) too high (Haldane’s dilemma)\nOn the shaded region: the observed range of \\(N_e\\mu\\) is larger than that which is predicted by the plot, and since \\(\\mu\\) is constrained within a couple of orders of magnitude, \\(N_e\\) must vary more than predicted by the (strictly) neutral theory.\nThe general idea nearly neutral theory is that most mutations are slightly deleterious and therefore purged by natural selection, thereby reducing observed variation. The efficacy of purging depends in turn on the effective population size, such that species with small \\(N_e\\) will have a harder time getting rid of potentially damaging variants."
  },
  {
    "objectID": "slides/foundations/index.html#mutation-rate-can-be-estimated-from-substitution-rate",
    "href": "slides/foundations/index.html#mutation-rate-can-be-estimated-from-substitution-rate",
    "title": "Population genetics",
    "section": "Mutation rate can be estimated from substitution rate",
    "text": "Mutation rate can be estimated from substitution rate\nMutation enters populations and may be fixed by drift. Therefore, with time there will be fixed differences, or substitions (typically in the evolution of species) between populations, or species. In molecular evolution, the substition rate, \\(\\rho\\), is the most interesting quantity.\n\nThe total number of new mutations in every generation is \\(2N\\mu\\) (total number of gametes times mutation rate)\n\n\nNew mutations fix at a rate \\(1/2N\\)\n\n\nTherefore, the average rate of substitution, \\(\\rho\\), is \\(2N\\mu\\times1/2N\\), or\n\\[\n\\rho=\\mu\n\\]\nwhich is independent of population size!\n\n\nPractical implication: we can estimate mutation rate from the substitution rate at neutrally evolving sites (e.g., Kumar & Subramanian (2002))\n\n\nWhat happens when sufficient amount of time passes? Mutations fix and generate substitutions between species. This slide presents Kimura’s remarkable result regarding mutation rate and substitution rate!\nOn \\(2N\\mu\\): the larger the population, the larger the number of mutations that can fix\nIf \\(4N\\mu&gt;&gt;0\\) no new mutations can fix. Issue here is there is no explicit mention of DNA sequence -&gt; introduction of infinite sites model\nFor practical note on estimation of mutation rate see e.g., (Hubisz & Siepel, 2020, p. 247)\n(Kumar & Subramanian, 2002, first paragraph):\n\nRates of point mutation can be determined indirectly by estimating the rate at which the neutral substitutions accumulate in protein-coding genes"
  },
  {
    "objectID": "slides/foundations/index.html#selection-and-fitness",
    "href": "slides/foundations/index.html#selection-and-fitness",
    "title": "Population genetics",
    "section": "Selection and fitness",
    "text": "Selection and fitness\n\nFigure 14: The life cycle used in the fundamental model of selection (Gillespie, 2004, fig. 3.2)\n\nMuch confusion exists in the literature regarding how various types of selection are defined, in particular because some of the terminology is used slightly differently within different scientific communities (Nielsen, 2005)\n\n\n\n\n\\[\n\\begin{matrix}\n\\mathrm{Genotype} & aa & aA & AA \\\\\n\\mathrm{Frequency\\ in\\ newborns} & p^2 & 2pq & q^2\\\\\n\\mathrm{Viability} & w_{aa} & w_{aA} & w_{AA}\\\\\n\\mathrm{Frequency\\ after\\ selection} & p^2w_{aa} / \\bar{w} &\n    2pqw_{Aa} / \\bar{w} & q^2w_{AA} / \\bar{w} \\\\\n\\mathrm{Relative\\ fitness} & 1 & 1-hs & 1-s\\\\\n\\end{matrix}\n\\]\nwhere \\(\\bar{w} = p^2w_{aa} + 2pqw_{Aa} + q^2w_{AA}\\) is the mean fitness.\n\n\n\n\n\\(h=0\\)\n\\(a\\) dominant, \\(A\\) recessive\n\n\n\\(h=1\\)\n\\(A\\) dominant, \\(a\\) recessive\n\n\n\\(0&lt;h&lt;1\\)\nincomplete dominance\n\n\n\\(h&lt;0\\)\noverdominance (heterozygote advantage)\n\n\n\\(h&gt;1\\)\nunderdominance\n\n\n\n\nNotation follows Gillespie (2004), pp. 61–64.\n\n\n\n\nThe life cycle figure starts with newborns carrying the \\(A\\) allele at frequency \\(p\\), like parents. To reproduce they must reach adulthood, but due to selection, the allele frequency of \\(A\\) may shift to \\(p^\\prime\\) because different genotypes affect survival probabilities. This is typically summarized in genotype viabilities.\nThe Nielsen quote is a reminder that many different notations and parametrizations exist in the literature."
  },
  {
    "objectID": "slides/foundations/index.html#the-most-important-equation-in-population-genetics",
    "href": "slides/foundations/index.html#the-most-important-equation-in-population-genetics",
    "title": "Population genetics",
    "section": "The most important equation in population genetics",
    "text": "The most important equation in population genetics\n\\[\np^\\prime - p = \\Delta_sp = \\frac{pq[p(w_{aa} - w_{aA}) + q(w_{aA} -\nw_{AA})]}{p^2w_{aa} + 2pqw_{aA} + q^2w_{AA}}\n\\]\n\n\n\n\n\n\nFigure 15: Allele frequency change over time for directional, balancing, and disruptive selection, for different values of \\(p_0\\).\n\n\n\n\n\n\n\n\n\n\nFigure 16: Rate of allele frequency change as a function of allele frequency for directional, balancing, and disruptive selection.\n\n\n\n\n\n\n\n\nGiven the genotype fitnesses/viabilities, we can work out the difference in allele frequency \\(p-p^\\prime\\) between successive generations as a function of viabilities (or relative fitnesses). Equation relates allele frequency change to viabilities for different genotypes. It is instructive to study the equation and plot trajectories to gain an intuition for how allele frequencies evolve given the different selection regimes.\nThe left panel shows that the three modes of selection have different equilibrium points: for directional selection the favored homozygote will eventually attain 100%, balancing selection has a stable equilibrium point (attractor) for a given allelic ratio (here 25:75), and disruptive selection has an unstable equilibrium point (repeller) for a given allelic ratio.\nThe right panel shows the rate of change as a function of allele frequency. Note how the directionality changes at the equilibrium point for balancing and directional selection."
  },
  {
    "objectID": "slides/foundations/index.html#selection-and-drift---population-size-matters",
    "href": "slides/foundations/index.html#selection-and-drift---population-size-matters",
    "title": "Population genetics",
    "section": "Selection and drift - population size matters",
    "text": "Selection and drift - population size matters\n\n\n\n\n\n\nFigure 17: The fixation probability relative to the neutral probability of fixation (\\(p=1/2N\\)) under the assumption \\(s&lt;0.1\\). Red highlights region where \\(|N_es|&lt;0.05\\). Adapted from Lynch (2007), Fig. 4.2.\n\n\n\n\n\n\nIn red region (\\(|N_es|&lt;0.005\\)) the probability of fixation is within 10% of neutral fixation.\nConsequence: for any population size there exists range of selection coefficients where mutant alleles \\(\\approx\\) neutral (effective neutrality).\n\n\n\nSegue: note on the strength of s and the relation to \\(N_e\\). For small \\(N_e\\) the relation will hold for higher \\(s\\), meaning small populations will have difficulties purging deleterious mutations.\nEven if a new mutation has, say, \\(s=0.01\\), it still needs to overcome effects of drift. Only has 2% change of fixation.\nIn figure, we assume \\(s&lt;0.1\\), which is almost always the case (Lynch, 2007, p. 74).\n(Hahn, 2019, p. 133)"
  },
  {
    "objectID": "slides/foundations/index.html#direct-selection-can-be-inferred-from-protein-substitutions",
    "href": "slides/foundations/index.html#direct-selection-can-be-inferred-from-protein-substitutions",
    "title": "Population genetics",
    "section": "Direct selection can be inferred from protein substitutions",
    "text": "Direct selection can be inferred from protein substitutions\n\n\nFor genes, the ratio of non-synonymous to synonymous substitutions can tell us about protein evolution.\n\n\\(\\mathbf{d_N/d_S &lt;&lt; 1}\\)\n\nnegative (purifying) selection\n\n\\(\\mathbf{d_N/d_S &lt; 1}\\)\n\nmajority nonsynonymous deleterious, some advantageous\n\n\\(\\mathbf{d_N/d_S = 1}\\)\n\nneutral or mix neutral / advantageous / deleterious mutations\n\n\\(\\mathbf{d_N/d_S &gt; 1}\\)\n\npositive selection\n\n\n\n\n\n\n\nFigure 18: \\(d_n/d_s\\) comparisons for human-rat orthologs. For most genes, \\(d_n/d_s &lt;&lt; 1\\) indicating purifying selection. A handful of genes (n=9) have \\(d_n/d_s &gt; 1.0\\) which could indicate positive selection. \n\n\n\n\n\n\n\n\n\nNot all mutations fall in genes. Methods for detecting direct selection not applicable to studying selection on single mutation, or e.g., balancing. This requires looking for specific patterns of diversity surrounding locus under selection.\n\n\n\nSegue: how do we detect selection?\nEarly approach: look at protein-coding sequence where nucleotide substitutions can change the amino acid (non-synonymous, and presumably non-neutral) or be silent (synonymous, assumed neutral).\nNot all mutations in genes. Also want to look at single advantageous mutations, or balanced polymorphisms. Must therefore look at tell-tale signs of linked neutral variants."
  },
  {
    "objectID": "slides/foundations/index.html#linked-selection-reduces-diversity-at-neighbour-loci",
    "href": "slides/foundations/index.html#linked-selection-reduces-diversity-at-neighbour-loci",
    "title": "Population genetics",
    "section": "Linked selection reduces diversity at neighbour loci",
    "text": "Linked selection reduces diversity at neighbour loci\n\n\n\n\nFigure 19: A selective sweep of an advantageous mutation (gray dot). Adapted from Charlesworth & Charlesworth (2010), Fig. 8.13\n\n\n\n\n\nExample of a selective sweep. If a sweep completes at a locus, it will become monomorphic, as will the neighbouring sites. Mutation could reintroduce variation. Recombination could increase diversity in neighbourhood, but in a manner that depends on the distance from the locus under selection.\n\nAlternatives to direct selection tests are those that look at linked selection. In essence, we look for characteristic patterns in the vicinity of a selected locus. A sweep leads to the selected site and neigbouring sites being monomorphic (and therefore invisible to tests based on direct selection). Without recombination, mutation could reintroduce variation. In the presence of recombination, the effect of reduced diversity will be dependent on distance from the locus under selection.\nNote here that every sequence can be treated as an allele, such that we in essence are looking multi- and not a bi-allelic locus."
  },
  {
    "objectID": "slides/foundations/index.html#recombination-breaks-association-between-loci",
    "href": "slides/foundations/index.html#recombination-breaks-association-between-loci",
    "title": "Population genetics",
    "section": "Recombination breaks association between loci",
    "text": "Recombination breaks association between loci\n\n\n\n\n\n\n\n\n\n\nMiller (2020), Fig. 5.12.3\n\nOnce per chromosome! But: rates vary between loci (hotspots), sex chromosomes vs autosomes, and in some species, recombination only occurs in one sex (e.g., D.melanogaster).\n\n\nMain effect: association between loci breaks up.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe mechanism that breaks up association between loci is recombination. Cartoon to right shows the possible (haploid) outcomes of meiosis. \\(r\\) (the recombination rate) denotes the probability that there is a recombination event between the two loci.\nThe farther apart two loci on the same chromosome, the larger the probability that a recombination event occurs between them. Note that this can be applied to loci on different chromosomes as well; they segregate independently."
  },
  {
    "objectID": "slides/foundations/index.html#linkage-disequilibrium-and-its-decay",
    "href": "slides/foundations/index.html#linkage-disequilibrium-and-its-decay",
    "title": "Population genetics",
    "section": "Linkage disequilibrium and its decay",
    "text": "Linkage disequilibrium and its decay\n\n\nAssociation between loci can be written as:\n\\[\nD_{AB} = p_{AB} - p_Ap_B\n\\]\nSimilar expressions hold for other pairs; only need to know one \\(D_{ij}\\) (e.g., \\(D_{AB}\\)) so drop subscript and rewrite:\n\\[\np_{AB}= p_Ap_B + D\n\\]\nIf \\(D\\neq0\\) the loci are in linkage disequilibrium.\n\nCan show that decay over time is\n\\[\nD_t = (1-r)^tD_0\n\\]\nRecombination decreases D (linkage)\n\n\n\n\nLD between pairs of autosomal SNPs for human and mouse. From (Laurie et al., 2007, fig. 2)\n\n\n\n\n\n\nHandwavy introduction of LD as quantity. There are other equations, but the main point here is to point out that D measures the degree of linkage (disequilibrium); the higher D, the stronger linkage is.\nThe figure shows the difference in LD decay among wild populations compared to inbred mouse strains, where LD extends over several megabases. Therefore, LD decay informs about demographic history, and as we will see, evolutionary processes (sweeps -&gt; longer LD blocks)."
  },
  {
    "objectID": "slides/foundations/index.html#the-effect-of-a-selective-sweep-on-diversity",
    "href": "slides/foundations/index.html#the-effect-of-a-selective-sweep-on-diversity",
    "title": "Population genetics",
    "section": "The effect of a selective sweep on diversity",
    "text": "The effect of a selective sweep on diversity\n\n\n\nCode\npgip-slim --seed 42 -n 1000 -r 1e-6 -m 1e-7 --threads 12 recipes/slim/selective_sweep.slim -l 1000000 --outdir results/slim\npgip-tsstat results/slim/slim*.trees -n 10 --seed 31 -s pi -s S -s TajD -w 500 --threads 10 | gzip -v - &gt; results/slim/selective_sweep.w500.csv.gz\n\n\n\n\nError in file(file, \"rt\"): cannot open the connection\n\n\nError in `$&lt;-.data.frame`(`*tmp*`, thetaW, value = numeric(0)): replacement has 0 rows, data has 401\n\n\nError in `select()`:\n! Can't subset columns that don't exist.\n✖ Column `windows` doesn't exist.\n\n\n\n\n\n\nError in FUN(X[[i]], ...): object 'windows' not found\n\n\n\n\nSimulation: N=1e4, mu=5e-8, pi=4Nmu=0.004, seek S=a*pi=0.01, so a=S/pi which gives n. One needs to ramp up recombination rate to see the dip in TajD clearly."
  },
  {
    "objectID": "slides/foundations/index.html#the-effect-of-a-selective-sweep-on-diversity-1",
    "href": "slides/foundations/index.html#the-effect-of-a-selective-sweep-on-diversity-1",
    "title": "Population genetics",
    "section": "The effect of a selective sweep on diversity",
    "text": "The effect of a selective sweep on diversity\n\n\n\nCode\npgip-slim --seed 42 -n 1000 -r 1e-6 -m 1e-7 --threads 12 recipes/slim/selective_sweep.slim -l 1000000 --outdir results/slim\npgip-tsstat results/slim/slim*.trees -n 10 --seed 31 -s pi -s S -s TajD -w 500 --threads 10 | gzip -v - &gt; results/slim/selective_sweep.w500.csv.gz\n\n\n\n\n\nError in fortify(data): object 'data_mean' not found\n\n\n\nImportant: individual runs show a lot of stochasticity, but the signal is clear for the mean."
  },
  {
    "objectID": "slides/foundations/index.html#the-effect-of-a-selective-sweep-on-diversity-2",
    "href": "slides/foundations/index.html#the-effect-of-a-selective-sweep-on-diversity-2",
    "title": "Population genetics",
    "section": "The effect of a selective sweep on diversity",
    "text": "The effect of a selective sweep on diversity\n\n\nError in file(file, \"rt\"): cannot open the connection\n\n\nError in `$&lt;-.data.frame`(`*tmp*`, thetaW, value = numeric(0)): replacement has 0 rows, data has 401\n\n\nError in `dplyr::select()`:\n! Can't subset columns that don't exist.\n✖ Column `windows` doesn't exist.\n\n\n\n\nError in pivot_longer(., cols = c(\"pi\", \"thetaW\", \"pi_minus_thetaW\"), : object 'data_mean' not found\n\n\nError in `geom_line()`:\n! Problem while computing aesthetics.\nℹ Error occurred in the 2nd layer.\nCaused by error in `FUN()`:\n! object 'windows' not found\n\n\n\ncf Nielsen (2005). Not clear how scaling of statistics to have mean=1 is done."
  },
  {
    "objectID": "slides/foundations/index.html#the-phases-of-a-selective-sweep",
    "href": "slides/foundations/index.html#the-phases-of-a-selective-sweep",
    "title": "Population genetics",
    "section": "The phases of a selective sweep",
    "text": "The phases of a selective sweep\n\n\n\n\n\n\nFigure 20: Time goes from left to right. As sweep progresses, tree topology changes. Adapted from Hahn (2019), Figure 8.1\n\n\n\n\n\n\nAmount of diversity depends on fixation time. A neutral locus fixes in \\(4N_e\\) generations; for \\(s=0.0001\\), it takes approximately \\(0.29N_e\\) generations.\nSelections changes the genealogy (different topology, shorter branches), an aspect used in many linkage-based tests for selection.\n\n\n\nA selective sweep changes the genealogy (shorter branches, different topology) compared to the neutral case, a fact that can be utilised in linkage-based tests for selection.\nNote that the amount of variation surrounding a sweep depends heavily on the rate of the sweep. (Hahn, 2019, p. 167) points out that an advantageous allele with \\(s=0.0001\\) will take approximately \\(0.29N_e\\) generations to fix (compared to \\(4N_e\\) generations for a neutral locus)"
  },
  {
    "objectID": "slides/foundations/index.html#linked-selection-may-constrain-levels-of-diversity",
    "href": "slides/foundations/index.html#linked-selection-may-constrain-levels-of-diversity",
    "title": "Population genetics",
    "section": "Linked selection may constrain levels of diversity",
    "text": "Linked selection may constrain levels of diversity\n\n\n\n\n\nFigure 21: Hitchhiking (left) versus background selection (right).\n\n\n\n\n\n\n\n\nHitchhiking\n\nalleles linked to locus under selection “hitchhike” to high frequencies (Smith & Haigh, 1974)\nevidence: positive correlation between putative neutral diversity and recombination (Corbett-Detig et al., 2015)\n\n\nBackground selection\n\nloci linked to a deleterious locus will be purged from population and thus reduce diversity (Charlesworth et al., 1993)\nsimilar patterns to hitchhiking\n\n\n\n\nLinked selection has been proposed as solution to the low range of diversity seen between species with orders of magnitude ranges in census population sizes."
  },
  {
    "objectID": "slides/foundations/index.html#summary",
    "href": "slides/foundations/index.html#summary",
    "title": "Population genetics",
    "section": "Summary",
    "text": "Summary\nWe have looked at the Wright-Fisher model as a model of populations and genealogies*\nGenetic drift moves allele frequencies up and down at random and removes variation at rate \\(\\propto 1/2N\\)\nMutation reintroduces variation. The Neutral theory posits most mutations are neutral and dynamics follow mutation drift equilibrium.\nMethods to detect selection are based on direct selection or studying patterns of variation caused by linked selection."
  },
  {
    "objectID": "slides/foundations/index.html#bibliography",
    "href": "slides/foundations/index.html#bibliography",
    "title": "Population genetics",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nBarton, N. H., Briggs, D. E. G., Eisen, J. A., Goldstein, D. B., & Patel, N. H. (2007). Evolution. Cold Spring Harbor Laboratory Press.\n\n\nBuri, P. (1956). Gene Frequency in Small Populations of Mutant Drosophila. Evolution, 10(4), 367–402. https://doi.org/10.1111/j.1558-5646.1956.tb02864.x\n\n\nCasillas, S., & Barbadilla, A. (2017). Molecular Population Genetics. Genetics, 205(3), 1003–1035. https://doi.org/10.1534/genetics.116.196493\n\n\nCharlesworth, B., & Charlesworth, D. (2010). Elements of Evolutionary Genetics. Roberts and Company Publishers.\n\n\nCharlesworth, B., Morgan, M. T., & Charlesworth, D. (1993). The Effect of Deleterious Mutations on Neutral Molecular Variation. Genetics, 134(4), 1289–1303.\n\n\nCorbett-Detig, R. B., Hartl, D. L., & Sackton, T. B. (2015). Natural Selection Constrains Neutral Diversity across A Wide Range of Species. PLOS Biology, 13(4), e1002112. https://doi.org/10.1371/journal.pbio.1002112\n\n\nEwens, W. J. (2004). Mathematical Population Genetics (S. S. Antman, J. E. Marsden, L. Sirovich, & S. Wiggins, Eds.; Vol. 27). Springer. https://doi.org/10.1007/978-0-387-21822-9\n\n\nGillespie, J. H. (2004). Population Genetics: A Concise Guide (2nd edition). Johns Hopkins University Press.\n\n\nGraham Coop. (2020). Notes on Population Genetics. https://github.com/cooplab/popgen-notes\n\n\nHahn, M. (2019). Molecular Population Genetics (First). Oxford University Press.\n\n\nHein, J., Schierup, M. H., & Wiuf, C. (2005). Gene genealogies, variation and evolution: A primer in coalescent theory. Oxford University Press. https://books.google.se/books?id=CCmLNAEACAAJ\n\n\nHein, J., Schierup, M., & Wiuf, C. (2004). Gene genealogies, variation and evolution. A primer in coalescent theory. In Systematic Biology - SYST BIOL (Vol. 54).\n\n\nHermisson, J. (2017). Mathematical population genetics. https://www.mabs.at/fileadmin/user_upload/p_mabs/Lecture_Notes_2017\n\n\nHubisz, M., & Siepel, A. (2020). Inference of Ancestral Recombination Graphs Using ARGweaver. In J. Y. Dutheil (Ed.), Statistical Population Genomics (pp. 231–266). Springer US. https://doi.org/10.1007/978-1-0716-0199-0_10\n\n\nHurst, L. D. (2009). Genetics and the understanding of selection. Nature Reviews Genetics, 10(2), 83–93. https://doi.org/10.1038/nrg2506\n\n\nKimura, M. (1983). The neutral theory of molecular evolution. Cambridge University Press. https://doi.org/10.1017/CBO9780511623486\n\n\nKimura, M., & Ohta, T. (1971). Protein Polymorphism as a Phase of Molecular Evolution. Nature, 229(5285), 467–469. https://doi.org/10.1038/229467a0\n\n\nKumar, S., & Subramanian, S. (2002). Mutation rates in mammalian genomes. Proceedings of the National Academy of Sciences, 99(2), 803–808. https://doi.org/10.1073/pnas.022629899\n\n\nLaurie, C. C., Nickerson, D. A., Anderson, A. D., Weir, B. S., Livingston, R. J., Dean, M. D., Smith, K. L., Schadt, E. E., & Nachman, M. W. (2007). Linkage Disequilibrium in Wild Mice. PLOS Genetics, 3(8), e144. https://doi.org/10.1371/journal.pgen.0030144\n\n\nLeffler, E. M., Bullaughey, K., Matute, D. R., Meyer, W. K., Ségurel, L., Venkat, A., Andolfatto, P., & Przeworski, M. (2012). Revisiting an Old Riddle: What Determines Genetic Diversity Levels within Species? PLOS Biology, 10(9), e1001388. https://doi.org/10.1371/journal.pbio.1001388\n\n\nLynch, M. (2007). The origins of genome architecture. Sinauer Associates.\n\n\nMiller, C. (2020). Human Biology. Thompson Rivers University.\n\n\nNei, M., & Kumar, S. (2000). Molecular Evolution and Phylogenetics. Oxford University Press.\n\n\nNielsen, R. (2005). Molecular Signatures of Natural Selection. Annual Review of Genetics, 39(1), 197–218. https://doi.org/10.1146/annurev.genet.39.073003.112420\n\n\nOhta, T. (1973). Slightly Deleterious Mutant Substitutions in Evolution. Nature, 246(5428), 96. https://doi.org/10.1038/246096a0\n\n\nSmith, J. M., & Haigh, J. (1974). The hitch-hiking effect of a favourable gene. Genetics Research, 23(1), 23–35. https://doi.org/10.1017/S0016672300014634\n\n\nWaples, R. S. (2022). What Is Ne, Anyway? Journal of Heredity, 113(4), 371–379. https://doi.org/10.1093/jhered/esac023\n\n\nWisely, S. M., Buskirk, S. W., Fleming, M. A., McDonald, D. B., & Ostrander, E. A. (2002). Genetic Diversity and Fitness in Black-Footed Ferrets Before and During a Bottleneck. Journal of Heredity, 93(4), 231–237. https://doi.org/10.1093/jhered/93.4.231\n\n\n\n\nPopulation genetics foundations"
  },
  {
    "objectID": "slides/population_structure/index.html#pca-in-population-genetics-cavalli-sforza",
    "href": "slides/population_structure/index.html#pca-in-population-genetics-cavalli-sforza",
    "title": "Population structure",
    "section": "PCA in population genetics: Cavalli-Sforza",
    "text": "PCA in population genetics: Cavalli-Sforza\n\n(Menozzi P, 1978) noticed that genetic distances seem to correlate with geographical distances"
  },
  {
    "objectID": "slides/population_structure/index.html#pca-in-population-genetics-john-novembre",
    "href": "slides/population_structure/index.html#pca-in-population-genetics-john-novembre",
    "title": "Population structure",
    "section": "PCA in population genetics: John Novembre",
    "text": "PCA in population genetics: John Novembre\n\n\n\n(Novembre J, 2008)\n\n\ngenetics seems to mirrow the map of Europe\ncaveate: it is not always the case\nJ. Novembre selected samples"
  },
  {
    "objectID": "slides/population_structure/index.html#pca-and-mds-are-matrix-factorization-techniques",
    "href": "slides/population_structure/index.html#pca-and-mds-are-matrix-factorization-techniques",
    "title": "Population structure",
    "section": "PCA and MDS are matrix factorization techniques",
    "text": "PCA and MDS are matrix factorization techniques"
  },
  {
    "objectID": "slides/population_structure/index.html#toy-example-of-pca-for-population-genetics",
    "href": "slides/population_structure/index.html#toy-example-of-pca-for-population-genetics",
    "title": "Population structure",
    "section": "Toy example of PCA for population genetics",
    "text": "Toy example of PCA for population genetics\n\n\n\ngen &lt;- t(matrix(c(1, 0, 2, 0, 2, 0, 2, 1, 1, 1, 0, 1, 0, 2, 1, 2, 1, 1, 1, 1, 1,\n    0, 1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 1, 0), 5, by = TRUE))\ncolnames(gen) &lt;- paste0(\"Ind\", 1:5)\nrownames(gen) &lt;- paste0(\"SNP\", 1:7)\nprint(gen)\n\n     Ind1 Ind2 Ind3 Ind4 Ind5\nSNP1    1    1    1    0    0\nSNP2    0    1    2    1    2\nSNP3    2    1    1    0    1\nSNP4    0    0    1    2    2\nSNP5    2    1    1    0    0\nSNP6    0    0    1    1    1\nSNP7    2    2    1    1    0\n\n\n\n\ngen_centered &lt;- scale(gen, center = TRUE, scale = FALSE)\ncovariance &lt;- t(gen_centered) %*% gen_centered\neig &lt;- eigen(covariance)\nbarplot(eig$values/sum(eig$values), names = paste0(\"PC\", 1:5))\n\n\n\n\n\n\n\n\nplot(eig$vectors[, 1:2], xlab = \"PC1\", ylab = \"PC2\", pch = 16, cex = 5, col = 2:6)\npoints(eig$vectors[, 1:2], pch = as.character(1:5))\n\n\n\n\nIdea: project the data into a low dimensional space that explains the largest amount of variance"
  },
  {
    "objectID": "slides/population_structure/index.html#variance-maximization-and-eigen-value-decomposition",
    "href": "slides/population_structure/index.html#variance-maximization-and-eigen-value-decomposition",
    "title": "Population structure",
    "section": "Variance maximization and eigen value decomposition",
    "text": "Variance maximization and eigen value decomposition"
  },
  {
    "objectID": "slides/population_structure/index.html#toy-example-of-mds-for-population-genetics",
    "href": "slides/population_structure/index.html#toy-example-of-mds-for-population-genetics",
    "title": "Population structure",
    "section": "Toy example of MDS for population genetics",
    "text": "Toy example of MDS for population genetics\n\n\n\ngen &lt;- t(matrix(c(1, 0, 2, 0, 2, 0, 2, 1, 1, 1, 0, 1, 0, 2, 1, 2, 1, 1, 1, 1, 1,\n    0, 1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 1, 0), 5, by = TRUE))\ncolnames(gen) &lt;- paste0(\"Ind\", 1:5)\nrownames(gen) &lt;- paste0(\"SNP\", 1:7)\nprint(gen)\n\n     Ind1 Ind2 Ind3 Ind4 Ind5\nSNP1    1    1    1    0    0\nSNP2    0    1    2    1    2\nSNP3    2    1    1    0    1\nSNP4    0    0    1    2    2\nSNP5    2    1    1    0    0\nSNP6    0    0    1    1    1\nSNP7    2    2    1    1    0\n\n\n\n\nmy_dist &lt;- dist(t(gen), method = \"manhattan\", upper = TRUE, diag = TRUE)\nmy_dist\n\n     Ind1 Ind2 Ind3 Ind4 Ind5\nInd1    0    3    7   10   11\nInd2    3    0    4    7    8\nInd3    7    4    0    5    4\nInd4   10    7    5    0    3\nInd5   11    8    4    3    0\n\nmy_mds &lt;- cmdscale(my_dist)\nmy_mds\n\n          [,1]       [,2]\nInd1 -6.114866  0.2977272\nInd2 -3.077094  0.2402932\nInd3  0.621230 -1.7944048\nInd4  3.723118  2.1483083\nInd5  4.847612 -0.8919238\n\n\n\n\n\n\nplot(my_mds, xlab = \"MDS1\", ylab = \"MDS2\", pch = 16, cex = 5, col = 6:2)\npoints(my_mds, pch = as.character(5:1))\n\n\n\n\nIdea: project the data into a low dimensional space that preserves distances"
  },
  {
    "objectID": "slides/population_structure/index.html#example-of-pca-plot-from-1000g-project",
    "href": "slides/population_structure/index.html#example-of-pca-plot-from-1000g-project",
    "title": "Population structure",
    "section": "Example of PCA plot from 1000G project",
    "text": "Example of PCA plot from 1000G project\n\n\nWe will use ANGSD (Korneliussen T, 2014) and compute genotype likelihoods on 435 bam-files from the 1000G project.\n\ncd /home/nikolay/Documents/Teaching/PopGen_2023/data/1000G_bam_files\nfind $PWD -name '*.bam' &gt; 1000G_bam_list.txt\nangsd -bam 1000G_bam_list.txt -GL 2 -doMajorMinor 1 -doMaf 1 -SNP_pval 2e-6 \\\n-minMapQ 30 -minQ 20 -minInd 25 -minMaf 0.05 -doGlf 2 -out 1000G -P 5\n\nNext, we will run PCAANGSD to infer admixures proportions:\n\npcangsd -b 1000G.beagle.gz -o pca_1000G -t 4\n\nand finally we will plots the results using custom R scripts:\n\nC &lt;- as.matrix(read.table(\"pca_1000G.cov\"))\ne &lt;- eigen(C)\npops &lt;- readLines(\"1000G_bam_list.txt\")\npops &lt;- sapply(strsplit(pops, \"\\\\.\"), function(x) x[6])\nmycolor &lt;- rep(\"red\", length(pops))\nmycolor[pops == \"CEU\"] &lt;- \"blue\"\nmycolor[pops == \"CHB\"] &lt;- \"green\"\nmycolor[pops == \"MXL\"] &lt;- \"brown\"\nmycolor[pops == \"ASW\"] &lt;- \"magenta\"\nplot(e$vectors[, 1:2], xlab = \"PC1\", ylab = \"PC2\", main = \"PCA 1000G Project\",\n    col = mycolor, pch = 19)\nlegend(\"topright\", c(\"YRI\", \"CEU\", \"CHB\", \"MXL\", \"ASW\"), fill = c(\"red\", \"blue\",\n    \"green\", \"brown\", \"magenta\"), cex = 2, inset = 0.02)"
  },
  {
    "objectID": "slides/population_structure/index.html#angsd-genotype-likelihood-tool-for-low-coverage-data",
    "href": "slides/population_structure/index.html#angsd-genotype-likelihood-tool-for-low-coverage-data",
    "title": "Population structure",
    "section": "ANGSD: genotype likelihood tool for low-coverage data",
    "text": "ANGSD: genotype likelihood tool for low-coverage data\n\n(Korneliussen T, 2014)"
  },
  {
    "objectID": "slides/population_structure/index.html#hard-genotype-calls-vs.-genotype-likelihoods",
    "href": "slides/population_structure/index.html#hard-genotype-calls-vs.-genotype-likelihoods",
    "title": "Population structure",
    "section": "Hard genotype calls vs. genotype likelihoods",
    "text": "Hard genotype calls vs. genotype likelihoods\n\n\n\nMinor allele frequency based on hard calls: \\[\\rm{MAF_{hc}}=\\frac{1+1+2}{2*5}=\\frac{4}{10}\\]\n\n\n\n\nMinor allele frequency based on genotype likelihoods: \\[\\rm{MAF_{gl}}=\\frac{0*(0.98+0.20+0.89+0.10+0.15)+1*(0.02+0.75+0.10+0.80+0.20)+2*(0.00+0.05+0.01+0.10+0.65)}{2*5}=\\frac{3.49}{10}\\]"
  },
  {
    "objectID": "slides/population_structure/index.html#a-known-pitfall-of-pca-uneven-sampling",
    "href": "slides/population_structure/index.html#a-known-pitfall-of-pca-uneven-sampling",
    "title": "Population structure",
    "section": "A known pitfall of PCA: uneven sampling",
    "text": "A known pitfall of PCA: uneven sampling\n\n\n\n\n\n\n\n(McVean, 2009)\n\n“The results described here provide an explanation. First, from Equation 10 it can be seen that the matrix M is influenced by the relative sample size from each population through the components \\(t_i\\). For instance, even if all populations are equally divergent from each other, those for which there are fewer samples will have larger values of \\(t_i\\) because relatively more pairwise comparisons are between populations.”\n\\[M=XX^T=\\frac{1}{N}\\sum_{ij}x_ix_j\\] \\[N=N_{pop1}+N_{pop2}+N_{pop3}+...=\\sum_k N_k\\] \\[M_{uneven}=\\sum_{ijk}\\frac{1}{N_k}x_{ik}x_{jk}\\]\n\nPotential solution: normalize each sample by its population size before computing the covariance matrix.\nIs it still an unsupervised technique?"
  },
  {
    "objectID": "slides/population_structure/index.html#example-of-uneven-sampling-from-1000g-project",
    "href": "slides/population_structure/index.html#example-of-uneven-sampling-from-1000g-project",
    "title": "Population structure",
    "section": "Example of uneven sampling from 1000G project",
    "text": "Example of uneven sampling from 1000G project\n\n\n\nDownsampled Europeans\n\n\nDownsampled Asians"
  },
  {
    "objectID": "slides/population_structure/index.html#admixture-underlying-assumtions",
    "href": "slides/population_structure/index.html#admixture-underlying-assumtions",
    "title": "Population structure",
    "section": "Admixture: underlying assumtions",
    "text": "Admixture: underlying assumtions\n\n\n\n\n\ngenetic clustering algorithm\nat least two unadmixed populations\nat least one admixed population\nMaximum Likelihood: ADMIXTURE\nBayesian: STRUCTURE\ndelivers admixture proportions Q\ndelivers allele frequencies F for all loci for all K populations"
  },
  {
    "objectID": "slides/population_structure/index.html#q-and-f-outputs-of-admixture-analysis",
    "href": "slides/population_structure/index.html#q-and-f-outputs-of-admixture-analysis",
    "title": "Population structure",
    "section": "Q and F outputs of admixture analysis",
    "text": "Q and F outputs of admixture analysis"
  },
  {
    "objectID": "slides/population_structure/index.html#ngsadmix-vs.-admixture",
    "href": "slides/population_structure/index.html#ngsadmix-vs.-admixture",
    "title": "Population structure",
    "section": "NGSadmix vs. ADMIXTURE",
    "text": "NGSadmix vs. ADMIXTURE"
  },
  {
    "objectID": "slides/population_structure/index.html#example-of-admixture-plot-from-1000g-project",
    "href": "slides/population_structure/index.html#example-of-admixture-plot-from-1000g-project",
    "title": "Population structure",
    "section": "Example of admixture plot from 1000G project",
    "text": "Example of admixture plot from 1000G project\n\n\nWe will use ANGSD (Korneliussen T, 2014) and compute genotype likelihoods on 435 bam-files from the 1000G project.\n\ncd /home/nikolay/Documents/Teaching/PopGen_2023/data/1000G_bam_files\nfind $PWD -name '*.bam' &gt; 1000G_bam_list.txt\nangsd -bam 1000G_bam_list.txt -GL 2 -doMajorMinor 1 -doMaf 1 -SNP_pval 2e-6 \\\n-minMapQ 30 -minQ 20 -minInd 25 -minMaf 0.05 -doGlf 2 -out 1000G -P 5\n\nNext, we will run NGSadmix to infer admixures proportions:\n\nNGSadmix -likes 1000G.beagle.gz -K 3 -minMaf 0.05 -seed 1 -o 1000G\n\nand finally we will plots the results using custom R scripts:\n\npops &lt;- readLines(\"1000G_bam_list.txt\")\npops &lt;- sapply(strsplit(pops, \"\\\\.\"), function(x) x[6])\nsource(\"https://raw.githubusercontent.com/GenisGE/evalAdmix/master/visFuns.R\")\nqopts &lt;- read.table(\"1000G.qopt\")\nord &lt;- orderInds(pop = pops, q = qopts, popord = c(\"YRI\", \"ASW\", \"CEU\", \"MXL\",\n    \"CHB\"))\nbarplot(t(qopts)[, ord], col = c(3, 2, 4), las = 2, space = 0, border = NA)\ntext(sort(tapply(1:length(pops), pops[ord], mean)), -0.05, unique(pops[ord]))\nabline(v = cumsum(sapply(unique(pops[ord]), function(x) {\n    sum(pops[ord] == x)\n})), col = 1, lwd = 1.2)"
  },
  {
    "objectID": "slides/population_structure/index.html#admixture-bar-plots-should-not-be-over-interpreted",
    "href": "slides/population_structure/index.html#admixture-bar-plots-should-not-be-over-interpreted",
    "title": "Population structure",
    "section": "Admixture bar plots should not be over-interpreted",
    "text": "Admixture bar plots should not be over-interpreted\n\n(Lawson DJ, 2018)"
  },
  {
    "objectID": "slides/population_structure/index.html#haplotype-clustering",
    "href": "slides/population_structure/index.html#haplotype-clustering",
    "title": "Population structure",
    "section": "Haplotype clustering",
    "text": "Haplotype clustering\n\n\n\n\n\n\n\n\n\nAncestry assignments in STRUCTURE / ADMIXTURE do not identify where admixture has occurred\nHaplotype-based methods explore local ancestry, LD, recombination and subsequently fine-scale patterns of population structure at different scales\nChromosome painting: the genome is a mosaic of LD blocks separated by recombination\nChromoPainter and fineSTRUCTURE are tools for resolving subtle differences between populations.\n\n(D. Lawson, 2012)\n(Schraiber & Akey, 2015)"
  },
  {
    "objectID": "slides/population_structure/index.html#fixation-index-f_st",
    "href": "slides/population_structure/index.html#fixation-index-f_st",
    "title": "Population structure",
    "section": "Fixation index \\(F_{st}\\)",
    "text": "Fixation index \\(F_{st}\\)\n\n\n\n\\(F_{st}\\) is a measure of population differentiation due to population structure\nExpressed through nucleotide diversity \\(\\pi\\) as relative nucleotide diversity between populations minus average nucleotide diversity within populations. If we have two populations 1 and 2, then:\n\n\\[\nF_{st}=\\frac{\\pi_{12}-\\frac{\\pi_{1}+\\pi_{2}}{2}}{\\pi_{12}} \\sim\n\\frac{\\sigma_{subpops}^2}{\\sigma_{total}^2}\n\\]\n\nlibrary(\"admixtools\")\nlibrary(\"tidyverse\")\n\nadmixtools::extract_f2(\"AADR\", outdir = \"f2_AADR\")\n\nf2_aadr &lt;- read_f2(\"f2_AADR\")\nfst_aadr &lt;- fst(f2_aadr)\nfst_aadr\n\nmat &lt;- f2(f2_aadr, unique_only = F) %&gt;%\n    select(-se) %&gt;%\n    pivot_wider(names_from = pop2, values_from = est) %&gt;%\n    column_to_rownames(\"pop1\") %&gt;%\n    as.matrix()\n\nlibrary(\"pheatmap\")\npheatmap(mat, cluster_rows = TRUE, cluster_cols = TRUE)"
  },
  {
    "objectID": "slides/population_structure/index.html#allen-ancient-dna-resource-aadr-dataset",
    "href": "slides/population_structure/index.html#allen-ancient-dna-resource-aadr-dataset",
    "title": "Population structure",
    "section": "Allen Ancient DNA Resource (AADR) dataset",
    "text": "Allen Ancient DNA Resource (AADR) dataset\n\n\n\n https://reich.hms.harvard.edu/allen-ancient-dna-resource-aadr-downloadable-genotypes-present-day-and-ancient-dna-data\n\n\n\nhead data/DavidReich/AADR.ind\n\n             ALT-116 M    Tubalar\n             ALT-117 M    Tubalar\n             ALT-165 M    Tubalar\n             ALT-845 M    Tubalar\n             ALT-846 M    Tubalar\n             GEO-002 M   Georgian\n             GEO-005 M   Georgian\n             GEO-010 M   Georgian\n             GEO-015 M   Georgian\n             GEO-020 M   Georgian\n\n\n\nhead -n 8 data/DavidReich/AADR.snp\n\n           rs3094315     1        0.020130          752566 G A\n           rs7419119     1        0.022518          842013 T G\n          rs13302957     1        0.024116          891021 G A\n           rs6696609     1        0.024457          903426 C T\n              rs8997     1        0.025727          949654 A G\n           rs9442372     1        0.026288         1018704 A G\n         rs147606383     1        0.026665         1045331 G A\n           rs4970405     1        0.026674         1048955 A G\n\n\n\nhead data/DavidReich/AADR.geno\n\nnnnnnnnnn
  },
  {
    "objectID": "slides/population_structure/index.html#example-of-fst-computation-from-1000g-project",
    "href": "slides/population_structure/index.html#example-of-fst-computation-from-1000g-project",
    "title": "Population structure",
    "section": "Example of Fst computation from 1000G project",
    "text": "Example of Fst computation from 1000G project\n\n\nWe will use ANGSD (Korneliussen T, 2014) and compute Fst between CEU and YRI populations from the 1000G project.\n\nangsd -b 1000G_CEU_bam_list.txt -anc anc.fa -out CEU -dosaf 1 -gl 1\nangsd -b 1000G_YRI_bam_list.txt -anc anc.fa -out YRI -dosaf 1 -gl 1\nrealSFS CEU.saf.idx YRI.saf.idx &gt; CEU.YRI.ml\nrealSFS fst index CEU.saf.idx YRI.saf.idx -sfs CEU.YRI.ml -fstout CEU_YRI\nrealSFS fst stats  CEU_YRI.fst.idx\nrealSFS fst stats2 CEU_YRI.fst.idx -win 50 -step 10 &gt; slidingwindow_win50_step10\n\nand finally we will plots the results using custom R scripts:\n\ndf &lt;- read.delim(\"slidingwindow_win50_step10\", header = FALSE)\ndf &lt;- df[-1, ]\ndf$V2 &lt;- as.numeric(df$V2)\ndf$V3 &lt;- as.numeric(df$V3)\ndf$V5 &lt;- as.numeric(df$V5)\ndf &lt;- df[order(df$V2, df$V3), ]\nrownames(df) &lt;- seq(1, dim(df)[1], 1)\nplot(df$V5, col = df$V2, xlab = \"Chromosomes\", ylab = \"Fst\", xaxt = \"n\")\nmyticks &lt;- as.numeric(rownames(df[!duplicated(df$V2), ]))\naxis(side = 1, at = myticks, labels = seq(1, 21, 1))"
  },
  {
    "objectID": "slides/population_structure/index.html#f-statistics-underlying-assumtions",
    "href": "slides/population_structure/index.html#f-statistics-underlying-assumtions",
    "title": "Population structure",
    "section": "F-statistics: underlying assumtions",
    "text": "F-statistics: underlying assumtions\n\n\n\n\n\nTreeness test: are populations related in a tree-like fashion (Reich et al. 2009)?\nAdmixture test: ss a particular population descended from multiple ancestral populations (Reich et al. 2009)?\nAdmixture proportions: what are the contributions from different populations to a focal population (Green et al. 2010; Haak et al. 2015)?\nNumber of founders: how many founder populations are there for a certain region (Reich et al. 2012; Lazaridis et al. 2014)?\nComplex demography: how can mixtures and splits of population explain demography (Patterson et al. 2012; Lipson et al. 2013)?\nClosest relative: what is the closest relative to a contemporary or ancient population (Raghavan et al. 2014)?\n\n(Peter, 2016)"
  },
  {
    "objectID": "slides/population_structure/index.html#f2-statistic-and-f3-statistic",
    "href": "slides/population_structure/index.html#f2-statistic-and-f3-statistic",
    "title": "Population structure",
    "section": "F2-statistic and F3-statistic",
    "text": "F2-statistic and F3-statistic\n\n\n\n\\(F_2\\) is a covarinace in contrast to \\(F_{st}\\) which is a correlation coefficeint, therefore \\(F_2\\) is tree-additive by its definition\n\n\\[F_2=2\\pi_{12}-\\pi_{1}-\\pi_{2}\\]\n\n\\(F_3\\) can be expressed through a combination of \\(F_2\\)-statistic\n\n\\[F_3(P_X; P_1, P_2)=\\frac{1}{2}\\left(F_2(P_X, P_1)+F_2(P_X, P_2)-F_2(P_1, P_2)\\right)\\]\n\nOutgroup \\(F_3\\)-statistic: for an unknown population \\(P_X\\) find the closest population from a panel \\(P_i\\) computing the distances via an outgroup \\(P_O\\)."
  },
  {
    "objectID": "slides/population_structure/index.html#example-of-f3-outgroup-statistic-for-an-unknown-population",
    "href": "slides/population_structure/index.html#example-of-f3-outgroup-statistic-for-an-unknown-population",
    "title": "Population structure",
    "section": "Example of F3-outgroup-statistic for an Unknown population",
    "text": "Example of F3-outgroup-statistic for an Unknown population\n\n\nWe will use the AADR dataset and compute F3-statistic for a (presumably!) European population, which is marked as Unknown in the dataset, with respect to a panel of other World populations using a Mbuti as an outgroup population.\n\nlibrary(\"admixtools\")\nlibrary(\"tidyverse\")\n\nadmixtools::extract_f2(\"AADR\", outdir = \"f2_AADR\")\n\nf2_aadr &lt;- read_f2(\"f2_AADR\")\nfst_aadr &lt;- fst(f2_aadr)\nfst_aadr\n\nf3_aadr &lt;- f3(f2_aadr, pop1 = \"Mbuti\", pop2 = \"Unknown\", pop3 = unique(ind$pop)) %&gt;%\n    arrange(est)\nf3_aadr\n\n\nviz_outgroup_f3 &lt;- function(f3_res) {\n    f3_res %&gt;%\n        mutate(pop3 = fct_reorder(pop3, est)) %&gt;%\n        ggplot(aes(x = pop3, y = est, ymin = est - 3 * se, ymax = est + 3 * se)) +\n        geom_point() + geom_errorbar() + coord_flip() + theme_bw(25) + xlab(NULL) +\n        ylab(\"f3\")\n}\nviz_outgroup_f3(f3_aadr)\n\nCan you guess what was the Unknown population?"
  },
  {
    "objectID": "slides/population_structure/index.html#relation-between-f-statistics-and-pca",
    "href": "slides/population_structure/index.html#relation-between-f-statistics-and-pca",
    "title": "Population structure",
    "section": "Relation between F-statistics and PCA",
    "text": "Relation between F-statistics and PCA\n\n(Peter, 2022)"
  },
  {
    "objectID": "slides/population_structure/index.html#f4-statistic-d-statistic-abba-baba-test",
    "href": "slides/population_structure/index.html#f4-statistic-d-statistic-abba-baba-test",
    "title": "Population structure",
    "section": "F4-statistic, D-statistic: ABBA-BABA test",
    "text": "F4-statistic, D-statistic: ABBA-BABA test\n\n\n\n\n\n\n\n\n\nFour populations considered: Ape is an outgroup, Europeans and Africans are tested for their gene flow with Neanderthals\nA – ancestral allele, B – derived allele\nCount number of sites corresponding to ABBA and BABA situations\n\n\\[D=\\frac{N_{ABBA}-N_{BABA}}{N_{ABBA}+N_{BABA}}\\]\n\n\\(N_{ABBA}\\) the total counts of ABBA patterns, \\(N_{BABA}\\) the total counts of BABA patterns\nExess of shared derived alleles between Europeans and Neanderthals indicates a gene flow between them\nPositive values of D imply Neanderthals are closer to Europeans\nNegative values of D imply Neanderthals are closer to Africans"
  },
  {
    "objectID": "slides/population_structure/index.html#example-of-d-statistic-computation-from-1000g-project",
    "href": "slides/population_structure/index.html#example-of-d-statistic-computation-from-1000g-project",
    "title": "Population structure",
    "section": "Example of D-statistic computation from 1000G project",
    "text": "Example of D-statistic computation from 1000G project\n\n\nWe will use ANGSD (Korneliussen T, 2014) and compute D-statistic in irder to test potential Neanderthal introgression to European (CEU) and African (YRI) populations from the 1000G project.\n\necho Neandertal.bam &gt; bams\nfind $PWD -name '*YRI*.bam' | head -10 &gt;&gt; bams\nfind $PWD -name '*CEU*.bam' | head -10 &gt;&gt; bams\nangsd -out out -doAbbababa 1 -bam bams -doCounts 1 -anc anc.fa\nRscript jackKnife.R file=out.abbababa indNames=bams outfile=out_abbababa_results\n\nand, finally, we will display the resulting table of D-statistics and plot the ABBA and BABA counts using custom R scripts:\n\ndf &lt;- read.delim(file.path(path, \"out_abbababa_results.txt\"), header = T, sep = \"\\t\")\ndf &lt;- df[grepl(\"Neandertal\", as.character(df$H3)), ]\ndf &lt;- df[grepl(\"CEU\", as.character(df$H2)), ]\ndf &lt;- df[grepl(\"YRI\", as.character(df$H1)), ]\nYRI &lt;- matrix(unlist(strsplit(as.character(df$H1), \"\\\\.\")), ncol = 9, byrow = T)\ndf$H1 &lt;- paste(YRI[, 6], YRI[, 2], sep = \"_\")\nCEU &lt;- matrix(unlist(strsplit(as.character(df$H2), \"\\\\.\")), ncol = 9, byrow = T)\ndf$H2 &lt;- paste(CEU[, 6], CEU[, 2], sep = \"_\")\ndf$H3 &lt;- \"NEAND\"\ndf[1:8, 1:8]\n\n            H1          H2    H3 nABBA nBABA       Dstat     jackEst        SE\n11 YRI_NA19102 CEU_NA12342 NEAND    51    46  0.05154639  0.05154639 0.1220787\n12 YRI_NA19213 CEU_NA12342 NEAND    38    31  0.10144930  0.10144930 0.1286760\n13 YRI_NA18504 CEU_NA12342 NEAND    50    53 -0.02912621 -0.02912621 0.1353893\n14 YRI_NA19108 CEU_NA12342 NEAND    38    42 -0.05000000 -0.05000000 0.1393287\n15 YRI_NA19238 CEU_NA12342 NEAND    44    38  0.07317073  0.07317073 0.1305890\n16 YRI_NA19102 CEU_NA12348 NEAND    46    45  0.01098901  0.01098901 0.1076116\n17 YRI_NA19213 CEU_NA12348 NEAND    37    34  0.04225352  0.04225352 0.1122396\n18 YRI_NA18504 CEU_NA12348 NEAND    42    49 -0.07692308 -0.07692308 0.1068372\n\n\n\n\nboxplot(df$nABBA, df$nBABA, names = c(\"ABBA\", \"BABA\"), ylab = \"COUNTS\", col = 2)\n\n\n\nwilcox.test(df$nABBA, df$nBABA)\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  df$nABBA and df$nBABA\nW = 367, p-value = 0.2933\nalternative hypothesis: true location shift is not equal to 0"
  },
  {
    "objectID": "slides/population_structure/index.html#refs",
    "href": "slides/population_structure/index.html#refs",
    "title": "Population structure",
    "section": "Refs",
    "text": "Refs\n\n\nD. Lawson, S. M., G. Hellenthal. (2012). Inference of population structure using dense haplotype data. PLoS Genet. 8(1):e1002453. https://doi.org/doi: 10.1371/journal.pgen.1002453\n\n\nKorneliussen T, N. R., Albrechtsen A. (2014). ANGSD: Analysis of next generation sequencing data. BMC Bioinformatics 15(1):356. https://doi.org/doi: 10.1186/s12859-014-0356-4\n\n\nLawson DJ, F. D., van Dorp L. (2018). A tutorial on how not to over-interpret STRUCTURE and ADMIXTURE bar plots. Nat Commun. 14;9(1):3258. https://doi.org/doi: 10.1038/s41467-018-05257-7\n\n\nMcVean. (2009). A genealogical interpretation of principal components analysis. PLoS Genetics Oct;5(10):e1000686. https://doi.org/doi: 10.1371/journal.pgen.1000686\n\n\nMenozzi P, C.-S. L., Piazza A. (1978). Synthetic maps of human gene frequencies in europeans. Science 1;201(4358):786-92. https://doi.org/doi: 10.1126/science.356262\n\n\nNovembre J, B. K., Johnson T. (2008). Genes mirror geography within europe. Nature. 2008 Nov 6;456(7218):98-101. https://doi.org/doi: 10.1038/nature07331\n\n\nPeter, B. (2016). Admixture, population structure, and f-statistics. Genetics 202(4):1485-501. https://doi.org/doi: 10.1534/genetics.115.183913\n\n\nPeter, B. (2022). A geometric relationship of F2, F3 and F4-statistics with principal component analysis. Philos Trans R Soc Lond B Biol Sci. 377(1852):20200413. https://doi.org/doi: 10.1098/rstb.2020.0413\n\n\nSchraiber, J., & Akey, J. (2015). Methods and models for unravelling human evolutionary history. Nat Rev Genet. 16(12):727-40. https://doi.org/doi: 10.1038/nrg4005\n\n\n\n\nPopulation structure"
  },
  {
    "objectID": "recipes/slim/index.html",
    "href": "recipes/slim/index.html",
    "title": "\n1 SLiM recipes",
    "section": "",
    "text": "SLiM recipes can be run with wrapper pgip-slim to generate multiple simulations.\n\nCodepgip-slim --help\n## Usage: pgip-slim [OPTIONS] SLIM\n## \n##   pgip slim simulator CLI.\n## \n##   Wrapper that runs slim on SLIM controlfile.\n## \n## Options:\n##   -o, --outdir PATH               Output directory\n##   -N, --population-size INTEGER   Population size\n##   -r, --recombination_rate FLOAT  Recombination rate\n##   -m, --mutation_rate FLOAT       Mutation rate\n##   -l, --sequence_length INTEGER   Sequence length\n##   -n, --repetitions INTEGER RANGE\n##                                   Number of repetitions  [x&gt;=1]\n##   --seed TEXT                     Random seed\n##   --threads INTEGER RANGE         Number of parallel threads to run  [x&gt;=1]\n##   --prefix TEXT                   File output prefix\n##   --no-recapitate                 Don't do recapitation\n##   --debug                         Print debugging info\n##   --help                          Show this message and exit.\n\n\nAs an example, the following command can be used to generate 10 simulations using the selective sweep recipe.\n\nCodepgip-slim --seed 42 -n 10 -r 1e-6 -m 1e-7 --threads 12 \\\n    selective_sweep.slim -l 1000000 --outdir results/slim\n\n\n\n\nslim code to simulate a selective sweep at a locus on a 1Mbp chromosome, with mutation rate \\(\\mu=10^{-8}\\), recombination rate \\(\\rho=10^{-8}\\), and \\(N_e=5,000\\).initialize() {\n  defineConstant(\"Nref\", 5e3);\n  if (!exists(\"seed\"))\n    defineConstant(\"seed\", getSeed());\n  defineConstant(\"SimID\", seed);\n  if (!exists(\"N\"))\n    defineConstant(\"N\", Nref);\n  if (!exists(\"outdir\"))\n    defineConstant(\"outdir\", tempdir());\n  if (!exists(\"mu\"))\n    defineConstant(\"mu\", 1e-8);\n  if (!exists(\"rho\"))\n    defineConstant(\"rho\", 1e-8);\n  if (!exists(\"seqlength\"))\n    defineConstant(\"seqlength\", 1e6);\n  if (!exists(\"position\"))\n    defineConstant(\"position\", asInteger(seqlength / 2));\n  if (!exists(\"outfile\"))\n    defineConstant(\"outfile\", outdir + \"slim_\" + SimID + \".rho_\" + rho + \".mu_\" + mu + \".N_\" + N + \".trees\");\n\n  setSeed(seed);\n\n  initializeTreeSeq(simplificationRatio=INF);\n  initializeMutationRate(0);\n  initializeMutationType(\"m1\", 0.5, \"f\", 0.0);\n  initializeMutationType(\"m2\", 1.0, \"f\", 0.5);  // introduced mutation\n  initializeGenomicElementType(\"g1\", m1, 1.0);\n  initializeGenomicElement(g1, 0, seqlength - 1);\n  initializeRecombinationRate(rho);\n}\n1 early() {\n  // Chapter 14.9: SLiM models diploid individuals that contain two\n  // haploid genomes; this is, at present, a design constraint in SLiM\n  // that cannot be modified. IOW: N individuals, 2*N genomes\n  sim.addSubpop(\"p1\", N);\n}\n1000 late() {\n  // introduce the sweep mutation\n  target = sample(p1.genomes, 1);\n  target.addNewDrawnMutation(m2, position);\n  // save the state of the simulation\n  sim.treeSeqOutput(tempdir() + \"slim_\" + SimID + \".trees\");\n}\n1000:100000 late() {\n  if (sim.countOfMutationsOfType(m2) == 0)\n    {\n      fixed = (sum(sim.substitutions.mutationType == m2) == 1);\n\n      if (fixed)\n    {\n      cat(SimID + \": FIXED\\n\");\n      cat(\"Writing output file : \" + outfile + \"\\n\");\n      sim.treeSeqOutput(outfile);\n      sim.simulationFinished();\n    }\n      else\n    {\n      cat(SimID + \": LOST - RESTARTING\\n\");\n\n      // go back to tick 1000\n      sim.readFromPopulationFile(tempdir() + \"slim_\" + SimID + \".trees\");\n      setSeed(rdunif(1, 0, asInteger(2^62) - 1));\n    }\n    }\n}\n\n\nRecipe to simulate a selective sweep.\n\n\nslim code to simulate a neutrally evolving locus on a 100kbp chromosome, with mutation rate \\(\\mu=10^{-8}\\), recombination rate \\(\\rho=10^{-8}\\), and \\(N_e=5,000\\).initialize() {\n  defineConstant(\"Nref\", 5e3);\n  if (!exists(\"seed\"))\n    defineConstant(\"seed\", getSeed());\n  defineConstant(\"SimID\", seed);\n  if (!exists(\"N\"))\n    defineConstant(\"N\", Nref);\n  if (!exists(\"outdir\"))\n    defineConstant(\"outdir\", tempdir());\n  if (!exists(\"mu\"))\n    defineConstant(\"mu\", 1e-7);\n  if (!exists(\"rho\"))\n    defineConstant(\"rho\", 1e-8);\n  if (!exists(\"seqlength\"))\n    defineConstant(\"seqlength\", 1e5);\n  if (!exists(\"outfile\"))\n    defineConstant(\"outfile\", outdir + \"slim_\" + SimID + \".rho_\" + rho + \".mu_\" + mu + \".N_\" + N + \".trees\");\n  setSeed(seed);\n\n  initializeTreeSeq(simplificationRatio=INF);\n  initializeMutationRate(0);\n  initializeMutationType(\"m1\", 0.5, \"f\", 0.0);\n  initializeGenomicElementType(\"g1\", m1, 1.0);\n  initializeGenomicElement(g1, 0, seqlength - 1);\n  initializeRecombinationRate(rho);\n}\n1 early() {\n  sim.addSubpop(\"p1\", N);\n}\n10000 early() {\n      cat(\"Writing output file : \" + outfile + \"\\n\");\n      sim.treeSeqOutput(outfile);\n      sim.simulationFinished();\n}\n\n\nRecipe to simulate a neutrally evolving locus."
  },
  {
    "objectID": "recipes/slim/index.html#sec-slim-recipe-selective-sweep",
    "href": "recipes/slim/index.html#sec-slim-recipe-selective-sweep",
    "title": "\n1 SLiM recipes",
    "section": "",
    "text": "slim code to simulate a selective sweep at a locus on a 1Mbp chromosome, with mutation rate \\(\\mu=10^{-8}\\), recombination rate \\(\\rho=10^{-8}\\), and \\(N_e=5,000\\).initialize() {\n  defineConstant(\"Nref\", 5e3);\n  if (!exists(\"seed\"))\n    defineConstant(\"seed\", getSeed());\n  defineConstant(\"SimID\", seed);\n  if (!exists(\"N\"))\n    defineConstant(\"N\", Nref);\n  if (!exists(\"outdir\"))\n    defineConstant(\"outdir\", tempdir());\n  if (!exists(\"mu\"))\n    defineConstant(\"mu\", 1e-8);\n  if (!exists(\"rho\"))\n    defineConstant(\"rho\", 1e-8);\n  if (!exists(\"seqlength\"))\n    defineConstant(\"seqlength\", 1e6);\n  if (!exists(\"position\"))\n    defineConstant(\"position\", asInteger(seqlength / 2));\n  if (!exists(\"outfile\"))\n    defineConstant(\"outfile\", outdir + \"slim_\" + SimID + \".rho_\" + rho + \".mu_\" + mu + \".N_\" + N + \".trees\");\n\n  setSeed(seed);\n\n  initializeTreeSeq(simplificationRatio=INF);\n  initializeMutationRate(0);\n  initializeMutationType(\"m1\", 0.5, \"f\", 0.0);\n  initializeMutationType(\"m2\", 1.0, \"f\", 0.5);  // introduced mutation\n  initializeGenomicElementType(\"g1\", m1, 1.0);\n  initializeGenomicElement(g1, 0, seqlength - 1);\n  initializeRecombinationRate(rho);\n}\n1 early() {\n  // Chapter 14.9: SLiM models diploid individuals that contain two\n  // haploid genomes; this is, at present, a design constraint in SLiM\n  // that cannot be modified. IOW: N individuals, 2*N genomes\n  sim.addSubpop(\"p1\", N);\n}\n1000 late() {\n  // introduce the sweep mutation\n  target = sample(p1.genomes, 1);\n  target.addNewDrawnMutation(m2, position);\n  // save the state of the simulation\n  sim.treeSeqOutput(tempdir() + \"slim_\" + SimID + \".trees\");\n}\n1000:100000 late() {\n  if (sim.countOfMutationsOfType(m2) == 0)\n    {\n      fixed = (sum(sim.substitutions.mutationType == m2) == 1);\n\n      if (fixed)\n    {\n      cat(SimID + \": FIXED\\n\");\n      cat(\"Writing output file : \" + outfile + \"\\n\");\n      sim.treeSeqOutput(outfile);\n      sim.simulationFinished();\n    }\n      else\n    {\n      cat(SimID + \": LOST - RESTARTING\\n\");\n\n      // go back to tick 1000\n      sim.readFromPopulationFile(tempdir() + \"slim_\" + SimID + \".trees\");\n      setSeed(rdunif(1, 0, asInteger(2^62) - 1));\n    }\n    }\n}\n\n\nRecipe to simulate a selective sweep."
  },
  {
    "objectID": "recipes/slim/index.html#sec-slim-recipe-neutral",
    "href": "recipes/slim/index.html#sec-slim-recipe-neutral",
    "title": "\n1 SLiM recipes",
    "section": "",
    "text": "slim code to simulate a neutrally evolving locus on a 100kbp chromosome, with mutation rate \\(\\mu=10^{-8}\\), recombination rate \\(\\rho=10^{-8}\\), and \\(N_e=5,000\\).initialize() {\n  defineConstant(\"Nref\", 5e3);\n  if (!exists(\"seed\"))\n    defineConstant(\"seed\", getSeed());\n  defineConstant(\"SimID\", seed);\n  if (!exists(\"N\"))\n    defineConstant(\"N\", Nref);\n  if (!exists(\"outdir\"))\n    defineConstant(\"outdir\", tempdir());\n  if (!exists(\"mu\"))\n    defineConstant(\"mu\", 1e-7);\n  if (!exists(\"rho\"))\n    defineConstant(\"rho\", 1e-8);\n  if (!exists(\"seqlength\"))\n    defineConstant(\"seqlength\", 1e5);\n  if (!exists(\"outfile\"))\n    defineConstant(\"outfile\", outdir + \"slim_\" + SimID + \".rho_\" + rho + \".mu_\" + mu + \".N_\" + N + \".trees\");\n  setSeed(seed);\n\n  initializeTreeSeq(simplificationRatio=INF);\n  initializeMutationRate(0);\n  initializeMutationType(\"m1\", 0.5, \"f\", 0.0);\n  initializeGenomicElementType(\"g1\", m1, 1.0);\n  initializeGenomicElement(g1, 0, seqlength - 1);\n  initializeRecombinationRate(rho);\n}\n1 early() {\n  sim.addSubpop(\"p1\", N);\n}\n10000 early() {\n      cat(\"Writing output file : \" + outfile + \"\\n\");\n      sim.treeSeqOutput(outfile);\n      sim.simulationFinished();\n}\n\n\nRecipe to simulate a neutrally evolving locus."
  }
]