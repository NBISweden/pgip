---
title: "Schedule"
toc: false
date: last-modified
sidebar: false
format:
  html:
    number-sections: false
    template-partials:
      - assets/www/title-block.html
execute:
  cache: false
---

[**{{< meta date >}}: Note that the schedule is tentative and subject to change!**]{.large}

```{r }
#| label: schedule
#| echo: false
#| eval: true
library(lubridate)
library(dplyr)
library(kableExtra)
library(formattable)
library(yaml)

schedule_message <- yaml::read_yaml("_site.yml")$schedule_message

color_primary <- "#a7c947"

s <- read.csv("schedule.csv",
  sep = ";", stringsAsFactors = FALSE,
  header = TRUE, na.strings = "", colClasses = "character"
)
# remove rows that are completely NA
s <- s[!apply(s, 1, function(x) all(is.na(x))), ]
```

```{r }
#| label: markdown-schedule
#| echo: false
#| eval: true
format_string <- function(s, fmt) {
  paste0("[", s, "]{", fmt, "}")
}
smkd <- s %>%
  # missing values in date and room are filled
  tidyr::fill(date, room, link_room, .direction = "down") %>%
  # convert date characters to date objects
  dplyr::mutate(date = format(as_datetime(date), "%d-%b-%Y")) %>%
  dplyr::mutate(day = format(as_datetime(date, format = "%d-%b-%Y"), "%a")) %>%
  dplyr::group_by(date) %>%
  dplyr::mutate(
    start_time = format(as_datetime(start_time, format = "%H:%M:%S"), "%H:%M"),
    end_time = format(as_datetime(end_time, format = "%H:%M:%S"), "%H:%M")
  ) %>%
  as.data.frame() %>%
  dplyr::mutate(room = ifelse(is.na(link_room), room,
    paste0("[", room, "](", link_room, ")")
  )) %>%
  # create links
  dplyr::mutate(link_lab = ifelse(
    is.na(link_lab), NA,
    gsub(",", "", gsub(
      "([^,]+)", " **[{{< fa file-alt >}}](\\1)**",
      link_lab
    ))
  )) %>%
  dplyr::mutate(link_slide = ifelse(
    is.na(link_slide), NA,
    paste0("**[{{< fa file-powerpoint >}}](", link_slide, ")**")
  )) %>%
  dplyr::mutate(date = paste(
    "**{{< fa calendar >}}**", format_string(date, ".table-date"),
    format_string(day, ".day-highlight"), "**{{< fa map-marker-alt >}}**",
    room
  )) %>%
  # style topic
  dplyr::mutate(topic = ifelse(
    tolower(topic) == "coffee break" |
      tolower(topic) == "lunch" |
      tolower(topic) == "dinner" |
      tolower(topic) == "coffee and registration",
    paste0("[", topic, "]{.topic-highlight}"),
    paste0("[", topic, "]{.topic}")
  )) %>%
  # add links to topic
  dplyr::mutate(topic = ifelse(is.na(link_slide), topic, paste(topic, link_slide))) %>%
  dplyr::mutate(topic = ifelse(is.na(link_lab), topic, paste(topic, link_lab))) %>%
  dplyr::mutate(topic = ifelse(is.na(link_youtube), topic,
    paste(topic, link_youtube, "{{< fa youtube >}}")
  )) %>%
  dplyr::mutate(time = paste0(start_time, " - ", end_time)) %>%
  dplyr::mutate(teacher = ifelse(is.na(teacher), "", teacher)) %>%
  dplyr::mutate(assistant = ifelse(is.na(assistant), "", assistant)) %>%
  dplyr::select(date, room, time, topic, teacher, assistant)

if (all(is.na(smkd$assistant)) | all(smkd$assistant == "")) smkd$assistant <- NULL
```

```{r }
#| label: schedule-message
#| echo: false
#| eval: true
#| out-width: 100%
#| output: asis
if (!is.null(schedule_message) & nchar(schedule_message) != 0) {
  cat(paste0("::: {.callout-note}\n", schedule_message, "\n:::\n<br>\n"))
}
```

::: {.contents-table}

```{r }
#| label: schedule-table-markdown-out
#| echo: false
#| eval: true
#| results: asis
cnames <- c("Date", "Time", "Topic", "Teacher", "Assistant")
tab <- smkd %>%
  dplyr::select(, -room) %>%
  setNames(cnames[1:ncol(.)])
tabby <- by(tab, tab$Date, function(x) {
  x
})

for (date in names(tabby)) {
  cat(date)
  cat(
    print(kable(tabby[[date]][, 2:5], format = "pipe", escape = FALSE, row.names = FALSE)),
    "\n\n: {.hover .condensed .responsive tbl-colwidths=\"[20, 40, 25, 15]\"}\n\n"
  )
}
```

<!-- marker legend -->
<p class="small" style="margin-top:20px;">
<span>
<span style="margin-left:6px; margin-right:6px;">
{{< fa calendar >}} Date </span>
<span style="margin-left:6px; margin-right:6px;">
{{< fa map-marker-alt >}} Venue </span>
<span style="margin-left:6px; margin-right:6px;">
{{< fa file-powerpoint >}} Slides </span>
<span style="margin-left:6px; margin-right:6px;">
{{< fa file-alt >}} Exercises </span>
</span>
</p>

```{r }
#| label: assistant-list
#| echo: false
#| eval: true
#| results: asis
# add assistant list if present
asst <- yaml::read_yaml("_site.yml")$assistant

if (!is.null(asst)) {
  cat(
    '<p class="small" style="margin-top:20px;">',
    '<span style="margin-left:4px; margin-right:4px;">',
    '<i class="fas fa-users" style="margin-left:4px; margin-right:4px;"></i></span>',
    paste(asst, collapse = ", "),
    "</p>"
  )
}
```

:::

::: {.landing-update}

::: {.smallest}

Last updated on {{< fa calendar-alt >}} {{< meta date >}}

:::

:::
